{"version":3,"sources":["state/supported-tokens/hooks.tsx","components/SupportedLifeCyle/index.tsx","components/ProgressBar/index.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","pages/CreateRecurringBillingModel/index.tsx"],"names":["useSupportedTokens","chainId","useActiveWeb3React","state","useSelector","supported_tokens","UNIT_MEASURES","y","mo","w","d","h","m","s","DEFAULT_PERIOD_VALUE","label","periodInSeconds","supportedLifecycles","env","statusOptionsValuesForMerchantDashboard","BillingModelTypeTitles","BillingModelTypes","Recurring","RecurringFreeTrial","RecurringPaidTrial","RecurringDynamic","Single","SingleDynamic","id","value","ProgressBarContainer","styled","div","ProgressBarChildContainer","ProgressBar","props","name","urlName","window","location","href","split","pop","className","checkUrlName","htmlFor","PopoverContainer","show","theme","bg2","bg3","transparentize","shadow1","text2","ReferenceElement","Arrow","Popover","content","children","placement","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","useEffect","current","tick","setInterval","clearInterval","useInterval","ref","style","popper","arrow","TooltipContainer","Tooltip","text","rest","MouseoverTooltip","setShow","open","useCallback","close","onMouseEnter","onMouseLeave","MainContent","InputController","Wrapper","AsideDiv","BtnWrapper","StyledLink","a","SwitchWrapper","TrailWrap","CreateRecurringBillingModel","t","useTranslation","useLocation","search","pathname","history","useHistory","selectNavToggle","useContext","NavToggle","query","URLSearchParams","billingModelId","get","billingModelTypeFromQuery","isEdit","includes","checkBillingModelType","isDynamic","trialType","BMTrialTypes","NoTrial","FreeTrial","PaidTrial","supportedTokens","billingModelType","setIsDynamic","address","symbol","decimals","currency","setCurrency","merchantName","setMerchantName","merchantUrl","setMerchantUrl","reference","setReference","title","setTitle","price","setPrice","bmFrequency","setbmFrequency","bmFrequencyPeriod","setbmFrequencyPeriod","noOfDurationPeriods","setForNoOfDurationPeriods","durationPeriod","setDurationPeriod","setTrialType","numberOfTrialPeriods","setEveryTrailPeriod","trialPeriod","setTrialPeriod","initialAmount","setInitialAmount","frequencyOptions","map","freq","process","trailPeriodOptions","currencyOptions","Object","keys","index","fromTokenDecimals","toString","bmFrequencyForEdit","getDuration","Number","noOfDurationPeriodsForEdit","trialPeriodForEdit","String","trialTypeForEdit","as","Link","to","src","ArrowRight","alt","width","overflowY","onSubmit","e","preventDefault","push","checked","toTokenDecimals","onUpdate","handleNextButtonClick","alignItems","setChecked","paddingLeft","display","questionIcon","type","onChange","target","placeholder","disabled","defaultValue","step","min","find","cycle","readOnly","onClick","lineHeight","marginLeft","goBack"],"mappings":"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","file":"static/js/7.44e880f9.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { AppState } from '../index';\nimport { SupportedTokenDetails } from './reducer';\n\nexport function useSupportedTokens(): {\n  [tokenAddress: string]: SupportedTokenDetails;\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['supported_tokens']>(state => state.supported_tokens);\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import { BillingModelTypes, BillingModelTypeTitles } from '../../utils';\n\nexport const UNIT_MEASURES = {\n  y: 31536000,\n  mo: 2592000,\n  w: 604800,\n  d: 86400,\n  h: 3600,\n  m: 60,\n  s: 1,\n};\n\nexport const DEFAULT_PERIOD_VALUE = {\n  label: 'Day(s)',\n  periodInSeconds: 86400,\n};\n\nexport const supportedLifecycles = [\n  {\n    label: 'Minute(s)',\n    periodInSeconds: 60,\n    env: 'TEST',\n  },\n  {\n    label: 'Hour(s)',\n    periodInSeconds: 3600, // an hour has 60m => 60 * 60\n    env: 'TEST',\n  },\n  {\n    label: 'Day(s)',\n    periodInSeconds: 86400, // an day has 24h => 3600 * 24\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Week(s)',\n    periodInSeconds: 604800, // a week has 7d => 86400 * 7\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Month(s)',\n    periodInSeconds: 2592000,\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Quarter(s)',\n    periodInSeconds: 7776000,\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Year(s)',\n    periodInSeconds: 31536000,\n    env: 'TEST,PROD',\n  },\n];\n\nexport const billingModelTypeOptionsValues = [\n  { id: 0, value: BillingModelTypeTitles['All'] },\n  { id: 1, value: BillingModelTypeTitles[BillingModelTypes.Recurring] },\n  {\n    id: 2,\n    value: BillingModelTypeTitles[BillingModelTypes.RecurringFreeTrial],\n  },\n  {\n    id: 3,\n    value: BillingModelTypeTitles[BillingModelTypes.RecurringPaidTrial],\n  },\n  { id: 4, value: BillingModelTypeTitles[BillingModelTypes.RecurringDynamic] },\n  { id: 5, value: BillingModelTypeTitles[BillingModelTypes.Single] },\n  { id: 6, value: BillingModelTypeTitles[BillingModelTypes.SingleDynamic] },\n];\n\nexport const statusOptionsValuesForMerchantDashboard = [\n  { id: 0, value: 'Status: All' },\n  { id: 1, value: 'ACTIVE' },\n  { id: 2, value: 'INACTIVE' },\n  { id: 3, value: 'SUSPENDED' },\n];\nexport const statusOptionsForSubscriptionDashboard = [\n  { id: 0, value: 'Status: All' },\n  { id: 1, value: 'ACTIVE' },\n  { id: 2, value: 'CANCELLED' },\n];\n","import styled from 'styled-components';\n\nconst ProgressBarContainer = styled.div`\n  padding-left: 30px;\n  width: 190px;\n  border-right: 1px solid #ddd;\n  padding-right: 10px;\n  margin-right: 20px;\n\n  .progress-item {\n    padding: 15px 0;\n    position: relative;\n    &:not(:last-child):before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      border: 1px solid #ddd;\n      top: 30px;\n      left: -20px;\n    }\n    span {\n      align-items: center;\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      position: absolute;\n      left: -29px;\n      display: flex;\n      justify-content: center;\n    }\n    span.pending {\n      background: #fff;\n      border: 1px solid #a3a3a3;\n    }\n    span.completed {\n      background: #00d48b;\n      &:before {\n        content: '';\n        display: inline-block;\n        width: 7px;\n        height: 4px;\n        border-left: 2px solid #fff;\n        border-bottom: 2px solid #fff;\n        transform: rotate(312deg);\n      }\n    }\n    span.current {\n      background: #00d48b;\n      &:before {\n        content: '';\n        display: inline-block;\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background: #fff;\n        transform: rotate(312deg);\n      }\n    }\n  }\n  label {\n    font-size: 16px;\n  }\n  p {\n    color: #756f82;\n    font-size: 12px;\n    margin-top: 5px;\n  }\n`;\nconst ProgressBarChildContainer = styled.div``;\nexport default function ProgressBar(props?: any) {\n  const urlName = window.location.href.split('/').pop();\n  return (\n    <ProgressBarContainer className=\"progressBar\">\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkUrlName(urlName) ? 'current' : 'completed'}></span>\n        <label htmlFor=\"\">Billing Model</label>\n        <p>Choose a billing model</p>\n      </ProgressBarChildContainer>\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkUrlName(urlName) ? 'pending' : 'current'}></span>\n        <label htmlFor=\"\">Setup</label>\n        <p>Set price and currency</p>\n      </ProgressBarChildContainer>\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkIntegrationUrlName(urlName) ? 'pending' : 'current'}></span>\n        <label htmlFor=\"\">Integration</label>\n        <p>Embed code snippet</p>\n      </ProgressBarChildContainer>\n    </ProgressBarContainer>\n  );\n}\n\nfunction checkUrlName(name: string) {\n  return name === 'create/choose-billing-model-type' ? true : false;\n}\n\nfunction checkIntegrationUrlName(name: string) {\n  return name === 'create/widget-preview' ? false : true;\n}\n","import { Placement } from '@popperjs/core';\nimport { transparentize } from 'polished';\nimport React, { useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport styled from 'styled-components';\nimport useInterval from '../../hooks/useInterval';\nimport Portal from '@reach/portal';\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\n  opacity: ${props => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`;\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`;\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.bg3};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.bg2};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`;\n\nexport interface PopoverProps {\n  content: React.ReactNode;\n  show: boolean;\n  children: React.ReactNode;\n  placement?: Placement;\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null);\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null);\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement>(null);\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  });\n  useInterval(update, show ? 100 : null);\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current;\n      current && current();\n    }\n\n    if (delay !== null) {\n      if (leading) tick();\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n    return;\n  }, [delay, leading]);\n}\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport Popover, { PopoverProps } from '../Popover';\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`;\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string;\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />;\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false);\n  const open = useCallback(() => setShow(true), [setShow]);\n  const close = useCallback(() => setShow(false), [setShow]);\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  );\n}\n","import { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Input, Select } from '@rebass/forms';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { Box } from 'rebass/styled-components';\nimport { ButtonPrimary } from '../../components/Button';\nimport {\n  BillingModelTypes,\n  BMTrialTypes,\n  fromTokenDecimals,\n  getDuration,\n  IDuration,\n  toTokenDecimals,\n} from '../../utils';\nimport { NavToggle } from '../App';\nimport Switch from '../../components/Switch';\nimport ProgressBar from '../../components/ProgressBar';\nimport ArrowRight from '../../assets/images/back-arrow.svg';\nimport questionIcon from '../../assets/images/question-mark.svg';\nimport { DEFAULT_PERIOD_VALUE, supportedLifecycles } from '../../components/SupportedLifeCyle';\nimport { useSupportedTokens } from '../../state/supported-tokens/hooks';\nimport { MouseoverTooltip } from '../../components/Tooltip';\n\nconst MainContent = styled.div`\n  color: #000;\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n    height: 80vh;\n    margin-top: 1rem;\n  }\n  input.without-arrow::-webkit-outer-spin-button,\n  input.without-arrow::-webkit-inner-spin-button{\n    -webkit-appearance: none;\n  }\n\n  #BoxPTag{\n    color:#756F82;\n    font-size:14px;\n    margin-bottom: 0px;\n    width:100%;\n    min-width:300px;\n  }\n  #Boxh3Tag{\n    margin-bottom: 0px;\n    font-size:24px;\n  }\n  .custom-input {\n    position: relative;\n    input{\n      font-size: 12px !important;\n    }\n    span.position-absolute {\n      position: absolute;\n      top: 50%;\n      transform: translate(4px, -50%);\n      font-size: 12px;\n    }\n  }\n\n  .AsideDivTwo{\n    margin-left:50px;\n    #smallSwitchTwo{\n      color:red;\n      margin:-2px 0;\n    }\n  }\n  .billing-wrap .input-fields {\n    display: inline-flex;\n    flex-direction: row;\n  }\n  .second-div {\n    margin-left: 20px;\n  }\n  h3{\n    font-weight: 400;\n    font-size: 18px;\n  }\n  b {\n    font-weight: 400;\n    font-size: 13px;\n  }\n\n  .billing-wrap select {\n    margin-left: 0px !Important;\n  }\n  .bottom-wrap p.info {\n    font-size: 14px;\n    color: #756F82;\n  }\n  .trailWrap {\n    margin-top:30px;\n  }\n  .trailWrap p {\n    font-size: 13px;\n    color: #756F82;\n\n  }\n  select, input{\n    border: 1px solid #EAE8EE;\n    padding: 10px;\n    border-radius: 4px;\n    width: 100%;\n    height: 38px;\n    font-size: 14px;\n\n  }\n  select:disabled, input:disabled{\n    background: #dddddd;\n  }\n  .arrow {\n    margin: 0 20px 0 0;\n    padding-top: 1.7rem;\n    cursor: pointer;\n  }\n  display: flex;\n  width: 100%;\n  .multi-controller {\n    display: flex;\n    > div{\n      min-width: 80px;\n    }\n    select{\n      border: 1px solid #EAE8EE;\n      border-right: 0;\n    }\n    input{\n      border-left: 0;\n    }\n  }\n  .select-controller{\n    display: flex;\n  }\n  .small-switch {\n    display: flex;\n    align-items: center;\n    float: left;\n    margin-top: 10px;\n    > p {\n      line-height: 2rem;\n      margin: 0 1rem;\n    }\n    > div {\n      width: 30px;\n      height: 14px;\n      input + div:before {\n        height: 10px;\n        width: 10px;\n        bottom: 2px;\n      }\n      img {\n        position: relative;\n        top: -6px;\n        margin-left: 1rem;\n      }\n    }\n    progressBar > p {\n      margin-left: 10px;\n      font-size: 14px;\n      padding-left: 10px;\n      color: #000;\n    }\n  }\n  .billing-wrap{\n    input, select{\n      border: 1px solid #EAE8EE;\n      padding: 10px;\n      border-radius: 4px;\n      height: 38px;\n      font-size: 14px;\n    }\n  }\n\n  padding-left: 100px;\n  .input-wrapper{\n    margin-top: 40px;\n    label {\n      font-size: 13px;\n      display: inline-block;\n      margin-bottom: 10px;\n    }\n  }\n\n  .progressBar{\n    display: inline-block;\n  }\n\n\n  .stepWrap {\n    display: flex;\n\n    &.edit {\n        cursor: not-allowed\n    }\n    \n    .steps {\n      width: 30%;\n      position: relative;\n      margin-top: 20px;\n      max-width: 200px;\n      margin-right: 20px;\n      input[type=\"radio\"] {\n        left: 0;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        z-index: 2;\n        opacity: 0;\n        &:checked ~ .borderSelect{\n          background: #02d48b;\n        }\n        &:checked ~ .select-with-radio span.radioShape {\n          background: #02d48b;\n        }\n      }\n\n\n      .borderSelect {\n        background: #B2ACBF;\n        height: 6px;\n        width: 100%;\n        border-radius: 5px;\n        position: absolute;\n        top: -15px;\n      }\n      span.radioShape {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        background: #ffffff;\n        border: 1px solid #cfcdcd;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items:center;\n      }\n      span.radioShape:before{\n        content: \"\";\n        border-radius: 50%;\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        background: #fff;\n      }\n      .select-with-radio {\n        display: flex;\n        align-items: center;\n        p{\n          margin: 0 0 0 10px;\n        }\n      }\n    }\n\n    .small-switch{\n      margin-top: 10px;\n      >div{\n        width: 30px;\n        height: 14px;\n        input + div:before{\n          height: 10px;\n          width: 10px;\n          bottom: 2px;\n        }\n      }\n      p{\n        font-size: 10px;\n        padding-left: 10px;\n        color: #5c5b5b;\n      }\n    }\n    .bottom-wrap{\n      margin-top: 50px;\n      h3{\n        font-weight: 100;\n        +p{\n          font-weight: 100;\n          font-size: 14px;\n          color: #525252;\n          +b{\n            font-size: 14px;\n            font-weight: 400;\n            display: inline-block;\n            margin-bottom: 10px;\n          }\n        }\n\n      }\n    }\n`;\nconst InputController = styled.div``;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  .billing-wrap {\n    > label {\n      font-size: 14px;\n    }\n    margin-right: 20px;\n    margin-bottom: 10px;\n  }\n`;\nconst AsideDiv = styled.div`\n  #bm-currency {\n    border-radius: 4px 0 0 4px;\n  }\n\n  .bottom-wrap {\n    margin-top: 30px;\n    margin-right: 50px;\n    margin-bottom: 10px;\n  }\n  width: 80%;\n  .custom-field {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n    width: 100%;\n    border: 1px solid #eae8ee;\n    padding: 10px;\n    border-radius: 4px;\n    height: 38px;\n    font-size: 13px;\n  }\n  .msg {\n    height: 1rem;\n    font-size: 11px;\n    color: #756f82;\n  }\n  .calender {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-top: 20px;\n    select:focus {\n      border: 2px solid #015fcc !important;\n    }\n    //by anmol\n    .custom-input {\n      & > input {\n        padding-left: 40px;\n      }\n      #number-of-payment-count {\n        padding-left: 28px;\n      }\n    }\n    //\n    .custom-frequency {\n      & > select {\n        font-size: 12px;\n      }\n    }\n\n    #bm-payment-count,\n    #bm-frequency {\n      width: 120px;\n      font-size: 12px;\n    }\n\n    > div {\n      width: 48%;\n      select,\n      input {\n        border: 1px solid #eae8ee;\n        padding: 10px;\n        border-radius: 4px;\n        width: 100%;\n        height: 38px;\n        font-size: 14px;\n      }\n    }\n  }\n`;\nconst BtnWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  left: 0;\n  padding: 20px;\n  background: #fff;\n  border-top: 1px solid #ddd;\n  text-align: right;\n  #create-bm-button {\n    padding: 16px;\n  }\n  #ButtonPrimaryRecurring {\n    border-color: #b2acbf;\n    margin-right: 10px;\n    background: transparent;\n    color: #000;\n    width: 130px;\n    display: inline-block;\n    padding: 10px;\n    border-radius: 10px;\n  }\n  button {\n    width: 120px;\n    height: 40px;\n    font-size: 14px;\n    border-radius: 10px;\n    display: inline-block;\n    padding: 5px !important;\n  }\n`;\nconst StyledLink = styled.a`\n  &:hover{\n    .sidebar-text{\n      color: #7023FF;\n    }\n    .default{\n      display: none;\n    }\n    .focus{\n      display:inline;\n    }\n  }\n  display: flex;\n  color: #756F82;\n  margin-bottom: 30px;\n  text-decoration: none;\n  .focus{\n    display:none;\n  }\n  img{\n    margin-right: 10px;\n  }\n}\n`;\nconst SwitchWrapper = styled.div`\n  display: flex;\n  .small-switch {\n    display: flex;\n    #quesImage {\n      margin-left: 12px;\n    }\n    & > p {\n      margin: 0;\n      padding-left: 10px;\n      font-size: 14px;\n    }\n\n    & > img {\n      margin-left: 20px;\n      height: 20px;\n    }\n  }\n`;\nconst TrailWrap = styled.div`\n  margin-bottom: 100px;\n  .select-controller {\n    margin-top: 30px;\n\n    .billing-wrap {\n      margin-right: 20px;\n      #paidPrice {\n        font-weight: 400;\n      }\n      .input-fields {\n        display: flex;\n        flex-wrap: wrap;\n\n        .without-arrow {\n          width: 139px;\n        }\n\n        #paidInput,\n        #trailTwoInput {\n          width: 100px;\n        }\n\n        #bm-paid-period-duration,\n        #bm-trail-period-duration {\n          margin-left: 2px;\n          padding: 0 20px;\n          width: 110px;\n        }\n      }\n    }\n  }\n`;\n\nexport default function CreateRecurringBillingModel() {\n  const { t } = useTranslation();\n  let { state, search, pathname } = useLocation();\n  const history = useHistory();\n  const selectNavToggle = useContext(NavToggle);\n\n  const query = new URLSearchParams(search);\n  let billingModelId = query.get('billing-model-id');\n  let billingModelTypeFromQuery = query.get('billing-model-type');\n\n  const isEdit = () => {\n    return pathname.includes('edit-billing-model');\n  };\n\n  const trialTypeForEdit = () => {\n    switch (BillingModelTypes[state?.['billingModelType']]) {\n      case String(BillingModelTypes.RecurringPaidTrial): {\n        return BMTrialTypes.PaidTrial;\n      }\n      case String(BillingModelTypes.RecurringFreeTrial): {\n        return BMTrialTypes.FreeTrial;\n      }\n      case String(BillingModelTypes.Recurring):\n      case String(BillingModelTypes.RecurringDynamic):\n      default: {\n        return BMTrialTypes.NoTrial;\n      }\n    }\n  };\n  const checkBillingModelType = () => {\n    if (isDynamic) {\n      return BillingModelTypes.RecurringDynamic;\n    }\n    switch (trialType) {\n      case BMTrialTypes.NoTrial: {\n        return BillingModelTypes.Recurring;\n      }\n      case BMTrialTypes.FreeTrial: {\n        return BillingModelTypes.RecurringFreeTrial;\n      }\n      case BMTrialTypes.PaidTrial: {\n        return BillingModelTypes.RecurringPaidTrial;\n      }\n    }\n  };\n\n  const supportedTokens = useSupportedTokens();\n  const billingModelType = billingModelTypeFromQuery || state?.['billingModelType'];\n\n  const [isDynamic, setIsDynamic] = useState(state?.['isDynamic'] ? state?.['isDynamic'] : false);\n  const [currency, setCurrency] = useState(\n    state?.['token']\n      ? supportedTokens[state['token']]\n      : {\n          address: '0xc5d495EEaA84942095b769342bC71125721692Da',\n          symbol: 'PMA',\n          name: 'PumaPay',\n          decimals: 18,\n        },\n  );\n\n  const [merchantName, setMerchantName] = useState<string>('');\n  const [merchantUrl, setMerchantUrl] = useState<string>('');\n  const [reference, setReference] = useState<string>('');\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n\n  const [bmFrequency, setbmFrequency] = useState(1);\n  const [bmFrequencyPeriod, setbmFrequencyPeriod] = useState(DEFAULT_PERIOD_VALUE);\n\n  const [noOfDurationPeriods, setForNoOfDurationPeriods] = useState(1);\n  const [durationPeriod, setDurationPeriod] = useState(DEFAULT_PERIOD_VALUE);\n\n  // const noOfDurationPeriodsForEdit: IDuration = getDuration(\n  //   Number(state?.[\"frequency\"]) * Number(state?.[\"numberOfPayments\"])\n  // );\n  //\n  // const [durationPeriod, setDurationPeriod] = useState({\n  //   label: isEdit()\n  //     ? noOfDurationPeriodsForEdit.label\n  //     : state?.[\"durationPeriod\"]\n  //     ? state?.[\"durationPeriod\"].label\n  //     : DEFAULT_PERIOD_VALUE.label,\n  //   periodInSeconds: isEdit()\n  //     ? noOfDurationPeriodsForEdit.periodInSeconds\n  //     : state?.[\"durationPeriod\"]\n  //     ? state?.[\"durationPeriod\"].periodInSeconds\n  //     : DEFAULT_PERIOD_VALUE.periodInSeconds,\n  // });\n\n  const [trialType, setTrialType] = useState<Number>(BMTrialTypes.NoTrial);\n  const [numberOfTrialPeriods, setEveryTrailPeriod] = useState<Number>(1);\n  const [trialPeriod, setTrialPeriod] = useState(DEFAULT_PERIOD_VALUE);\n  const [initialAmount, setInitialAmount] = useState('');\n\n  const onFrequencyChanged = e =>\n    setbmFrequencyPeriod(supportedLifecycles.find(cycle => Number(cycle.periodInSeconds) === Number(e.target.value)));\n  const onNumberOfPaymentChanged = e =>\n    setDurationPeriod(supportedLifecycles.find(cycle => Number(cycle.periodInSeconds) === Number(e.target.value)));\n  const onChangeTrailPeriod = e =>\n    setTrialPeriod(supportedLifecycles.find(cycle => Number(cycle.periodInSeconds) === Number(e.target.value)));\n\n  const frequencyOptions = supportedLifecycles.map(freq => {\n    if (freq.env.includes(process.env.REACT_APP_ENV)) {\n      return (\n        <option key={freq.periodInSeconds} value={freq.periodInSeconds}>\n          {freq.label}\n        </option>\n      );\n    }\n  });\n  const trailPeriodOptions = supportedLifecycles.map(freq => (\n    <option key={freq.periodInSeconds} value={freq.periodInSeconds}>\n      {freq.label}\n    </option>\n  ));\n  const currencyOptions = Object.keys(supportedTokens).map(index => {\n    return (\n      <option key={supportedTokens[index].address} value={supportedTokens[index].address}>\n        {supportedTokens[index].symbol}\n      </option>\n    );\n  });\n\n  const goToPreviousPage = () => {\n    history.goBack();\n  };\n\n  const handleNextButtonClick = e => {\n    e.preventDefault();\n    history.push({\n      pathname: isEdit()\n        ? `/merchant/recurring-billing/edit-billing-model/widget-preview`\n        : `/merchant/create/widget-preview`,\n      state: {\n        billingModelId: billingModelId ? billingModelId : null,\n        checked: isDynamic,\n        merchantName: merchantName,\n        merchantUrl: merchantUrl,\n        reference: reference,\n        title,\n        price: toTokenDecimals(price, currency.decimals.toString()),\n        currency,\n        bmFrequency,\n        noOfDurationPeriods,\n        bmFrequencyPeriod,\n        durationPeriod,\n        trialPeriod,\n        numberOfTrialPeriods,\n        isEdit: isEdit(),\n        initialAmount: initialAmount\n          ? toTokenDecimals(initialAmount.toString(), currency.decimals.toString()).toString()\n          : null,\n        trialType,\n        billingModelType: checkBillingModelType(),\n        onUpdate: !!billingModelId,\n      },\n    });\n  };\n\n  const backUrl = () => {\n    return isEdit()\n      ? `/merchant/billing-model-details?billing-model-type=${billingModelType}&billing-model-id=${billingModelId}`\n      : '/merchant/create/choose-billing-model-type';\n  };\n\n  useEffect(() => {\n    if (state) {\n      setMerchantName(state['merchantName']);\n      setMerchantUrl(state['merchantUrl']);\n      setReference(state['uniqueReference']);\n      setTitle(state['name']);\n      setPrice(fromTokenDecimals(state['amount'], currency?.decimals.toString()).toString());\n\n      // Billing Cycle\n      const bmFrequencyForEdit: IDuration = getDuration(Number(state['frequency']));\n      setbmFrequency(isEdit() ? bmFrequencyForEdit.value : Number(state['bmFrequency']));\n\n      setbmFrequencyPeriod({\n        label: isEdit() ? bmFrequencyForEdit.label : state['bmFrequencyPeriod']?.label,\n        periodInSeconds: isEdit() ? bmFrequencyForEdit.periodInSeconds : state['bmFrequencyPeriod']?.periodInSeconds,\n      });\n      // console.log(isEdit(), state, bmFrequencyForEdit);\n\n      // Duration\n      const noOfDurationPeriodsForEdit: IDuration = getDuration(\n        Number(state['frequency']) * Number(state['numberOfPayments']),\n      );\n      setForNoOfDurationPeriods(isEdit() ? noOfDurationPeriodsForEdit.value : Number(state['noOfDurationPeriods']));\n      setDurationPeriod({\n        label: isEdit() ? noOfDurationPeriodsForEdit.label : state['durationPeriod']?.label,\n        periodInSeconds: isEdit()\n          ? noOfDurationPeriodsForEdit.periodInSeconds\n          : state['durationPeriod']?.periodInSeconds,\n      });\n\n      // Trial details\n      const trialPeriodForEdit: IDuration = getDuration(state['trialPeriod']);\n      setTrialType(isEdit() ? trialTypeForEdit() : state['trialType']);\n      setEveryTrailPeriod(isEdit() ? trialPeriodForEdit.value : Number(state['numberOfTrialPeriods']));\n      setTrialPeriod({\n        label: isEdit() ? trialPeriodForEdit.label : state['trialPeriod']?.label,\n        periodInSeconds: isEdit()\n          ? trialPeriodForEdit.periodInSeconds // no period in seconds attr\n          : state['trialPeriod']?.periodInSeconds,\n      });\n      setInitialAmount(fromTokenDecimals(state['initialAmount'], currency.decimals.toString()).toString());\n    }\n  }, [state]);\n\n  return (\n    <>\n      <MainContent className={selectNavToggle ? 'recurring-billing open' : 'recurring-billing'}>\n        <ProgressBar />\n        <div className=\"arrow\">\n          <StyledLink className=\"active\" as={Link} to={backUrl()}>\n            {' '}\n            <img src={ArrowRight} alt=\"arrow\" />{' '}\n          </StyledLink>\n        </div>\n        <Box as=\"form\" style={{ width: '80%', overflowY: 'scroll' }} onSubmit={e => handleNextButtonClick(e)}>\n          <h3 id=\"Boxh3Tag\">{t('recurringBillingModelName')}</h3>\n          <p id=\"BoxPTag\">{t('setModelDescriptionRecurringBillingModel')}</p>\n          {!billingModelId && (\n            <SwitchWrapper>\n              <div className=\"small-switch\" style={{ alignItems: 'center' }}>\n                <Switch\n                  checked={isDynamic}\n                  setChecked={() => {\n                    setIsDynamic(!isDynamic);\n                  }}\n                />\n                <p>{t('dynamicBillingModelName')}</p>\n                <MouseoverTooltip\n                  text=\"Setting a billing model to be dynamic will allow you to set the currency and price programmatically on the fly.\"\n                  children={<img style={{ paddingLeft: '7px', display: 'flex' }} src={questionIcon} alt=\"question\" />}\n                />\n              </div>\n            </SwitchWrapper>\n          )}\n\n          <InputController className=\"input-wrapper\">\n            <AsideDiv>\n              <Wrapper>\n                <div className=\"billing-wrap\" id=\"IMerchantName\">\n                  <label>{t('merchantName')}</label>\n                  <Input\n                    id=\"bm-merchant-name\"\n                    name=\"bm-merchant-name\"\n                    type=\"text\"\n                    value={merchantName}\n                    onChange={e => setMerchantName(e.target.value)}\n                    placeholder={t('bmMerchantNamePlaceHolder')}\n                  />\n                  <p className=\"msg\">Merchant name will be shown on the blockchain transaction details</p>\n                </div>\n\n                <div className=\"billing-wrap\" id=\"IMerchantUrl\">\n                  <label>{t('merchantUrl')}</label>\n                  <Input\n                    id=\"bm-merchant-url\"\n                    name=\"bm-merchant-url\"\n                    type=\"text\"\n                    value={merchantUrl}\n                    onChange={e => setMerchantUrl(e.target.value)}\n                    placeholder={t('bmMerchantUrlPlaceHolder')}\n                  />\n                  <p className=\"msg\">Merchant url will be shown on the blockchain transaction details</p>\n                </div>\n              </Wrapper>\n\n              <Wrapper>\n                <div className=\"billing-wrap\" id=\"IUniqueReference\">\n                  <label>{t('uniqueReference')}</label>\n                  <Input\n                    id=\"bm-unique-reference\"\n                    name=\"bm-unique-reference\"\n                    type=\"text\"\n                    value={reference}\n                    onChange={e => setReference(e.target.value)}\n                    placeholder={t('bmUniqueReferencePlaceHolder')}\n                    disabled={isEdit() ? 'disabled' : ''}\n                  />\n                  <p className=\"msg\">Unique reference will be shown on the blockchain transaction details</p>\n                </div>\n                <div className=\"billing-wrap\" id=\"IBillingModelName\">\n                  <label>{t('billingModelName')}</label>\n                  <Input\n                    className=\"custom-field\"\n                    id=\"bm-billingModel-name\"\n                    name=\"bm-billingModel-name\"\n                    type=\"text\"\n                    value={title}\n                    onChange={e => setTitle(e.target.value)}\n                    placeholder={t('billingModelNamePlaceholder')}\n                    disabled={isDynamic ? 'disabled' : ''}\n                  />\n                  <p className=\"msg\">{t('billingModelNameDescription')}</p>\n                </div>\n              </Wrapper>\n              <Wrapper>\n                <div className=\"billing-wrap\" id=\"IBillingModelName\">\n                  <label>\n                    {t('currency')}, {t('price')}\n                  </label>\n                  <div className=\"multi-controller\">\n                    <Select\n                      id=\"bm-currency\"\n                      name=\"bm-currency\"\n                      defaultValue={currency?.address}\n                      onChange={e => {\n                        setCurrency(supportedTokens[e.target.value]);\n                      }}\n                      disabled={isDynamic || billingModelId ? 'disabled' : ''}\n                    >\n                      {currencyOptions}\n                    </Select>\n                    <Input\n                      className=\"custom-field\"\n                      id=\"bm-price\"\n                      name=\"bm-price\"\n                      type=\"number\"\n                      placeholder=\"0.00\"\n                      step=\"0.000000000000000001\"\n                      value={price}\n                      onChange={e => setPrice(e.target.value)}\n                      disabled={isDynamic || billingModelId ? 'disabled' : ''}\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Wrapper>\n              <Wrapper>\n                <div className=\"bottom-wrap\">\n                  <h3 className=\"heading\">{t('billingCycle')}</h3>\n                  <p className=\"info\">{t('billingCycleDescription')}</p>\n                  <div className=\"calender\">\n                    <div className=\"custom-input\">\n                      <span className=\"position-absolute\">Every </span>\n                      <Input\n                        className=\"custom-field\"\n                        id=\"bm-cycle-periods\"\n                        name=\"bm-cycle-periods\"\n                        type=\"number\"\n                        placeholder=\"no. of periods\"\n                        value={bmFrequency}\n                        onChange={e => setbmFrequency(e.target.value)}\n                        disabled={isDynamic || billingModelId || billingModelId ? 'disabled' : ''}\n                        min=\"1\"\n                      />\n                    </div>\n                    <div className=\"custom-frequency\">\n                      <Select\n                        id=\"bm-frequency\"\n                        name=\"bm-frequency\"\n                        value={bmFrequencyPeriod.periodInSeconds}\n                        onChange={onFrequencyChanged}\n                        disabled={isDynamic || billingModelId ? 'disabled' : ''}\n                      >\n                        {frequencyOptions}\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n\n                {/* SETTLE IN other currency */}\n                <div className=\"msg\" />\n                <div className=\"bottom-wrap\">\n                  <h3 className=\"heading\">{t('duration')}</h3>\n                  <p className=\"info\">{t('durationDescription')}</p>\n                  <div className=\"calender\">\n                    <div className=\"custom-input\">\n                      <span className=\"position-absolute\">For </span>\n                      <Input\n                        disabled={isDynamic || billingModelId ? 'disabled' : ''}\n                        id=\"number-of-payment-count\"\n                        name=\"number-of-payment-count\"\n                        value={noOfDurationPeriods}\n                        onChange={e => setForNoOfDurationPeriods(e.target.value)}\n                        type=\"number\"\n                        min=\"1\"\n                      />\n                    </div>\n                    <div>\n                      <Select\n                        id=\"bm-payment-count\"\n                        name=\"bm-payment-count\"\n                        value={durationPeriod.periodInSeconds}\n                        onChange={onNumberOfPaymentChanged}\n                        disabled={isDynamic || billingModelId ? 'disabled' : ''}\n                      >\n                        {frequencyOptions}\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n              </Wrapper>\n            </AsideDiv>\n            <AsideDiv className=\"AsideDivTwo\" />\n          </InputController>\n          <TrailWrap className=\"trailWrap\">\n            <h3 style={{ display: 'flex' }}>\n              {t('trialPeriod')}\n              {isDynamic && (\n                <MouseoverTooltip\n                  text=\"Note that you need to specify the Trial Type of your dynamic billing model.\"\n                  children={<img style={{ paddingLeft: '7px' }} src={questionIcon} alt=\"question\" />}\n                />\n              )}\n            </h3>\n\n            <p>{t('trialPeriodDescription')}</p>\n            <div className={`stepWrap ${isEdit() ? 'edit' : ''}`}>\n              <div className={`steps ${trialType === BMTrialTypes.NoTrial ? 'selected' : ''}`}>\n                <input\n                  type=\"radio\"\n                  readOnly\n                  name=\"pname\"\n                  onClick={() => setTrialType(BMTrialTypes.NoTrial)}\n                  disabled={!!billingModelId}\n                  checked={trialType === BMTrialTypes.NoTrial}\n                />\n                <div className=\"borderSelect\" />\n                <div className=\"select-with-radio\">\n                  <span className=\"radioShape\" />\n                  <p>{t('noTrial')}</p>\n                </div>\n              </div>\n              <div className={`steps ${trialType === BMTrialTypes.FreeTrial ? 'selected' : ''}`}>\n                <input\n                  type=\"radio\"\n                  readOnly\n                  disabled={!!billingModelId}\n                  name=\"pname\"\n                  onClick={() => setTrialType(BMTrialTypes.FreeTrial)}\n                  checked={trialType === BMTrialTypes.FreeTrial}\n                />\n                <div className=\"borderSelect\" />\n                <div className=\"select-with-radio\">\n                  <span className=\"radioShape\" />\n                  <p>{t('freeTrial')}</p>\n                </div>\n              </div>\n              <div className={`steps ${trialType === BMTrialTypes.PaidTrial ? 'selected' : ''}`}>\n                <input\n                  type=\"radio\"\n                  readOnly\n                  disabled={!!billingModelId}\n                  name=\"pname\"\n                  onClick={() => setTrialType(BMTrialTypes.PaidTrial)}\n                  checked={trialType === BMTrialTypes.PaidTrial}\n                />\n                <div className=\"borderSelect\" />\n                <div className=\"select-with-radio\">\n                  <span className=\"radioShape\" />\n                  <p>{t('paidTrial')}</p>\n                </div>\n              </div>\n            </div>\n            {trialType !== BMTrialTypes.NoTrial && (\n              <div className=\"select-controller\">\n                <div className=\"billing-wrap\">\n                  <h3>{t('periodDurationUnderTrial')}</h3>\n                  <div className=\"input-fields\">\n                    <Input\n                      id=\"trailTwoInput\"\n                      type=\"number\"\n                      min=\"1\"\n                      value={numberOfTrialPeriods}\n                      onChange={e => setEveryTrailPeriod(e.target.value)}\n                      disabled={isDynamic || !!billingModelId ? 'disabled' : ''}\n                    />\n                    <Select\n                      value={trialPeriod.periodInSeconds}\n                      onChange={onChangeTrailPeriod}\n                      name=\"bm-trail-period-duration\"\n                      id=\"bm-trail-period-duration\"\n                      disabled={isDynamic || !!billingModelId ? 'disabled' : ''}\n                    >\n                      {trailPeriodOptions}\n                    </Select>\n                  </div>\n                </div>\n                {trialType === BMTrialTypes.PaidTrial && (\n                  <div className=\"billing-wrap\">\n                    <h3 id=\"paidPrice\">Price</h3>\n                    <div className=\"input-fields\">\n                      <Input\n                        min=\"0\"\n                        className=\"without-arrow\"\n                        type=\"number\"\n                        placeholder=\"0.00\"\n                        step=\"0.000000000000000001\"\n                        value={initialAmount}\n                        onChange={e => setInitialAmount(e.target.value)}\n                        disabled={isDynamic || !!billingModelId ? 'disabled' : ''}\n                      />\n                      <span\n                        style={{\n                          lineHeight: '2rem',\n                          marginLeft: '1rem',\n                        }}\n                      >\n                        {currency.symbol}\n                      </span>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </TrailWrap>\n          <BtnWrapper className=\"btn-wrap\">\n            <ButtonPrimary id=\"ButtonPrimaryRecurring\" onClick={goToPreviousPage}>{`Cancel`}</ButtonPrimary>\n            <ButtonPrimary id=\"create-bm-button\">{t('createBillingModel')}</ButtonPrimary>\n          </BtnWrapper>\n        </Box>\n      </MainContent>\n    </>\n  );\n}\n"],"sourceRoot":""}