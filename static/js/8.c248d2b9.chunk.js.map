{"version":3,"sources":["state/supported-tokens/hooks.tsx","components/ProgressBar/index.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","pages/CreateSingleBillingModel/index.tsx"],"names":["useSupportedTokens","chainId","useActiveWeb3React","state","useSelector","supported_tokens","ProgressBarContainer","styled","div","ProgressBarChildContainer","ProgressBar","props","name","urlName","window","location","href","split","pop","className","checkUrlName","htmlFor","PopoverContainer","show","theme","bg2","bg3","transparentize","shadow1","text2","ReferenceElement","Arrow","Popover","content","children","placement","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","update","attributes","callback","delay","leading","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","useInterval","ref","style","popper","arrow","TooltipContainer","Tooltip","text","rest","MouseoverTooltip","setShow","open","useCallback","close","onMouseEnter","onMouseLeave","SingleBillingWrap","InputController","BtnWrapper","AsideDiv","CreateBilling","Wrapper","CreateBillingWrapper","StyledLink","a","CreateSingleBillingModel","t","useTranslation","useLocation","search","pathname","billingModelId","URLSearchParams","get","selectNavToggle","useContext","NavToggle","ThemeContext","history","useHistory","supportedTokens","title","setTitle","price","setPrice","merchantName","setMerchantName","merchantUrl","setMerchantUrl","reference","setReference","address","symbol","decimals","currency","setCurrency","isDynamic","setIsDynamic","fromTokenDecimals","toString","currencyOptions","Object","keys","map","index","x","value","isEdit","includes","handleNextButtonClick","e","preventDefault","Number","push","toTokenDecimals","billingModelType","BillingModelTypes","SingleDynamic","Single","onUpdate","alert","as","Link","to","src","ArrowRight","alt","gap","justify","info","padding","paddingLeft","border","borderRadius","marginBottom","body","color","text3","textAlign","alignItems","checked","setChecked","questionIcon","onSubmit","type","onChange","target","placeholder","disabled","step","min","onClick","goBack"],"mappings":"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","file":"static/js/8.c248d2b9.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { AppState } from \"../index\";\nimport { SupportedTokenDetails } from \"./reducer\";\n\nexport function useSupportedTokens(): {\n  [tokenAddress: string]: SupportedTokenDetails;\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"supported_tokens\"]>(\n    (state) => state.supported_tokens\n  );\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import styled from \"styled-components\";\n\nconst ProgressBarContainer = styled.div`\n  padding-left: 30px;\n  width: 190px;\n  border-right: 1px solid #ddd;\n  padding-right: 10px;\n  margin-right: 20px;\n\n  .progress-item {\n    padding: 15px 0;\n    position: relative;\n    &:not(:last-child):before {\n      content: \"\";\n      position: absolute;\n      height: 100%;\n      border: 1px solid #ddd;\n      top: 30px;\n      left: -20px;\n    }\n    span {\n      align-items: center;\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      position: absolute;\n      left: -29px;\n      display: flex;\n      justify-content: center;\n    }\n    span.pending {\n      background: #fff;\n      border: 1px solid #a3a3a3;\n    }\n    span.completed {\n      background: #00d48b;\n      &:before {\n        content: \"\";\n        display: inline-block;\n        width: 7px;\n        height: 4px;\n        border-left: 2px solid #fff;\n        border-bottom: 2px solid #fff;\n        transform: rotate(312deg);\n      }\n    }\n    span.current {\n      background: #00d48b;\n      &:before {\n        content: \"\";\n        display: inline-block;\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background: #fff;\n        transform: rotate(312deg);\n      }\n    }\n  }\n  label {\n    font-size: 16px;\n  }\n  p {\n    color: #756f82;\n    font-size: 12px;\n    margin-top: 5px;\n  }\n`;\nconst ProgressBarChildContainer = styled.div``;\nexport default function ProgressBar(props?: any) {\n  const urlName = window.location.href.split(\"/\").pop();\n  return (\n    <ProgressBarContainer className=\"progressBar\">\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span\n          className={checkUrlName(urlName) ? \"current\" : \"completed\"}\n        ></span>\n        <label htmlFor=\"\">Billing Model</label>\n        <p>Choose a billing model</p>\n      </ProgressBarChildContainer>\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkUrlName(urlName) ? \"pending\" : \"current\"}></span>\n        <label htmlFor=\"\">Setup</label>\n        <p>Set price and currency</p>\n      </ProgressBarChildContainer>\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span\n          className={checkIntegrationUrlName(urlName) ? \"pending\" : \"current\"}\n        ></span>\n        <label htmlFor=\"\">Integration</label>\n        <p>Embed code snippet</p>\n      </ProgressBarChildContainer>\n    </ProgressBarContainer>\n  );\n}\n\nfunction checkUrlName(name: string) {\n  return name === \"create/choose-billing-model-type\" ? true : false;\n}\n\nfunction checkIntegrationUrlName(name: string) {\n  return name === \"create/widget-preview\" ? false : true;\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport useInterval from '../../hooks/useInterval'\nimport Portal from '@reach/portal'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\n  opacity: ${props => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.bg3};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.bg2};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } }\n    ]\n  })\n  useInterval(update, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return\n  }, [delay, leading])\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n","import styled, { ThemeContext } from \"styled-components\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Input, Select } from \"@rebass/forms\";\nimport { TYPE } from \"../../theme\";\nimport { AutoColumn } from \"../../components/Column\";\nimport { LightCard } from \"../../components/Card\";\nimport {\n  BillingModelTypes,\n  fromTokenDecimals,\n  toTokenDecimals,\n} from \"../../utils\";\nimport { ButtonPrimary } from \"../../components/Button\";\nimport { Box } from \"rebass/styled-components\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { InfoCard } from \"../../components/InfoCard\";\nimport { NavToggle } from \"../App\";\nimport { useSupportedTokens } from \"../../state/supported-tokens/hooks\";\nimport Switch from \"../../components/Switch\";\nimport ProgressBar from \"../../components/ProgressBar\";\nimport questionIcon from \"../../assets/images/question-mark.svg\";\nimport ArrowRight from \"../../assets/images/back-arrow.svg\";\nimport { MouseoverTooltip } from \"../../components/Tooltip\";\n\nconst SingleBillingWrap = styled.div`\n  color: #000;\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n    height: 80vh;\n    overflow-y: hidden;\n    margin-top: 1rem;\n  }\n  .small-switch {\n    display: flex;\n    align-items: center;\n    float: left;\n    margin-top: 10px;\n    > p {\n      line-height: 2rem;\n      margin: 0 1rem;\n    }\n    > div {\n      width: 30px;\n      height: 14px;\n      input + div:before {\n        height: 10px;\n        width: 10px;\n        bottom: 2px;\n      }\n      img {\n        position: relative;\n        top: -6px;\n        margin-left: 1rem;\n      }\n    }\n    progressBar > p {\n      margin-left: 10px;\n      font-size: 14px;\n      padding-left: 10px;\n      color: #000;\n    }\n  }\n  .arrow {\n    margin: 0 20px 0 0;\n    padding-top: 1.7rem;\n    cursor: pointer;\n  }\n  display: flex;\n  width: 100%;\n  padding-left: 100px;\n`;\nconst InputController = styled.div`\n  display: flex;\n`;\n\nconst BtnWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  left: 0;\n  padding: 20px;\n  background: #fff;\n  border-top: 1px solid #ddd;\n  text-align: right;\n  #buttonPrimarySingle {\n    border-color: #b2acbf;\n    margin-right: 10px;\n    background: transparent;\n    color: #000;\n    width: 130px;\n    display: inline-block;\n    padding: 10px;\n    border-radius: 10px;\n  }\n  #create-bm-button {\n    padding: 16px;\n  }\n  button {\n    width: 120px;\n    height: 40px;\n    font-size: 14px;\n    border-radius: 10px;\n    display: inline-block;\n    padding: 5px !important;\n  }\n`;\nconst AsideDiv = styled.div`\n  width: 100%;\n  .custom-field {\n    width: 100%;\n    border: 1px solid #eae8ee;\n    padding: 10px;\n    border-radius: 4px;\n    height: 45px;\n  }\n  .msg {\n    font-size: 10px;\n    color: #756f82;\n  }\n  .calender {\n    display: flex;\n    justify-content: space-between;\n    input:focus,\n    select:focus {\n      border: 2px solid #015fcc !important;\n    }\n    > div {\n      width: 48%;\n      select,\n      input {\n        border: 1px solid #eae8ee;\n        padding: 10px;\n        border-radius: 4px;\n        width: 100%;\n        height: 45px;\n      }\n    }\n  }\n`;\nconst CreateBilling = styled.div`\n  overflow: hidden;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  .billing-wrap {\n    margin-right: 20px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst CreateBillingWrapper = styled.div`\n  .AfterPrice {\n    width: 100px;\n    > label {\n      margin-bottom: 10px;\n      display: inline-block;\n    }\n  }\n\n  .billing-wrap {\n    > label {\n      margin-bottom: 10px;\n      display: inline-block;\n    }\n  }\n  .billing-wrap input:focus {\n    border: 2px solid #015fcc !important;\n  }\n  input,\n  select {\n    height: 38px !important;\n    padding: 4px !important;\n    border: 1px solid #eae8ee !important;\n    border-radius: 4px;\n    outline: none;\n    font-size: 12px;\n  }\n  select:disabled,\n  input:disabled {\n    background: #dddddd;\n  }\n  .currency-price {\n    margin-left: 0px;\n    > label {\n      margin-bottom: 10px;\n      display: inline-block;\n    }\n\n    .calender {\n      #bm-currency {\n        width: 60px;\n        border-radius: 4px 0 0 4px;\n      }\n      #bm-price {\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n  }\n  .currency-price select {\n    border-right: 0 !important;\n  }\n  .currency-price input {\n    border-left: 0 !important;\n    border-top-left-radius: 5px;\n  }\n\n  .settle-wrap {\n    display: flex;\n    align-items: center;\n  }\n  .settle-wrap p {\n    margin-left: 20px;\n  }\n`;\nconst StyledLink = styled.a`\n  &:hover{\n    .sidebar-text{\n      color: #7023FF;\n    }\n    .default{\n      display: none;\n    }\n    .focus{\n      display:inline;\n    }\n  }\n  display: flex;\n  color: #756F82;\n  margin-bottom: 30px;\n  text-decoration: none;\n  .focus{\n    display:none;\n  }\n  img{\n    margin-right: 10px;\n  }\n}\n`;\n\nexport default function CreateSingleBillingModel() {\n  const { t } = useTranslation();\n\n  let { search, state, pathname } = useLocation();\n  const query = new URLSearchParams(search);\n  let billingModelId = query.get(\"billing-model-id\");\n\n  const selectNavToggle = useContext(NavToggle);\n  const theme = useContext(ThemeContext);\n  const history = useHistory();\n\n  const supportedTokens = useSupportedTokens();\n\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const [merchantName, setMerchantName] = useState<string>(\"\");\n  const [merchantUrl, setMerchantUrl] = useState<string>(\"\");\n  const [reference, setReference] = useState<string>(\"\");\n\n  const [currency, setCurrency] = useState({\n    address: \"0xc5d495EEaA84942095b769342bC71125721692Da\",\n    symbol: \"PMA\",\n    name: \"PumaPay\",\n    decimals: 18,\n  });\n\n  const [isDynamic, setIsDynamic] = useState(false);\n\n  useEffect(() => {\n    if (state) {\n      setMerchantName(state?.[\"merchantName\"]);\n      setMerchantUrl(state?.[\"merchantUrl\"]);\n      setReference(state?.[\"uniqueReference\"]);\n\n      setTitle(state?.[\"name\"]);\n      setCurrency(supportedTokens[state[\"token\"]]);\n      setPrice(\n        fromTokenDecimals(\n          state?.[\"amount\"],\n          currency.decimals.toString()\n        ).toString()\n      );\n      setIsDynamic(state?.[\"isDynamic\"]);\n    }\n  }, [state, supportedTokens]);\n\n  const currencyOptions = Object.keys(supportedTokens).map((index, x) => {\n    return (\n      <option\n        key={supportedTokens[index].address}\n        value={supportedTokens[index].address}\n      >\n        {supportedTokens[index].symbol}\n      </option>\n    );\n  });\n\n  const goToPreviousPage = () => {\n    history.goBack();\n  };\n\n  const canCreate = () => {\n    return isDynamic || (title !== \"\" && Number(price) > 0 && currency);\n  };\n\n  const isEdit = () => {\n    return pathname.includes(\"edit-billing-model\");\n  };\n\n  const handleNextButtonClick = (e) => {\n    e.preventDefault();\n    if (canCreate()) {\n      history.push({\n        pathname: isEdit()\n          ? `/merchant/single-billing/edit-billing-model/widget-preview`\n          : `/merchant/create/widget-preview`,\n        state: {\n          billingModelId: billingModelId ? billingModelId : null,\n          merchantName: merchantName,\n          merchantUrl: merchantUrl,\n          reference: reference,\n          title,\n          price: toTokenDecimals(\n            price.toString(),\n            currency.decimals.toString()\n          ),\n          currency,\n          isDynamic,\n          billingModelType: isDynamic\n            ? BillingModelTypes.SingleDynamic\n            : BillingModelTypes.Single,\n          isEdit: isEdit(),\n          onUpdate: !!billingModelId,\n        },\n      });\n    } else {\n      alert(\"empty fields\");\n    }\n  };\n\n  const backUrl = () => {\n    return isEdit()\n      ? `/merchant/billing-model-details?billing-model-type=${\n          isDynamic ? BillingModelTypes.SingleDynamic : BillingModelTypes.Single\n        }&billing-model-id=${billingModelId}`\n      : \"/merchant/create/choose-billing-model-type\";\n  };\n\n  return (\n    <>\n      <SingleBillingWrap className={selectNavToggle ? \" open\" : \"\"}>\n        <ProgressBar />\n        <div className=\"arrow\">\n          <StyledLink className=\"active\" as={Link} to={backUrl()}>\n            {\" \"}\n            <img src={ArrowRight} alt=\"arrow\" />{\" \"}\n          </StyledLink>\n        </div>\n        <CreateBilling>\n          <div>\n            <AutoColumn gap=\"lg\" justify=\"flex-start\">\n              <InfoCard\n                title={t(\"createNewBillingModel\")}\n                info={t(\"setModelDescriptionSingleBillingModel\")}\n              />\n              <LightCard\n                padding=\"0\"\n                paddingLeft=\"0 !Important\"\n                border=\"0px !important\"\n                borderRadius=\"0px\"\n                marginBottom=\"20px\"\n              >\n                {!billingModelId && (\n                  <TYPE.body color={theme.text3} textAlign=\"center\">\n                    <div\n                      className=\"small-switch\"\n                      style={{ alignItems: \"center\" }}\n                    >\n                      <Switch\n                        checked={isDynamic}\n                        setChecked={() => setIsDynamic(!isDynamic)}\n                      />\n                      <p>{t(\"dynamicBillingModelName\")} </p>\n                      <MouseoverTooltip\n                        text=\"Setting a billing model to be dynamic will allow you to set the currency and price programmatically on the fly.\"\n                        children={<img src={questionIcon} alt=\"question\" />}\n                      />\n                    </div>\n                  </TYPE.body>\n                )}\n              </LightCard>\n            </AutoColumn>\n\n            <Box as=\"form\" onSubmit={(e) => handleNextButtonClick(e)}>\n              <InputController>\n                <AsideDiv>\n                  <CreateBillingWrapper>\n                    <Wrapper>\n                      <div className=\"billing-wrap\" id=\"IMerchantName\">\n                        <label>{t(\"merchantName\")}</label>\n                        <Input\n                          id=\"bm-merchant-name\"\n                          name=\"bm-merchant-name\"\n                          type=\"text\"\n                          value={merchantName}\n                          onChange={(e) => setMerchantName(e.target.value)}\n                          placeholder={t(\"bmMerchantNamePlaceHolder\")}\n                        />\n                        <p className=\"msg\">\n                          Merchant name will be shown on the blockchain\n                          transaction details\n                        </p>\n                      </div>\n\n                      <div className=\"billing-wrap\" id=\"IMerchantUrl\">\n                        <label>{t(\"merchantUrl\")}</label>\n                        <Input\n                          id=\"bm-merchant-url\"\n                          name=\"bm-merchant-url\"\n                          type=\"text\"\n                          value={merchantUrl}\n                          onChange={(e) => setMerchantUrl(e.target.value)}\n                          placeholder={t(\"bmMerchantUrlPlaceHolder\")}\n                        />\n                        <p className=\"msg\">\n                          Merchant url will be shown on the blockchain\n                          transaction details\n                        </p>\n                      </div>\n                    </Wrapper>\n\n                    <Wrapper>\n                      <div className=\"billing-wrap\" id=\"IUniqueReference\">\n                        <label>{t(\"uniqueReference\")}</label>\n                        <Input\n                          id=\"bm-unique-reference\"\n                          name=\"bm-unique-reference\"\n                          type=\"text\"\n                          value={reference}\n                          onChange={(e) => setReference(e.target.value)}\n                          placeholder={t(\"bmUniqueReferencePlaceHolder\")}\n                          disabled={isEdit() ? \"disabled\" : \"\"}\n                        />\n                        <p className=\"msg\">\n                          Unique reference will be shown on the blockchain\n                          transaction details\n                        </p>\n                      </div>\n\n                      <div className=\"billing-wrap\">\n                        <label>{t(\"billingModelName\")}</label>\n                        <Input\n                          id=\"bm-billing-name\"\n                          name=\"bm-billing-name\"\n                          type=\"text\"\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                          placeholder={t(\"billingModelNamePlaceholder\")}\n                          disabled={isDynamic ? \"disabled\" : \"\"}\n                        />\n                        <p className=\"msg\">\n                          {t(\"createdModelNameForSingleBilling\")}\n                        </p>\n                      </div>\n                    </Wrapper>\n\n                    <Wrapper>\n                      <div className=\"currency-price billing-wrap\">\n                        <label>\n                          {t(\"currency\")}, {t(\"price\")}\n                        </label>\n                        <div className=\"calender\">\n                          <Select\n                            id=\"bm-currency\"\n                            name=\"bm-currency\"\n                            value={currency?.address}\n                            onChange={(e) => {\n                              setCurrency(supportedTokens[e.target.value]);\n                            }}\n                            disabled={isDynamic ? \"disabled\" : \"\"}\n                          >\n                            {currencyOptions}\n                          </Select>\n                          <Input\n                            id=\"bm-price\"\n                            name=\"bm-price\"\n                            type=\"number\"\n                            placeholder=\"0.00\"\n                            value={price}\n                            step=\"0.000000000000000001\"\n                            onChange={(e) => setPrice(e.target.value)}\n                            min=\"0\"\n                            disabled={isDynamic ? \"disabled\" : \"\"}\n                          />\n                        </div>\n                      </div>\n                    </Wrapper>\n                  </CreateBillingWrapper>\n                </AsideDiv>\n              </InputController>\n              <BtnWrapper className=\"btn-wrap\">\n                <ButtonPrimary\n                  id=\"buttonPrimarySingle\"\n                  onClick={goToPreviousPage}\n                >{`Cancel`}</ButtonPrimary>\n                <ButtonPrimary id=\"create-bm-button\">\n                  {t(\"createBillingModel\")}\n                </ButtonPrimary>\n              </BtnWrapper>\n            </Box>\n          </div>\n        </CreateBilling>\n      </SingleBillingWrap>\n    </>\n  );\n}\n"],"sourceRoot":""}