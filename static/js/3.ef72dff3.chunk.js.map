{"version":3,"sources":["state/supported-tokens/hooks.tsx","components/SubscriptionsTable/index.tsx","components/CancelSubscriptionModal/index.tsx","constants/contracts/keeperRegistry/index.ts"],"names":["useSupportedTokens","chainId","useActiveWeb3React","state","useSelector","supported_tokens","totalAmountPaid","subscription","billingModel","billingModelType","BillingModelTypes","String","Single","SingleDynamic","pullPayments","paymentAmount","Recurring","RecurringFreeTrial","amount","pullPaymentIDs","length","RecurringPaidTrial","initialAmount","Number","RecurringDynamic","MainContent","styled","div","TableTopWrap","StyledTable","table","StyledLink","a","SubscriptionsTable","type","subscriptionsData","account","pathname","useLocation","history","useHistory","supportedTokens","useState","status","setStatus","todayDate","moment","unix","today","setToday","yesterday","setYesterday","week","setWeek","month","setMonth","dateRangeValue","setDateRangeValue","startDate","setStartDate","endDate","setEndDate","id","value","statusOptions","dateList","y","Date","getFullYear","m","getMonth","daysInMonth","arrDays","date","getDate","current","push","format","getDaysOfMonth","dateFilters","key","event","subtract","filterHandler","entry","dateForChecking","isAnyRecurringBM","SubscriptionTableTypes","MyCustomers","cancelTimestamp","numberOfPayments","mySubscriptionHeaders","freeTrialBMHeaders","paidTrialBMHeaders","recurringDynamicBMHeaders","myCustomersHeaders","singleDynamicBMHeaders","singleBMHeaders","rowCount","setRowCount","currentPage","setCurrentPage","counter","setCounter","showCancelModal","setShowCancelModal","cancelSubscriptionId","setCancelSubscriptionId","cancelSubscriptionBillingModelType","setCancelSubscriptionBillingModelType","isCancelBtnLoading","setIsCancelBtnLoading","className","MySubscriptions","onChange","e","st","target","map","index","monthPlaceholder","dayPlaceholder","yearPlaceholder","onClick","tableHeaders","title","colSpan","size","filter","data","begin","end","slice","currentData","row","isDynamicBM","name","BillingModelTypeTitles","style","cursor","billingModelId","search","handleClick","subscriber","BMTrialTypesLable","trialType","isDynamicRecurring","totalPayments","fromTokenDecimals","toString","settlementToken","decimals","symbol","paymentToken","isRecurringWithTrial","humanizeDuration","trialPeriod","largest","round","isRecurringFreeTrial","executionTimestamp","startTimestamp","lastPaymentTimestamp","nextPaymentTimestamp","color","fontSize","cancelledBy","toLowerCase","KEEPER_REGISTRY_ADDRESS","includes","bmType","disabled","parseInt","Math","max","src","Arrow","alt","maxPage","ceil","min","isLoading","setIsLoading","Wrapper","theme","flexColumnNoWrap","MarginLeft","ModelContent","CloseIcon","CloseColor","Close","text4","UpperSection","HeaderRow","flexRowNoWrap","props","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","CancelSubscriptionModalContent","cancelSubscriptionModal","setCancelSubscriptionModal","dispatch","useDispatch","recurringPPContract","useRecurringPPContract","dynamicRecurringPPContract","useDynamicRecurringPPContract","freeTrialRecurringPPContract","useFreeTrialRecurringPPContract","paidTrialRecurringPPContract","usePaidTrialRecurringPPContract","cancelSubscriptionBoolean","setCancelSubscriptionBoolean","cancelSubscription","contract","estimateGas","estimatedGas","gasLimit","calculateGasMargin","then","response","hash","bmCancellation","subscriptionId","addTransaction","from","summary","wait","WAIT_BLOCK_CONFIRMATIONS","catch","error","console","debug","message","gap","borderColor","outlineColor","text2","toUpperCase","placeholder","href","CancelSubscriptionModal","useEffect","isOpen","onDismiss","minHeight","maxHeight","ChainId","MATIC","MUMBAI"],"mappings":"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","file":"static/js/3.ef72dff3.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { AppState } from '../index';\nimport { SupportedTokenDetails } from './reducer';\n\nexport function useSupportedTokens(): {\n  [tokenAddress: string]: SupportedTokenDetails;\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['supported_tokens']>(state => state.supported_tokens);\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport {\n  BillingModelTypes,\n  BillingModelTypeTitles,\n  isAnyRecurringBM,\n  isDynamicBM,\n  isRecurringWithTrial,\n  SubscriptionTableTypes,\n  BMTrialTypesLable,\n  isDynamicRecurring,\n  fromTokenDecimals,\n  isRecurringFreeTrial,\n} from '../../utils';\nimport Loader from '../Loader';\nimport styled from 'styled-components';\nimport { SerializedBillingModel, SerializedSubscriptionDetails } from '../../utils/blockchain-serializers';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Arrow from '../../assets/images/Vector.png';\nimport { useSupportedTokens } from '../../state/supported-tokens/hooks';\nimport { ButtonPrimary } from '../Button';\nimport CancelSubscriptionModal from '../CancelSubscriptionModal';\nimport humanizeDuration from 'humanize-duration';\nimport { useActiveWeb3React } from '../../hooks';\nimport KEEPER_REGISTRY_ADDRESS from '../../constants/contracts/keeperRegistry';\n\nexport const totalAmountPaid = (subscription, billingModel, billingModelType?) => {\n  const bmType = BillingModelTypes[subscription?.billingModelType] || BillingModelTypes[billingModelType];\n\n  switch (bmType) {\n    case String(BillingModelTypes.Single):\n    case String(BillingModelTypes.SingleDynamic):\n      return subscription?.pullPayments[0]?.paymentAmount;\n\n    case String(BillingModelTypes.Recurring):\n    case String(BillingModelTypes.RecurringFreeTrial):\n      return subscription?.amount * subscription?.pullPaymentIDs.length;\n\n    case String(BillingModelTypes.RecurringPaidTrial):\n      return subscription?.billingModel?.initialAmount\n        ? Number(subscription?.billingModel.initialAmount)\n        : Number(billingModel?.initialAmount) + Number(subscription?.amount) * subscription?.pullPaymentIDs.length;\n\n    case String(BillingModelTypes.RecurringDynamic):\n      return (\n        Number(subscription?.amount) * Number(subscription?.pullPaymentIDs.length) +\n        (Number(subscription?.initialAmount) ? Number(subscription?.initialAmount) : 0)\n      );\n\n    default: {\n      return 0;\n    }\n  }\n};\n\nconst MainContent = styled.div`\n  .tap-main {\n    display: flex;\n    flex-direction: row-reverse;\n  }\n\n  color: #000;\n\n  .top-head {\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: end;\n    width: 50%;\n  }\n\n  .top-head .icon-wrap {\n    margin-top: 20px;\n    margin-right: 15px;\n    display: flex;\n    align-items: flex-start;\n    width: 50%;\n    justify-content: end;\n    cursor: pointer;\n  }\n\n  .top-head .icon-wrap img {\n    margin-left: 5px;\n  }\n\n  .heading {\n    h3 {\n      font-weight: 400;\n      margin-bottom: 5px;\n    }\n\n    p {\n      font-size: 14px;\n      color: #756f82;\n      margin-top: 0;\n    }\n  }\n\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n  }\n\n  .table-top {\n    margin-top: 30px;\n    margin-bottom: 1rem;\n    justify-content: space-between;\n  }\n\n  .subscription-wrapper {\n    .btn-wrap .align-btn {\n      display: flex;\n      align-items: center;\n\n      button.btn-theme-outlined {\n        background: #fff;\n        border: 1px solid #b2acbf;\n        padding: 9px 25px;\n        border-radius: 6px;\n        font-size: 12px;\n        min-width: 97px;\n      }\n    }\n\n    .btn-wrap {\n      margin-top: 20px;\n\n      .align-btn button {\n        margin-right: 5px;\n      }\n    }\n\n    h3,\n    h4,\n    h5 {\n      font-weight: 500;\n    }\n\n    .bg-back {\n      background: #f8f5ff;\n      padding: 10px 20px;\n    }\n\n    .bg-back .details-wrapper {\n      display: flex;\n    }\n\n    .bg-back .details-wrapper .items {\n      width: 160px;\n    }\n\n    .bg-back .details-wrapper .items p {\n      margin-bottom: 0;\n      font-size: 12px;\n      color: #444;\n    }\n\n    .bg-back .details-wrapper .items h5,\n    .bg-back .details-wrapper .items h3 {\n      margin-top: 5px;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px;\n    margin-bottom: 40px;\n\n    span {\n      line-height: 2rem;\n      margin-right: 1rem;\n    }\n\n    select {\n      border: none;\n    }\n\n    .navigation {\n      display: flex;\n\n      p {\n        background: #ededed;\n        border-radius: 5px;\n        padding: 8px 14px;\n        margin: 0 5px;\n        cursor: pointer;\n\n        #navigationOne {\n          transform: rotate(180deg);\n        }\n      }\n    }\n  }\n\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  .top-wrap {\n    margin-top: 60px;\n    display: flex;\n    justify-content: space-between;\n    width: 50%;\n\n    .total-earning {\n      width: 300px;\n      border: 0;\n    }\n  }\n\n  .select-drop {\n    display: flex;\n\n    select {\n      padding: 10px;\n      border-radius: 20px;\n      border: 1px solid #d9d9d9;\n      margin: 0 20px;\n      font-size: 13px;\n    }\n\n    button.table-top-btn {\n      &:hover {\n        background: #ddd;\n      }\n\n      &:active {\n        background: #ddd;\n      }\n\n      padding: 10px 19px;\n      border-radius: 20px;\n      border: 1px solid #d9d9d9;\n      margin: 0 10px;\n      font-size: 13px;\n      background: transparent;\n    }\n  }\n\n  @media screen and (max-width: 1366px) {\n    .select-drop button.table-top-btn {\n      padding: 7px 19px;\n      font-size: 11px;\n    }\n\n    .new-billing-model {\n      font-size: 11px;\n      display: flex;\n      white-space: nowrap;\n      align-items: center;\n    }\n\n    .table-top .select-drop select {\n      font-size: 11px;\n      padding: 7px;\n    }\n\n    .new-billing-model a {\n      width: 22px;\n      height: 22px;\n      font-size: 22px;\n      line-height: 21px;\n    }\n\n    h3 {\n      font-size: 14px;\n    }\n\n    .export {\n      font-size: 11px;\n      display: flex;\n      align-items: center;\n    }\n  }\n`;\n\nconst TableTopWrap = styled.div`\n  display: flex;\n  align-items: center;\n  h3 {\n    font-weight: 400;\n    width: 30%;\n  }\n  .new-billing-model {\n    font-size: 14px;\n    button {\n      padding: 0px;\n      border-radius: 50%;\n      width: 35px;\n      height: 35px;\n      border: 0;\n      background: #7023ff;\n      color: #fff;\n      font-size: 26px;\n      line-height: 35px;\n      margin-left: 10px;\n      cursor: pointer;\n      :hover {\n        background: #9e70f5;\n      }\n    }\n  }\n\n  .react-daterange-picker > .react-daterange-picker__wrapper {\n    border-radius: 20px;\n    border: 1px solid #d9d9d9;\n    box-shadow: inset 0 2px 2px #e9e9e9;\n    font-size: 13px;\n    padding: 6px 10px 5px;\n  }\n  .csv-link {\n    padding: 10px 15px;\n    border-radius: 20px;\n    border: 1px solid #d9d9d9;\n    margin: 0 20px 0 15px;\n    text-decoration: none;\n    font-size: 13px;\n    color: inherit;\n  }\n`;\n\nconst StyledTable = styled.table`\n  .empty-table-row {\n    text-align: center;\n    font-size: 1rem;\n    line-height: 2rem;\n  }\n  button.action-btn:disabled {\n    background-color: #edeef2;\n    color: #888d9b;\n  }\n  margin-bottom: 100px;\n  border-collapse: collapse;\n  border-spacing: none;\n  width: 100%;\n  border: 1px solid #ddd;\n  caption-side: bottom;\n  empty-cell: show | hide;\n  empty-cell is a property of table or the cells themselves\n \nvertical-align: baseline | sub | super | text-top |\n                text-bottom | middle | top | bottom |\n                <percentage> | <length>\n \n   tbody {\n    vertical-align: top;\n  }\n  td,\n  th {\n    border: 1px solid #ccc;\n  }\n  thead tr th:nth-child(3) {\n    width: 10%;\n  }\n\n  th:nth-child(2) {\n    width: 20%;\n  }\n\n  thead tr th:nth-child(7) {\n    width: 10%;\n  }\n  // td:nth-child(3){\n  //   color:#7023FF;\n  // }\n  td {\n    padding: 10px 10px;\n    font-size: 12px;\n    border: 1px solid #eae8ee;\n    color: #756f82;\n    :first-child {\n      border-left: none;\n    }\n    :last-child {\n      border-right: none;\n    }\n  }\n  th {\n    padding: 10px 10px;\n    font-size: 12px;\n    border: 1px solid #eae8ee;\n    text-align: left;\n    font-weight: normal;\n    :first-child {\n      border-left: none;\n    }\n    :last-child {\n      border-right: none;\n    }\n  }\n  tbody {\n    position: relative;\n  }\n\n  tbody tr {\n    background-color: #fff;\n    :hover {\n      background-color: #f7f6f9;\n    }\n  }\n  thead > tr {\n    background-color: #f7f6f9;\n  }\n  tbody > span {\n    position: absolute;\n    left: 48%;\n    top: 22px;\n  }\n  small {\n    padding: 7px;\n    border-radius: 7px;\n  }\n  small.SUCCESS {\n    color: #00996d;\n    background: #e5fff8;\n  }\n  small.PENDING {\n    color: #b28824;\n    background: #fff7e5;\n  }\n  small.REJECTED {\n    color: #ff647c;\n    background: #ffe5e9;\n  }\n  .loader-main {\n    position: relative;\n    margin: 1rem auto;\n    left: 50%;\n  }\n  .action-btn {\n    width: 120px;\n    height: 40px;\n    font-size: 14px;\n    border-radius: 10px;\n    display: inline-block;\n    padding: 5px !important;\n  }\n`;\n\nconst StyledLink = styled.a`\n&:hover{\n  .sidebar-text{\n    color: #7023FF;\n  }\n  .default{\n    display: none;\n  }\n  .focus{\n    display:inline;\n  }\n}\ndisplay: flex;\nmargin-bottom: 2px;\ntext-decoration: none;\n.focus{\n  display:none;\n}\nimg{\n  margin-right: 10px;\n}\n  }\n`;\n\nexport interface SubscriptionTableConfig {\n  type: SubscriptionTableTypes;\n  subscriptionsData: SerializedSubscriptionDetails[] | null;\n  billingModel?: SerializedBillingModel | null;\n  billingModelType?: BillingModelTypes | null;\n}\n\nconst SubscriptionsTable = ({ type, subscriptionsData, billingModel, billingModelType }: SubscriptionTableConfig) => {\n  const { account, chainId } = useActiveWeb3React();\n  const { pathname } = useLocation();\n  const history = useHistory();\n  // console.log('subscriptionsData', subscriptionsData)\n\n  const supportedTokens = useSupportedTokens();\n\n  const [status, setStatus] = useState(null);\n\n  const todayDate = Number(moment().unix());\n\n  const [today, setToday] = useState(null);\n  const [yesterday, setYesterday] = useState(null);\n  const [week, setWeek] = useState(null);\n  const [month, setMonth] = useState(null);\n  const [dateRangeValue, setDateRangeValue] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const [statusOptions, setStatusOptions] = useState([\n    { id: 0, value: 'Status: All' },\n    { id: 1, value: 'ACTIVE' },\n    { id: 2, value: 'CANCELLED' },\n    { id: 2, value: 'COMPLETED' },\n  ]);\n\n  const setStatusHandler = e => {\n    let st = e.target.value;\n    setStatus(st);\n    setWeek(null);\n    setMonth(null);\n    setYesterday(null);\n    setToday(null);\n  };\n\n  const getDaysOfMonth = () => {\n    let y = new Date().getFullYear();\n    let m = new Date().getMonth() + 1;\n\n    const monthDate = moment(y + '-' + m, 'YYYY-MM');\n    let daysInMonth = monthDate.daysInMonth();\n    const arrDays = [];\n    let date = new Date().getDate();\n\n    while (daysInMonth) {\n      const current = moment().date(daysInMonth);\n      if (daysInMonth <= date) {\n        arrDays.push(current.format('MM/DD/YYYY'));\n      }\n      daysInMonth--;\n    }\n    return arrDays;\n  };\n\n  let dateList = getDaysOfMonth();\n\n  const dateFilters = (key, event = null) => {\n    let date;\n\n    setToday(null);\n    setWeek(null);\n    setMonth(null);\n    setYesterday(null);\n    setStatus(null);\n\n    if (key === 'today') {\n      date = moment().unix();\n      setToday(Number(date));\n    }\n    if (key === 'yesterday') {\n      date = moment().subtract(1, 'days').unix();\n      setYesterday(Number(date));\n    }\n    if (key === 'week') {\n      date = moment().subtract(1, 'week').unix();\n      setWeek(Number(date));\n    }\n    if (key === 'month') {\n      date = moment()\n        .subtract(dateList.length - 1, 'month')\n        .unix();\n      setMonth(Number(date));\n    }\n    if (key === 'dateRange') {\n      setStartDate(Number(moment(event?.[0]).unix()));\n      setEndDate(Number(moment(event?.[1]).unix()));\n      setDateRangeValue(event);\n    }\n  };\n\n  const filterHandler = entry => {\n    const dateForChecking = isAnyRecurringBM(\n      type === SubscriptionTableTypes.MyCustomers\n        ? BillingModelTypes[billingModelType]\n        : BillingModelTypes[entry['billingModelType']],\n    )\n      ? Number(entry['startTimestamp'])\n      : Number(entry['pullPayments'][0]['executionTimestamp']);\n    if (status) {\n      switch (status) {\n        case 'ACTIVE':\n          return (\n            (String(entry.cancelTimestamp) === '0' || entry.cancelTimestamp === null) &&\n            Number(entry.numberOfPayments) > 0\n          );\n        case 'CANCELLED':\n          return Number(entry.cancelTimestamp) > 0;\n        case 'COMPLETED':\n          return Number(entry.numberOfPayments) === 0;\n        default:\n          return entry;\n      }\n    } else if (today) {\n      return new Date(dateForChecking * 1000).getDate() === new Date(today * 1000).getDate();\n    } else if (yesterday) {\n      return new Date(dateForChecking * 1000).getDate() === new Date(yesterday * 1000).getDate();\n    } else if (week) {\n      return dateForChecking >= week && dateForChecking <= todayDate;\n    } else if (month) {\n      return dateForChecking >= month && dateForChecking <= todayDate;\n    } else if (dateRangeValue) {\n      return dateForChecking >= startDate && dateForChecking <= endDate;\n    } else {\n      return entry;\n    }\n  };\n\n  const headers = [\n    { label: 'Id', key: 'id' },\n    { label: 'Wallet', key: 'Wallet' },\n    { label: 'First Payment', key: 'First Payment' },\n    { label: 'Last Payment', key: 'Last Payment' },\n    { label: 'Next Payment', key: 'Next Payment' },\n    { label: 'Status', key: 'Status' },\n    { label: 'Total Amount', key: 'Total Amount' },\n  ];\n  const singleBillingHeaders = [\n    { label: 'Id', key: 'id' },\n    { label: 'Wallet', key: 'Wallet' },\n    { label: 'First Payment', key: 'First Payment' },\n    { label: 'Status', key: 'Status' },\n    { label: 'Total Amount', key: 'Total Amount' },\n  ];\n  const singleDynamicBillingHeaders = [\n    { label: 'Id', key: 'id' },\n    { label: 'Name', key: 'Name' },\n    { label: 'Wallet', key: 'Wallet' },\n    { label: 'Status', key: 'Status' },\n    { label: 'Total Amount', key: 'Total Amount' },\n  ];\n  const recurringDynamicBillingHeaders = [\n    { label: 'Id', key: 'id' },\n    { label: 'Name', key: 'Name' },\n    { label: 'Wallet', key: 'Wallet' },\n    { label: 'Status', key: 'Status' },\n    { label: 'Total Amount', key: 'Total Amount' },\n  ];\n\n  const csvReport = {\n    data: subscriptionsData,\n    headers:\n      billingModelType === BillingModelTypes.Single\n        ? singleBillingHeaders\n        : billingModelType === BillingModelTypes.SingleDynamic\n        ? singleDynamicBillingHeaders\n        : billingModelType === BillingModelTypes.RecurringDynamic\n        ? recurringDynamicBillingHeaders\n        : headers,\n    filename: 'subscriptions.csv',\n  };\n\n  const mySubscriptionHeaders = [\n    'Unique Ref. Id',\n    'Name',\n    'Type',\n    'No. of Payments',\n    'Price',\n    'Subscription Date',\n    'Last Payment',\n    'Next Payment',\n    'Status',\n    'Total Amount',\n    'Action',\n  ];\n\n  const freeTrialBMHeaders = [\n    'Unique Ref. Id',\n    'Wallet',\n    'No. of Payments',\n    'Trial Period',\n    'First Payment',\n    'Last Payment',\n    'Next Payment',\n    'Status',\n    'Total Amount',\n  ];\n\n  const paidTrialBMHeaders = [\n    'Unique Ref. Id',\n    'Wallet',\n    'No. of Payments',\n    'Trial Period',\n    'Initial Amount',\n    'First Payment',\n    'Last Payment',\n    'Next Payment',\n    'Status',\n    'Total Amount',\n  ];\n\n  const recurringDynamicBMHeaders = [\n    'Unique Ref. Id',\n    'Name',\n    'Wallet',\n    'Trial Type',\n    'First Payment',\n    'Last Payment',\n    'Next Payment',\n    'Status',\n    'Total Amount',\n  ];\n  const myCustomersHeaders = [\n    'Unique Ref. Id',\n    'Wallet',\n    'No. of Payments',\n    'First Payment',\n    'Last Payment',\n    'Next Payment',\n    'Status',\n    'Total Amount',\n  ];\n  const singleDynamicBMHeaders = ['Unique Ref. Id', 'Name', 'Wallet', 'Payment Date', 'Total Amount'];\n  const singleBMHeaders = ['Unique Ref. Id', 'Wallet', 'Payment Date', 'Total Amount'];\n  const tableHeaders = (): string[] => {\n    switch (billingModelType) {\n      case String(BillingModelTypes.Single):\n        return singleBMHeaders;\n      case String(BillingModelTypes.SingleDynamic):\n        return singleDynamicBMHeaders;\n      case String(BillingModelTypes.RecurringDynamic):\n        return recurringDynamicBMHeaders;\n      case String(BillingModelTypes.Recurring):\n        return myCustomersHeaders;\n      case String(BillingModelTypes.RecurringPaidTrial):\n        return paidTrialBMHeaders;\n      case String(BillingModelTypes.RecurringFreeTrial):\n        return freeTrialBMHeaders;\n      default: {\n        return mySubscriptionHeaders;\n      }\n    }\n  };\n\n  const handleClick = ({ id, billingModelId }) => {\n    if (type === SubscriptionTableTypes.MyCustomers) {\n      history.push({\n        pathname: `/merchant/transaction-details`,\n        search: `?billing-model-type=${billingModelType}&billing-model-id=${billingModelId}&subscription-id=${id}`,\n      });\n    }\n  };\n\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [counter, setCounter] = useState<number>(1);\n\n  const currentData = data => {\n    const begin = (currentPage - 1) * rowCount;\n    const end = begin + rowCount;\n    return data?.slice(begin, end);\n  };\n\n  const next = () => {\n    const maxPage = Math.ceil((subscriptionsData?.length || 1) / rowCount);\n    if (counter + rowCount < subscriptionsData?.length) {\n      setCounter(counter + rowCount);\n    }\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n  };\n\n  const prev = () => {\n    if (counter != 1) {\n      setCounter(counter - rowCount);\n    }\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n  };\n\n  const [showCancelModal, setShowCancelModal] = useState(false);\n  const [cancelSubscriptionId, setCancelSubscriptionId] = useState(null);\n  const [cancelSubscriptionBillingModelType, setCancelSubscriptionBillingModelType] = useState(null);\n\n  const cancelSubscriptionHandler = (id: string, bmType: BillingModelTypes) => {\n    setCancelSubscriptionId(id);\n    setCancelSubscriptionBillingModelType(bmType);\n    setShowCancelModal(true);\n  };\n\n  const [isCancelBtnLoading, setIsCancelBtnLoading] = useState(false);\n\n  return (\n    <MainContent>\n      <TableTopWrap className=\"table-top\">\n        <h3>{type === SubscriptionTableTypes.MySubscriptions ? 'My Subscriptions' : 'Customers'}</h3>\n\n        <div className=\"select-drop\">\n          {type === SubscriptionTableTypes.MySubscriptions ||\n            (isAnyRecurringBM(BillingModelTypes[billingModelType]) && (\n              <select onChange={setStatusHandler}>\n                {statusOptions?.map((value, index) => {\n                  return (\n                    <option key={index} value={value.value}>\n                      {value.value}\n                    </option>\n                  );\n                })}\n              </select>\n            ))}\n\n          <DateRangePicker\n            monthPlaceholder=\"MM\"\n            dayPlaceholder=\"DD\"\n            yearPlaceholder=\"YYYY\"\n            onChange={e => dateFilters('dateRange', e)}\n            value={dateRangeValue}\n          />\n\n          <button className=\"table-top-btn\" onClick={() => dateFilters('today')}>\n            Today\n          </button>\n\n          <button className=\"table-top-btn\" onClick={() => dateFilters('yesterday')}>\n            Yesterday\n          </button>\n\n          <button className=\"table-top-btn\" onClick={() => dateFilters('week')}>\n            Week\n          </button>\n\n          <button className=\"table-top-btn\" onClick={() => dateFilters('month')}>\n            Month\n          </button>\n\n          {/*<div style={{ margin: \"10px 0 0 10px\" }}>*/}\n          {/*  Export{\" \"}*/}\n          {/*  <CSVLink className=\"csv-link\" {...csvReport}>*/}\n          {/*    CSV*/}\n          {/*  </CSVLink>*/}\n          {/*</div>*/}\n        </div>\n      </TableTopWrap>\n\n      <StyledTable>\n        <thead>\n          <tr>\n            {tableHeaders().map((title, index) => (\n              <th key={index}>{title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {subscriptionsData === null ? (\n            <tr>\n              <td colSpan={12}>\n                <div>\n                  <Loader className=\"loader-main\" size={'3rem'} />\n                </div>\n              </td>\n            </tr>\n          ) : subscriptionsData?.filter(filterHandler)?.length > 0 ? (\n            currentData(subscriptionsData?.filter(filterHandler)).map((row, index) => (\n              <tr key={index}>\n                <td> {row?.['uniqueReference']}</td>\n\n                {(type === SubscriptionTableTypes.MySubscriptions ||\n                  isDynamicBM(BillingModelTypes[billingModelType])) && (\n                  <td>\n                    {isDynamicBM(BillingModelTypes[row.billingModelType]) && !row?.name\n                      ? 'Dynamic'\n                      : row?.billingModel?.name\n                      ? row?.billingModel?.name\n                      : row?.name}\n                  </td>\n                )}\n\n                {type === SubscriptionTableTypes.MySubscriptions && (\n                  <td>{BillingModelTypeTitles[BillingModelTypes[row?.billingModelType]]}</td>\n                )}\n\n                {type === SubscriptionTableTypes.MyCustomers && (\n                  <td\n                    style={{ cursor: 'pointer' }}\n                    onClick={() =>\n                      handleClick({\n                        id: row?.['id'],\n                        billingModelId: row?.['billingModelId'] !== null ? row?.['billingModelId']! : billingModel?.id,\n                      })\n                    }\n                  >\n                    <StyledLink className=\"active\">{row?.subscriber}</StyledLink>\n                  </td>\n                )}\n\n                {String(BillingModelTypes.RecurringDynamic) == BillingModelTypes[billingModelType] ? (\n                  <td>{BMTrialTypesLable[billingModel?.trialType]}</td>\n                ) : isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                  isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                  <td>\n                    {row.pullPaymentIDs.length}/\n                    {!isDynamicRecurring(BillingModelTypes[billingModelType]) &&\n                    type === SubscriptionTableTypes.MyCustomers\n                      ? billingModel?.numberOfPayments\n                      : row?.billingModel?.numberOfPayments}\n                    {isDynamicRecurring(BillingModelTypes[billingModelType]) &&\n                    type === SubscriptionTableTypes.MyCustomers\n                      ? billingModel?.totalPayments\n                      : row?.totalPayments}\n                  </td>\n                ) : (\n                  type === SubscriptionTableTypes.MySubscriptions && <td>1/1</td>\n                )}\n\n                {type === SubscriptionTableTypes.MySubscriptions &&\n                  (isDynamicBM(BillingModelTypes[row.billingModelType]) ? (\n                    <td>Dynamic price</td>\n                  ) : (\n                    <td>\n                      {fromTokenDecimals(\n                        row?.amount ? row?.amount.toString() : billingModel?.amount.toString(),\n                        supportedTokens?.[row.settlementToken]?.decimals.toString(),\n                      ).toString()}\n                      &nbsp;\n                      {supportedTokens?.[row.settlementToken]?.symbol}\n                      <span>&nbsp; in {supportedTokens?.[row.paymentToken]?.symbol}</span>\n                    </td>\n                  ))}\n\n                {type === SubscriptionTableTypes.MyCustomers &&\n                  (isRecurringWithTrial(BillingModelTypes[billingModelType]) ||\n                    isRecurringWithTrial(BillingModelTypes[row.billingModelType])) && (\n                    <td>\n                      {humanizeDuration(Number(billingModel?.trialPeriod) * 1000, {\n                        largest: 1,\n                        round: true,\n                      })}\n                    </td>\n                  )}\n\n                {type === SubscriptionTableTypes.MyCustomers &&\n                  (BillingModelTypes[billingModel.billingModelType] === BillingModelTypes.RecurringPaidTrial ||\n                    BillingModelTypes[billingModelType] === BillingModelTypes.RecurringPaidTrial) && (\n                    <td>\n                      {fromTokenDecimals(\n                        billingModel?.initialAmount.toString(),\n                        supportedTokens?.[row.settlementToken]?.decimals.toString(),\n                      ).toString()}\n                      &nbsp;\n                      {supportedTokens?.[row.settlementToken]?.symbol}\n                    </td>\n                  )}\n\n                {isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                  <td>\n                    {isRecurringFreeTrial(BillingModelTypes[row.billingModelType]) ||\n                    isRecurringFreeTrial(BillingModelTypes[billingModelType])\n                      ? row?.pullPayments[0]?.executionTimestamp\n                        ? moment(Number(row?.pullPayments[0]?.executionTimestamp) * 1000).format('lll')\n                        : 'No payment yet'\n                      : moment(Number(row?.startTimestamp) * 1000).format('lll')}\n                  </td>\n                ) : (\n                  <td>{moment(Number(row?.pullPayments?.[0]?.executionTimestamp) * 1000).format('lll')}</td>\n                )}\n                {isAnyRecurringBM(BillingModelTypes[billingModelType ? billingModelType : row?.billingModelType]) ? (\n                  (BillingModelTypes[billingModelType ? billingModelType : row?.billingModelType] ===\n                    BillingModelTypes.RecurringFreeTrial ||\n                    BillingModelTypes[billingModelType ? billingModelType : row?.billingModelType] ===\n                      BillingModelTypes.RecurringFreeTrial ||\n                    BillingModelTypes[billingModelType ? billingModelType : row?.billingModelType] ===\n                      BillingModelTypes.RecurringDynamic) &&\n                  Number(row?.lastPaymentTimestamp) === 0 ? (\n                    <td>No initial payment yet</td>\n                  ) : (\n                    <td> {moment(Number(row?.lastPaymentTimestamp) * 1000).format('lll')}</td>\n                  )\n                ) : (\n                  type === SubscriptionTableTypes.MySubscriptions && (\n                    <td> {moment(Number(row?.pullPayments?.[0]?.executionTimestamp) * 1000).format('lll')}</td>\n                  )\n                )}\n\n                {isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                  <td>\n                    {Number(row?.cancelTimestamp) !== 0 || Number(row?.numberOfPayments) === 0\n                      ? 'No furture payment'\n                      : moment(Number(row?.nextPaymentTimestamp) * 1000).format('lll')}\n                  </td>\n                ) : (\n                  type === SubscriptionTableTypes.MySubscriptions && <td>No future payment</td>\n                )}\n\n                {isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                  <>\n                    {Number(row?.numberOfPayments ? row?.numberOfPayments : row?.totalPayments) > 0 &&\n                    (row?.totalPayments ? row?.totalPayments > row?.pullPaymentIDs.length : true) ? (\n                      <>\n                        {Number(row?.cancelTimestamp) > 0 ? (\n                          <td>\n                            {' '}\n                            CANCELLED\n                            <br />\n                            <span style={{ color: '#999', fontSize: '0.7rem' }}>\n                              by{' '}\n                              {String(row?.cancelledBy.toLowerCase()) ===\n                              String(KEEPER_REGISTRY_ADDRESS[chainId].toLowerCase())\n                                ? 'Low balance'\n                                : (row?.cancelledBy === account && pathname.includes('customer')) ||\n                                  (row?.cancelledBy !== account && pathname.includes('merchant'))\n                                ? 'Customer'\n                                : 'Merchant'}\n                            </span>{' '}\n                          </td>\n                        ) : (\n                          <td> ACTIVE </td>\n                        )}\n                      </>\n                    ) : (\n                      <td> COMPLETED </td>\n                    )}\n                  </>\n                ) : (\n                  <>{type === SubscriptionTableTypes.MySubscriptions && <td> COMPLETED </td>}</>\n                )}\n\n                {\n                  <td>\n                    {totalAmountPaid(row, billingModel, billingModelType) /\n                      10 ** Number(supportedTokens?.[row.settlementToken]?.decimals)}\n                    &nbsp;\n                    {supportedTokens?.[row.settlementToken]?.symbol}\n                    {type === SubscriptionTableTypes.MySubscriptions && (\n                      <span>&nbsp; in {supportedTokens?.[row.paymentToken]?.symbol}</span>\n                    )}\n                  </td>\n                }\n\n                {type === SubscriptionTableTypes.MySubscriptions && (\n                  <td>\n                    <ButtonPrimary\n                      className=\"action-btn\"\n                      onClick={() => {\n                        cancelSubscriptionHandler(row?.['id'], BillingModelTypes[row?.['billingModelType']]);\n                      }}\n                      disabled={\n                        Number(row?.numberOfPayments ? row?.numberOfPayments : row?.totalPayments) === 0 ||\n                        Number(row?.cancelTimestamp) > 0 ||\n                        (row?.totalPayments ? Number(row?.totalPayments) === row?.pullPaymentIDs.length : false)\n                      }\n                    >{`Cancel`}</ButtonPrimary>\n                  </td>\n                )}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={12}>\n                <div className=\"empty-table-row\">\n                  <span>No Subscriptions</span>\n                </div>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </StyledTable>\n\n      <div className=\"pagination\">\n        <span>\n          Show:\n          <select\n            onChange={e => {\n              setRowCount(parseInt(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"10\">10 Rows</option>\n            <option value=\"25\">25 Rows</option>\n            <option value=\"50\">50 Rows</option>\n            <option value=\"100\">100 Rows</option>)\n          </select>\n        </span>\n        <div className=\"navigation\">\n          <p onClick={prev}>\n            <img src={Arrow} id=\"navigationOne\" alt=\"arrows\" />\n          </p>\n          <p onClick={next}>\n            <img src={Arrow} alt=\"arrows\" />\n          </p>\n        </div>\n      </div>\n\n      <CancelSubscriptionModal\n        cancelSubscriptionId={cancelSubscriptionId}\n        billingModelType={cancelSubscriptionBillingModelType}\n        showCancelModal={showCancelModal}\n        setShowCancelModal={setShowCancelModal}\n        isLoading={isCancelBtnLoading}\n        setIsLoading={setIsCancelBtnLoading}\n      />\n    </MainContent>\n  );\n};\n\nexport default SubscriptionsTable;\n","import { AutoColumn } from '../Column';\nimport { InfoCard } from '../InfoCard';\nimport { ButtonPrimary } from '../Button';\nimport styled from 'styled-components';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { useEffect, useState } from 'react';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { BillingModelTypes, calculateGasMargin, WAIT_BLOCK_CONFIRMATIONS } from '../../utils';\nimport { TransactionResponse } from '@ethersproject/abstract-provider';\nimport { addTransaction } from '../../state/transactions/actions';\nimport { useActiveWeb3React } from '../../hooks';\nimport Modal from '../Modal';\nimport {\n  useDynamicRecurringPPContract,\n  useFreeTrialRecurringPPContract,\n  usePaidTrialRecurringPPContract,\n  useRecurringPPContract,\n} from '../../hooks/useContract';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../state';\nimport Loader from '../Loader';\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst MarginLeft = styled.div`\n  margin-left: 0;\n\n  .AutoColumnSub {\n    #cancelSub {\n      border: none;\n    }\n\n    #pOne {\n      color: #756f82;\n      marginbottom: -8px;\n    }\n\n    #pTow {\n      color: #756f82;\n    }\n  }\n`;\nconst ModelContent = styled.div`\n  color: #000;\n\n  span.tags {\n    color: #f92672;\n    font-size: 15px;\n  }\n\n  .code-wrap .body {\n    color: #e6db74;\n    font-size: 15px;\n    line-height: 2;\n    padding-left: 20px;\n  }\n\n  .code-wrap .body span.attribute {\n    color: #a6e22e;\n  }\n\n  .tab-menu {\n    display: flex;\n    border-bottom: 1px solid #ddd;\n    margin-bottom: 20px;\n    font-size: 14px;\n\n    .tab-item {\n      padding: 7px 9px;\n      color: #756F82;\n      cursor: pointer;\n    }\n\n    .tab-item.active {\n      color: #7023FF;\n      border-bottom: 2px solid #7023FF;\n    }\n  }\n\n  .tab-wrapper {\n    background: #F8F5FF;\n    padding: 20px;\n    width: 100%;\n    max-width: 100%;\n    margin-bottom: 40px;\n    margin-top: 0;\n    text-align: center;\n\n    .code-copy {\n      #CopyButtonPrimary {\n        color: red;\n      }\n    }\n\n    input[type=\"text\"] {\n      height: 45px;\n      display: block;\n      margin: auto auto 18px;\n      max-width: 300px;\n      width: 100%;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      padding: 0px 12px;\n    }\n\n    a {\n      color: #7023ff;\n      text-decoration: none;\n      font-size: 16px;\n    }\n\n    .XFlix {\n      font-weight: bold;\n      color: #000;\n    }\n\n    .tab-content .tab-pane {\n      display: none;\n\n      &.active {\n        display: block;\n      }\n\n      h3 {\n        font-size: 16px;\n        font-weight: 500;\n        padding: 7px 7px 7px 200px;\n        text-align: left;\n        margin: 0;\n      }\n\n      .btn-theme {\n        background: #7023FF;\n        border: 0;\n        padding: 12px 40px;\n        border-radius: 10px;\n        color: #fff;\n        font-size: 14px;\n      }\n\n      p.power {\n        font-size: 9px;\n        color: #B2ACBF;\n      }\n\n      p {\n        font-size: 14px;\n        color: #756F82;\n        margin-bottom: 20px;\n      }\n\n      .notice-box {\n        box-shadow: 2px 5px 10px 2px #4a435926;\n        border-radius: 15px;\n        padding: 30px 30px 80px;\n        text-align: center;\n        margin-bottom: 20px;\n      }\n\n      .code-box {\n        background: #1A1526;\n        color: #cbcbcb;\n        padding: 10px 20px;\n        border-radius: 8px;\n\n        table tr td:first-child {\n          padding: 0 20px 0 0;\n        }\n\n        .code-copy {\n          display: flex;\n          justify-content: space-between;\n        }\n      }\n\n      .scroll {\n        padding: 4px;\n        width: 100%;\n        height: 200px;\n        overflow-x: auto;\n        overflow-y: auto;\n        background-color: #000;\n        color: #fff;\n        text-align: left;\n        line-height: 25px;\n        margin: 4px 4px 20px;\n      }\n    }\n`;\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0 0 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  background-color: #f8f5ff;\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  .sideContent {\n    .tab-wrapper {\n    }\n\n    .tab-footer {\n      .code-copy {\n        display: flex;\n        justify-content: flex-end;\n\n        #CodeCopyCancelButton {\n          border-color: #b2acbf;\n          margin-right: 10px;\n          background: transparent;\n          color: #000;\n          width: 120px;\n          display: inline-block;\n          padding: 8px;\n          border-radius: 10px;\n        }\n\n        #CodeCopyOkButton {\n          border-color: #7023ff;\n          margin-right: 10px;\n          background: #7023ff;\n          color: #fff;\n          width: 120px;\n          display: inline-block;\n          padding: 8px;\n          border-radius: 10px;\n          &.disabled {\n            background-color: #edeef2;\n            color: #888d9b;\n            box-shadow: none;\n            border: 1px solid transparent;\n            outline: none;\n            cursor: not-allowed;\n          }\n        }\n      }\n    }\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst CancelSubscriptionModalContent = ({\n  cancelSubscriptionId,\n  billingModelType,\n  cancelSubscriptionModal,\n  setCancelSubscriptionModal,\n  isLoading,\n  setIsLoading,\n}) => {\n  const { account, chainId } = useActiveWeb3React();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const recurringPPContract = useRecurringPPContract();\n  const dynamicRecurringPPContract = useDynamicRecurringPPContract();\n  const freeTrialRecurringPPContract = useFreeTrialRecurringPPContract();\n  const paidTrialRecurringPPContract = usePaidTrialRecurringPPContract();\n\n  const [cancelSubscriptionBoolean, setCancelSubscriptionBoolean] = useState(false);\n\n  const cancelSubscriptionTextHandler = e => {\n    let text = 'CANCEL';\n    let text2 = e.target.value;\n    setCancelSubscriptionBoolean(text === text2.toUpperCase());\n  };\n\n  const cancelSubscription = async () => {\n    if (!chainId || !account) return;\n    try {\n      let contract;\n      switch (billingModelType) {\n        case String(BillingModelTypes.RecurringDynamic):\n          contract = dynamicRecurringPPContract;\n          break;\n        case String(BillingModelTypes.Recurring):\n          contract = recurringPPContract;\n          break;\n        case String(BillingModelTypes.RecurringPaidTrial):\n          contract = paidTrialRecurringPPContract;\n          break;\n        case String(BillingModelTypes.RecurringFreeTrial):\n          contract = freeTrialRecurringPPContract;\n          break;\n        case String(BillingModelTypes.SingleDynamic):\n        case String(BillingModelTypes.Single):\n        default: {\n          return;\n        }\n      }\n      const estimatedGas: BigNumber = await contract.estimateGas.cancelSubscription(cancelSubscriptionId);\n      setIsLoading(true);\n      return await contract\n        .cancelSubscription(cancelSubscriptionId, {\n          gasLimit: calculateGasMargin(estimatedGas),\n        })\n        .then(async (response: TransactionResponse) => {\n          const summary = 'Cancel Billing Model Subscription';\n          const hash = response.hash;\n          const bmCancellation = {\n            subscriptionId: cancelSubscriptionId,\n          };\n          dispatch(\n            addTransaction({\n              hash,\n              from: account,\n              chainId,\n              bmCancellation,\n              summary,\n            }),\n          );\n          await response.wait(WAIT_BLOCK_CONFIRMATIONS);\n          setIsLoading(false);\n          setCancelSubscriptionModal(false);\n        })\n        .catch((error: Error) => {\n          setIsLoading(false);\n          console.debug(`Failed to cancel subscription. Reason: ${error.message}`);\n          throw error;\n        });\n    } catch (error) {\n      setIsLoading(false);\n      console.error(`Failed to cancel subscription. Reason: ${error.message}`);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <ModelContent className=\"cancel_subs\">\n        <UpperSection>\n          <CloseIcon onClick={() => setCancelSubscriptionModal(!cancelSubscriptionModal)}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            <MarginLeft>\n              <AutoColumn gap=\"md\" className=\"AutoColumnSub\">\n                <InfoCard title={'Cancel Subscription'} id=\"cancelSub\" />\n                <p id=\"pOne\">\n                  You can cancel your subscription and prevent the merchant from charging your wallet again. Please note\n                  this cannot be undone.\n                </p>\n                <p id=\"pTwo\">Are you sure you want to cancel this subscription?</p>\n              </AutoColumn>\n            </MarginLeft>\n          </HeaderRow>\n          <ContentWrapper>\n            <div className=\"sideContent\">\n              <div className=\"tab-wrapper\">\n                <p>\n                  Type the word <span className=\"XFlix\">CANCEL </span> in the input field below.\n                </p>\n                <input\n                  type=\"text\"\n                  style={{\n                    borderColor: cancelSubscriptionBoolean ? 'green' : 'red',\n                    outlineColor: cancelSubscriptionBoolean ? 'green' : 'red',\n                  }}\n                  onChange={cancelSubscriptionTextHandler}\n                  placeholder=\"Type here cancel\"\n                />\n                <span>\n                  By submitting this form, you agree with the <a href=\"#\">T&Cs</a>\n                </span>\n              </div>\n              <div className=\"tab-footer\">\n                <div className=\"code-copy\">\n                  <ButtonPrimary\n                    id=\"CodeCopyCancelButton\"\n                    onClick={() => setCancelSubscriptionModal(!cancelSubscriptionModal)}\n                  >\n                    {'Cancel'}\n                  </ButtonPrimary>\n                  <ButtonPrimary\n                    id=\"CodeCopyOkButton\"\n                    className={isLoading ? 'disabled' : ''}\n                    disabled={isLoading}\n                    onClick={() => (cancelSubscriptionBoolean ? cancelSubscription() : null)}\n                  >\n                    {isLoading ? <Loader /> : `OK`}\n                  </ButtonPrimary>\n                </div>\n              </div>\n            </div>\n          </ContentWrapper>\n        </UpperSection>\n      </ModelContent>\n    </Wrapper>\n  );\n};\n\nconst CancelSubscriptionModal = ({\n  cancelSubscriptionId,\n  billingModelType,\n  showCancelModal,\n  setShowCancelModal,\n  isLoading,\n  setIsLoading,\n}) => {\n  const [cancelSubscriptionModal, setCancelSubscriptionModal] = useState(showCancelModal);\n\n  useEffect(() => {\n    setCancelSubscriptionModal(showCancelModal);\n  }, [showCancelModal]);\n\n  useEffect(() => {\n    setShowCancelModal(cancelSubscriptionModal);\n  }, [cancelSubscriptionModal]);\n\n  const handleDismiss = () => {\n    if (!isLoading) {\n      setCancelSubscriptionModal(!cancelSubscriptionModal);\n    }\n  };\n\n  return (\n    <Modal isOpen={cancelSubscriptionModal} onDismiss={() => handleDismiss()} minHeight={false} maxHeight={90}>\n      {cancelSubscriptionModal && (\n        <CancelSubscriptionModalContent\n          cancelSubscriptionId={cancelSubscriptionId}\n          billingModelType={billingModelType}\n          cancelSubscriptionModal={cancelSubscriptionModal}\n          setCancelSubscriptionModal={setCancelSubscriptionModal}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelSubscriptionModal;\n","import { ChainId } from '../..';\n\nconst KEEPER_REGISTRY_ADDRESS: { [chainId in ChainId]: string } = {\n  // [ChainId.MAINNET]: '',\n  // [ChainId.ROPSTEN]: '',\n  // [ChainId.KOVAN]: '',\n  // [ChainId.RINKEBY]: '',\n  // [ChainId.GÖRLI]: '',\n  // [ChainId.BSC_MAINNET]: '',\n  // [ChainId.BSC_TESTNET]: '',\n  [ChainId.MATIC]: '0x02777053d6764996e594c3E88AF1D58D5363a2e6',\n  [ChainId.MUMBAI]: '0x02777053d6764996e594c3E88AF1D58D5363a2e6',\n};\n\nexport default KEEPER_REGISTRY_ADDRESS;\n"],"sourceRoot":""}