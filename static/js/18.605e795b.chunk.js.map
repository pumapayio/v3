{"version":3,"sources":["pages/MySubscriptions/index.tsx","state/my-subscriptions/hooks.tsx"],"names":["MainContent","styled","div","MySubscriptions","selectNavToggle","useContext","NavToggle","mySubscriptions","chainId","useActiveWeb3React","state","useSelector","my_subscriptions","subscriptions","bmType","Object","keys","map","value","index","push","BillingModelTypes","useMySubscriptions","className","SubscriptionsTable","type","SubscriptionTableTypes","subscriptionsData"],"mappings":"8QAOMA,EAAcC,UAAOC,IAAV,uOAcF,SAASC,IACtB,IAAMC,EAAkBC,qBAAWC,KAC7BC,ECjBD,WACL,IAAQC,EAAYC,cAAZD,QACFE,EAAQC,aACZ,SAACD,GAAD,OAAWA,EAAME,oBAGnB,IAAKJ,EAAS,MAAO,GAErB,IAAIK,EAAiD,GARe,WAS3DC,GACP,IAAKJ,EAAMF,KAAaE,EAAMF,GAASM,GACrC,iBAEFC,OAAOC,KAAKN,EAAMF,GAASM,IAASG,KAAI,SAACC,EAAOC,GAC9CN,EAAcO,KAAKV,EAAMF,GAASM,GAAQI,QAL9C,IAAK,IAAIJ,KAAUO,IAAmB,EAA7BP,GAST,OAAOD,EDDiBS,GAExB,OACE,mCACE,cAACtB,EAAD,CAAauB,UAAWnB,EAAkB,QAAU,GAApD,SACE,cAACoB,EAAA,EAAD,CACEC,KAAMC,IAAuBvB,gBAC7BwB,kBAAmBpB","file":"static/js/18.605e795b.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { NavToggle } from \"../App\";\nimport { useMySubscriptions } from \"../../state/my-subscriptions/hooks\";\nimport SubscriptionsTable from \"../../components/SubscriptionsTable\";\nimport { SubscriptionTableTypes } from \"../../utils\";\n\nconst MainContent = styled.div`\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n    margin-top: 1rem;\n  }\n\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding-left: 100px;\n  padding-right: 20px;\n`;\n\nexport default function MySubscriptions() {\n  const selectNavToggle = useContext(NavToggle);\n  const mySubscriptions = useMySubscriptions();\n\n  return (\n    <>\n      <MainContent className={selectNavToggle ? \" open\" : \"\"}>\n        <SubscriptionsTable\n          type={SubscriptionTableTypes.MySubscriptions}\n          subscriptionsData={mySubscriptions}\n        />\n      </MainContent>\n    </>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { AppState } from \"../index\";\nimport { SerializedSubscriptionDetails } from \"../../utils/blockchain-serializers\";\nimport { BillingModelTypes } from \"../../utils\";\n\nexport function useMySubscriptions(): SerializedSubscriptionDetails[] {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_subscriptions\"]>(\n    (state) => state.my_subscriptions\n  );\n\n  if (!chainId) return [];\n\n  let subscriptions: SerializedSubscriptionDetails[] = [];\n  for (let bmType in BillingModelTypes) {\n    if (!state[chainId] || !state[chainId][bmType]) {\n      continue;\n    }\n    Object.keys(state[chainId][bmType]).map((value, index) => {\n      subscriptions.push(state[chainId][bmType][value]);\n    });\n  }\n\n  return subscriptions;\n}\n\nexport function useMySubscriptionsPerBMType(): {\n  [billingModelType: string]: {\n    [subscriptionId: string]: SerializedSubscriptionDetails;\n  };\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_subscriptions\"]>(\n    (state) => state.my_subscriptions\n  );\n  return chainId ? state[chainId] ?? {} : {};\n}\n"],"sourceRoot":""}