{"version":3,"sources":["state/supported-tokens/hooks.tsx","components/SubscriptionsTable/index.tsx","components/CancelSubscriptionModal/index.tsx"],"names":["useSupportedTokens","chainId","useActiveWeb3React","state","useSelector","supported_tokens","totalAmountPaid","subscription","billingModel","billingModelType","BillingModelTypes","String","Single","SingleDynamic","pullPayments","paymentAmount","Recurring","RecurringFreeTrial","amount","pullPaymentIDs","length","RecurringPaidTrial","initialAmount","Number","RecurringDynamic","MainContent","styled","div","TableTopWrap","StyledTable","table","StyledLink","a","SubscriptionsTable","type","subscriptionsData","account","pathname","useLocation","history","useHistory","supportedTokens","useState","status","setStatus","todayDate","moment","unix","today","setToday","yesterday","setYesterday","week","setWeek","month","setMonth","dateRangeValue","setDateRangeValue","startDate","setStartDate","endDate","setEndDate","id","value","statusOptions","dateList","y","Date","getFullYear","m","getMonth","daysInMonth","arrDays","date","getDate","current","push","format","getDaysOfMonth","dateFilters","key","event","subtract","filterHandler","entry","dateForChecking","isAnyRecurringBM","SubscriptionTableTypes","MyCustomers","cancelTimestamp","numberOfPayments","mySubscriptionHeaders","freeTrialBMHeaders","paidTrialBMHeaders","recurringDynamicBMHeaders","myCustomersHeaders","singleDynamicBMHeaders","singleBMHeaders","rowCount","setRowCount","currentPage","setCurrentPage","counter","setCounter","showCancelModal","setShowCancelModal","cancelSubscriptionId","setCancelSubscriptionId","cancelSubscriptionBillingModelType","setCancelSubscriptionBillingModelType","isCancelBtnLoading","setIsCancelBtnLoading","className","MySubscriptions","onChange","e","st","target","map","index","monthPlaceholder","dayPlaceholder","yearPlaceholder","onClick","tableHeaders","title","colSpan","size","filter","data","begin","end","slice","currentData","row","isDynamicBM","name","BillingModelTypeTitles","style","cursor","billingModelId","search","handleClick","subscriber","BMTrialTypesLable","trialType","isDynamicRecurring","totalPayments","fromTokenDecimals","toString","settlementToken","decimals","symbol","paymentToken","isRecurringWithTrial","humanizeDuration","trialPeriod","largest","round","startTimestamp","executionTimestamp","lastPaymentTimestamp","nextPaymentTimestamp","color","fontSize","cancelledBy","includes","bmType","disabled","parseInt","Math","max","src","Arrow","alt","maxPage","ceil","min","isLoading","setIsLoading","Wrapper","theme","flexColumnNoWrap","MarginLeft","ModelContent","CloseIcon","CloseColor","Close","text4","UpperSection","HeaderRow","flexRowNoWrap","props","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","CancelSubscriptionModalContent","cancelSubscriptionModal","setCancelSubscriptionModal","dispatch","useDispatch","recurringPPContract","useRecurringPPContract","dynamicRecurringPPContract","useDynamicRecurringPPContract","freeTrialRecurringPPContract","useFreeTrialRecurringPPContract","paidTrialRecurringPPContract","usePaidTrialRecurringPPContract","cancelSubscriptionBoolean","setCancelSubscriptionBoolean","cancelSubscription","contract","estimateGas","estimatedGas","gasLimit","calculateGasMargin","then","response","hash","bmCancellation","subscriptionId","addTransaction","from","summary","wait","WAIT_BLOCK_CONFIRMATIONS","catch","error","console","debug","message","gap","borderColor","outlineColor","text2","toUpperCase","placeholder","href","CancelSubscriptionModal","useEffect","isOpen","onDismiss","minHeight","maxHeight"],"mappings":"8IAAA,sDAKO,SAASA,IAEb,IAAD,EACQC,EAAYC,cAAZD,QACFE,EAAQC,aACZ,SAACD,GAAD,OAAWA,EAAME,oBAEnB,OAAOJ,GAAO,UAAGE,EAAMF,UAAT,QAA0B,K,2OCgB7BK,EAAkB,SAC7BC,EACAC,EACAC,GACI,IAAD,IAKH,OAHEC,IAAiB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAcE,mBAChCC,IAAkBD,IAGlB,KAAKE,OAAOD,IAAkBE,QAC9B,KAAKD,OAAOD,IAAkBG,eAC5B,cAAON,QAAP,IAAOA,GAAP,UAAOA,EAAcO,aAAa,UAAlC,aAAO,EAA+BC,cAExC,KAAKJ,OAAOD,IAAkBM,WAC9B,KAAKL,OAAOD,IAAkBO,oBAC5B,OAAmB,OAAZV,QAAY,IAAZA,OAAA,EAAAA,EAAcW,SAAd,OAAuBX,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAcY,eAAeC,QAE7D,KAAKT,OAAOD,IAAkBW,oBAC5B,OAAmB,OAAZd,QAAY,IAAZA,GAAA,UAAAA,EAAcC,oBAAd,eAA4Bc,eAC/BC,OAAM,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAcC,aAAac,eAClCC,OAAM,OAACf,QAAD,IAACA,OAAD,EAACA,EAAcc,eACnBC,OAAM,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAcW,SAArB,OAA+BX,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAcY,eAAeC,QAEpE,KAAKT,OAAOD,IAAkBc,kBAC5B,OACED,OAAM,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAcW,QACnBK,OAAM,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAcY,eAAeC,SACrCG,OAAM,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAce,eAClBC,OAAM,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAce,eACrB,GAGR,QACE,OAAO,IAKPG,EAAcC,UAAOC,IAAV,mrHA6NXC,EAAeF,UAAOC,IAAV,g6BA6CZE,EAAcH,UAAOI,MAAV,koEAsHXC,EAAaL,UAAOM,EAAV,+RA8wBDC,IA/uBY,SAAC,GAKI,IAAD,EAJ7BC,EAI6B,EAJ7BA,KACAC,EAG6B,EAH7BA,kBACA3B,EAE6B,EAF7BA,aACAC,EAC6B,EAD7BA,iBAEQ2B,EAAYlC,cAAZkC,QACAC,EAAaC,cAAbD,SACFE,EAAUC,cAGVC,EAAkBzC,cAExB,EAA4B0C,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAYtB,OAAOuB,MAASC,QAElC,EAA0BL,mBAAS,MAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAAkCP,mBAAS,MAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAAwBT,mBAAS,MAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAA0BX,mBAAS,MAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAA4Cb,mBAAS,MAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KACA,GAAkCf,mBAAS,MAA3C,qBAAOgB,GAAP,MAAkBC,GAAlB,MACA,GAA8BjB,mBAAS,MAAvC,qBAAOkB,GAAP,MAAgBC,GAAhB,MAEA,GAA0CnB,mBAAS,CACjD,CAAEoB,GAAI,EAAGC,MAAO,eAChB,CAAED,GAAI,EAAGC,MAAO,UAChB,CAAED,GAAI,EAAGC,MAAO,aAChB,CAAED,GAAI,EAAGC,MAAO,eAJlB,qBAAOC,GAAP,MAmCIC,IAnCJ,MAgBuB,WASrB,IARA,IAAIC,GAAI,IAAIC,MAAOC,cACfC,GAAI,IAAIF,MAAOG,WAAa,EAG5BC,EADczB,IAAOoB,EAAI,IAAMG,EAAG,WACVE,cACtBC,EAAU,GACZC,GAAO,IAAIN,MAAOO,UAEfH,GAAa,CAClB,IAAMI,EAAU7B,MAAS2B,KAAKF,GAC1BA,GAAeE,GACjBD,EAAQI,KAAKD,EAAQE,OAAO,eAE9BN,IAEF,OAAOC,EAGMM,IAETC,GAAc,SAACC,GAAuB,IACtCP,EADoBQ,EAAiB,uDAAT,KAGhChC,EAAS,MACTI,EAAQ,MACRE,EAAS,MACTJ,EAAa,MACbP,EAAU,MAEE,UAARoC,IACFP,EAAO3B,MAASC,OAChBE,EAAS1B,OAAOkD,KAEN,cAARO,IACFP,EAAO3B,MAASoC,SAAS,EAAG,QAAQnC,OACpCI,EAAa5B,OAAOkD,KAEV,SAARO,IACFP,EAAO3B,MAASoC,SAAS,EAAG,QAAQnC,OACpCM,EAAQ9B,OAAOkD,KAEL,UAARO,IACFP,EAAO3B,MACJoC,SAASjB,GAAS7C,OAAS,EAAG,SAC9B2B,OACHQ,EAAShC,OAAOkD,KAEN,cAARO,IACFrB,GAAapC,OAAOuB,IAAM,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAQ,IAAIlC,SACvCc,GAAWtC,OAAOuB,IAAM,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAQ,IAAIlC,SACrCU,EAAkBwB,KAIhBE,GAAgB,SAACC,GACrB,IAAMC,EAAkBC,YACtBpD,IAASqD,IAAuBC,YAC5B9E,IAAkBD,GAClBC,IAAkB0E,EAAK,mBAEzB7D,OAAO6D,EAAK,gBACZ7D,OAAO6D,EAAK,aAAiB,GAAtB,oBACX,IAAIzC,EAeG,OAAIK,EAEP,IAAImB,KAAuB,IAAlBkB,GAAwBX,YACjC,IAAIP,KAAa,IAARnB,GAAc0B,UAEhBxB,EAEP,IAAIiB,KAAuB,IAAlBkB,GAAwBX,YACjC,IAAIP,KAAiB,IAAZjB,GAAkBwB,UAEpBtB,EACFiC,GAAmBjC,GAAQiC,GAAmBxC,EAC5CS,EACF+B,GAAmB/B,GAAS+B,GAAmBxC,EAC7CW,EACF6B,GAAmB3B,IAAa2B,GAAmBzB,GAEnDwB,EA/BP,OAAQzC,GACN,IAAK,SACH,OACqC,MAAlChC,OAAOyE,EAAMK,kBACc,OAA1BL,EAAMK,kBACRlE,OAAO6D,EAAMM,kBAAoB,EAErC,IAAK,YACH,OAAOnE,OAAO6D,EAAMK,iBAAmB,EACzC,IAAK,YACH,OAA0C,IAAnClE,OAAO6D,EAAMM,kBACtB,QACE,OAAON,IAmETO,IAVFlF,IAAqBC,IAAkBE,SAEnCH,IAAqBC,IAAkBG,eAElBH,IAAkBc,kBAMjB,CAC5B,iBACA,OACA,OACA,kBACA,QACA,oBACA,eACA,eACA,SACA,eACA,WAGIoE,GAAqB,CACzB,iBACA,SACA,kBACA,eACA,gBACA,eACA,eACA,SACA,gBAGIC,GAAqB,CACzB,iBACA,SACA,kBACA,eACA,iBACA,gBACA,eACA,eACA,SACA,gBAGIC,GAA4B,CAChC,iBACA,OACA,SACA,aACA,gBACA,eACA,eACA,SACA,gBAEIC,GAAqB,CACzB,iBACA,SACA,kBACA,gBACA,eACA,eACA,SACA,gBAEIC,GAAyB,CAC7B,iBACA,OACA,SACA,eACA,gBAEIC,GAAkB,CACtB,iBACA,SACA,eACA,gBA+BF,GAAgCvD,mBAAiB,IAAjD,qBAAOwD,GAAP,MAAiBC,GAAjB,MACA,GAAsCzD,mBAAS,GAA/C,qBAAO0D,GAAP,MAAoBC,GAApB,MACA,GAA8B3D,mBAAiB,GAA/C,qBAAO4D,GAAP,MAAgBC,GAAhB,MAuBA,GAA8C7D,oBAAS,GAAvD,qBAAO8D,GAAP,MAAwBC,GAAxB,MACA,GAAwD/D,mBAAS,MAAjE,qBAAOgE,GAAP,MAA6BC,GAA7B,MACA,GAGIjE,mBAAS,MAHb,qBACEkE,GADF,MAEEC,GAFF,MAWA,GAAoDnE,oBAAS,GAA7D,qBAAOoE,GAAP,MAA2BC,GAA3B,MAEA,OACE,eAACtF,EAAD,WACE,eAACG,EAAD,CAAcoF,UAAU,YAAxB,UACE,6BACG9E,IAASqD,IAAuB0B,gBAC7B,mBACA,cAGN,sBAAKD,UAAU,cAAf,UACG9E,IAASqD,IAAuB0B,iBAC9B3B,YAAiB5E,IAAkBD,KAClC,wBAAQyG,SAlTK,SAACC,GACxB,IAAIC,EAAKD,EAAEE,OAAOtD,MAClBnB,EAAUwE,GACV/D,EAAQ,MACRE,EAAS,MACTJ,EAAa,MACbF,EAAS,OA4SC,gBACGe,SADH,IACGA,QADH,EACGA,GAAesD,KAAI,SAACvD,EAAOwD,GAC1B,OACE,wBAAoBxD,MAAOA,EAAMA,MAAjC,SACGA,EAAMA,OADIwD,QAQvB,cAAC,IAAD,CACEC,iBAAiB,KACjBC,eAAe,KACfC,gBAAgB,OAChBR,SAAU,SAACC,GAAD,OAAOpC,GAAY,YAAaoC,IAC1CpD,MAAOP,IAGT,wBACEwD,UAAU,gBACVW,QAAS,kBAAM5C,GAAY,UAF7B,mBAOA,wBACEiC,UAAU,gBACVW,QAAS,kBAAM5C,GAAY,cAF7B,uBAOA,wBAAQiC,UAAU,gBAAgBW,QAAS,kBAAM5C,GAAY,SAA7D,kBAIA,wBACEiC,UAAU,gBACVW,QAAS,kBAAM5C,GAAY,UAF7B,yBAgBJ,eAAClD,EAAD,WACE,gCACE,6BAxIa,WACnB,OAAQpB,GACN,KAAKE,OAAOD,IAAkBE,QAC5B,OAAOqF,GACT,KAAKtF,OAAOD,IAAkBG,eAC5B,OAAOmF,GACT,KAAKrF,OAAOD,IAAkBc,kBAC5B,OAAOsE,GACT,KAAKnF,OAAOD,IAAkBM,WAC5B,OAAO+E,GACT,KAAKpF,OAAOD,IAAkBW,oBAC5B,OAAOwE,GACT,KAAKlF,OAAOD,IAAkBO,oBAC5B,OAAO2E,GACT,QACE,OAAOD,IA0HFiC,GAAeN,KAAI,SAACO,EAAON,GAAR,OAClB,6BAAiBM,GAARN,UAIf,gCACyB,OAAtBpF,EACC,6BACE,oBAAI2F,QAAS,GAAb,SACE,8BACE,cAAC,IAAD,CAAQd,UAAU,cAAce,KAAM,gBAIzB,OAAjB5F,QAAiB,IAAjBA,GAAA,UAAAA,EAAmB6F,OAAO7C,WAA1B,eAA0C/D,QAAS,EAtH3C,SAAC6G,GACnB,IAAMC,GAAS9B,GAAc,GAAKF,GAC5BiC,EAAMD,EAAQhC,GACpB,cAAO+B,QAAP,IAAOA,OAAP,EAAOA,EAAMG,MAAMF,EAAOC,GAoHlBE,CAAW,OAAClG,QAAD,IAACA,OAAD,EAACA,EAAmB6F,OAAO7C,KAAgBmC,KACpD,SAACgB,EAAKf,GAAN,yCACE,+BACE,0CAAMe,QAAN,IAAMA,OAAN,EAAMA,EAAG,oBAEPpG,IAASqD,IAAuB0B,iBAChCsB,YAAY7H,IAAkBD,MAC9B,6BACG8H,YAAY7H,IAAkB4H,EAAI7H,sBACnC,OAAC6H,QAAD,IAACA,OAAD,EAACA,EAAKE,MACF,WACG,OAAHF,QAAG,IAAHA,GAAA,UAAAA,EAAK9H,oBAAL,eAAmBgI,MAAnB,OACAF,QADA,IACAA,GADA,UACAA,EAAK9H,oBADL,aACA,EAAmBgI,KADnB,OAEAF,QAFA,IAEAA,OAFA,EAEAA,EAAKE,OAIZtG,IAASqD,IAAuB0B,iBAC/B,6BAEIwB,IACE/H,IAAiB,OAAC4H,QAAD,IAACA,OAAD,EAACA,EAAK7H,qBAM9ByB,IAASqD,IAAuBC,aAC/B,oBACEkD,MAAO,CAAEC,OAAQ,WACjBhB,QAAS,kBAlKT,SAAC,GAA4B,IAA1B7D,EAAyB,EAAzBA,GAAI8E,EAAqB,EAArBA,eACrB1G,IAASqD,IAAuBC,aAClCjD,EAAQqC,KAAK,CACXvC,SAAS,gCACTwG,OAAO,uBAAD,OAAyBpI,EAAzB,6BAA8DmI,EAA9D,4BAAgG9E,KA+JtFgF,CAAY,CACVhF,GAAE,OAAEwE,QAAF,IAAEA,OAAF,EAAEA,EAAG,GACPM,eAC8B,QAAzB,OAAHN,QAAG,IAAHA,OAAA,EAAAA,EAAG,gBAAH,OACIA,QADJ,IACIA,OADJ,EACIA,EAAG,eADP,OAEI9H,QAFJ,IAEIA,OAFJ,EAEIA,EAAcsD,MAR1B,SAYE,cAAC/B,EAAD,CAAYiF,UAAU,SAAtB,gBACGsB,QADH,IACGA,OADH,EACGA,EAAKS,eAKXpI,OAAOD,IAAkBc,mBAC1Bd,IAAkBD,GAChB,6BAAKuI,IAAiB,OAACxI,QAAD,IAACA,OAAD,EAACA,EAAcyI,aACnC3D,YAAiB5E,IAAkBD,KACrC6E,YACE5E,IAAkB4H,EAAI7H,mBAExB,+BACG6H,EAAInH,eAAeC,OADtB,IAEI8H,YACAxI,IAAkBD,KACfyB,IAASqD,IAAuBC,YAFpC,OAIG8C,QAJH,IAIGA,GAJH,UAIGA,EAAK9H,oBAJR,aAIG,EAAmBkF,iBAJtB,OAGGlF,QAHH,IAGGA,OAHH,EAGGA,EAAckF,iBAEjBwD,YACCxI,IAAkBD,KACfyB,IAASqD,IAAuBC,YAFpC,OAGGhF,QAHH,IAGGA,OAHH,EAGGA,EAAc2I,cAHjB,OAIGb,QAJH,IAIGA,OAJH,EAIGA,EAAKa,iBAGXjH,IAASqD,IAAuB0B,iBAC9B,qCAIH/E,IAASqD,IAAuB0B,kBAC9BsB,YAAY7H,IAAkB4H,EAAI7H,mBACjC,+CAEA,+BACG2I,aACI,OAAHd,QAAG,IAAHA,OAAA,EAAAA,EAAKpH,QAAL,OACIoH,QADJ,IACIA,OADJ,EACIA,EAAKpH,OAAOmI,WADhB,OAEI7I,QAFJ,IAEIA,OAFJ,EAEIA,EAAcU,OAAOmI,WAHT,OAIhB5G,QAJgB,IAIhBA,GAJgB,UAIhBA,EACE6F,EAAIgB,wBALU,aAIhB,EAEGC,SAASF,YACZA,WARJ,cAUG5G,QAVH,IAUGA,GAVH,UAUGA,EAAkB6F,EAAIgB,wBAVzB,aAUG,EAAwCE,OACzC,2CACY,IADZ,OAEG/G,QAFH,IAEGA,GAFH,UAEGA,EAAkB6F,EAAImB,qBAFzB,aAEG,EAAqCD,cAK7CtH,IAASqD,IAAuBC,cAC9BkE,YACChJ,IAAkBD,KAElBiJ,YACEhJ,IAAkB4H,EAAI7H,qBAExB,6BACGkJ,IACqC,IAApCpI,OAAM,OAACf,QAAD,IAACA,OAAD,EAACA,EAAcoJ,aACrB,CACEC,QAAS,EACTC,OAAO,MAMhB5H,IAASqD,IAAuBC,cAC9B9E,IAAkBF,EAAaC,oBAC9BC,IAAkBW,oBAClBX,IAAkBD,KAChBC,IAAkBW,qBACpB,+BACG+H,YAAiB,OAChB5I,QADgB,IAChBA,OADgB,EAChBA,EAAcc,cAAc+H,WADZ,OAEhB5G,QAFgB,IAEhBA,GAFgB,UAEhBA,EACE6F,EAAIgB,wBAHU,aAEhB,EAEGC,SAASF,YACZA,WANJ,cAQG5G,QARH,IAQGA,GARH,UAQGA,EAAkB6F,EAAIgB,wBARzB,aAQG,EAAwCE,UAI9ClE,YAAiB5E,IAAkBD,KACpC6E,YAAiB5E,IAAkB4H,EAAI7H,mBACrC,+BACG,IACAqC,IAAqC,IAA9BvB,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAKyB,iBAAwBlF,OAAO,UAGrD,+BACG,IACA/B,IAEG,IADFvB,OAAM,OAAC+G,QAAD,IAACA,GAAD,UAACA,EAAKxH,oBAAN,iBAAC,EAAoB,UAArB,aAAC,EAAwBkJ,qBAE/BnF,OAAO,UAGZS,YACC5E,IACED,IAAgB,OAEZ6H,QAFY,IAEZA,OAFY,EAEZA,EAAK7H,oBAGVC,IACCD,IAAgB,OAEZ6H,QAFY,IAEZA,OAFY,EAEZA,EAAK7H,qBACLC,IAAkBO,oBACtBP,IACED,IAAgB,OAEZ6H,QAFY,IAEZA,OAFY,EAEZA,EAAK7H,qBACLC,IAAkBO,oBACxBP,IACED,IAAgB,OAEZ6H,QAFY,IAEZA,OAFY,EAEZA,EAAK7H,qBACLC,IAAkBc,kBACY,IAAtCD,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAK2B,sBAGV,+BACG,IACAnH,IACqC,IAApCvB,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAK2B,uBACZpF,OAAO,UANX,wDAUF3C,IAASqD,IAAuB0B,iBAC9B,+BACG,IACAnE,IAEG,IADFvB,OAAM,OAAC+G,QAAD,IAACA,GAAD,UAACA,EAAKxH,oBAAN,iBAAC,EAAoB,UAArB,aAAC,EAAwBkJ,qBAE/BnF,OAAO,UAKdS,YAAiB5E,IAAkBD,KACpC6E,YAAiB5E,IAAkB4H,EAAI7H,mBACrC,+BACG,IACAqC,IAA2C,IAApCvB,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAK4B,uBAA8BrF,OAChD,UAIJ3C,IAASqD,IAAuB0B,iBAC9B,mDAIH3B,YAAiB5E,IAAkBD,KACpC6E,YAAiB5E,IAAkB4H,EAAI7H,mBACrC,mCACGc,QACI,OAAH+G,QAAG,IAAHA,OAAA,EAAAA,EAAK5C,kBAAL,OACI4C,QADJ,IACIA,OADJ,EACIA,EAAK5C,iBADT,OAEI4C,QAFJ,IAEIA,OAFJ,EAEIA,EAAKa,eACP,MACA,OAAHb,QAAG,IAAHA,OAAA,EAAAA,EAAKa,iBACC,OAAHb,QAAG,IAAHA,OAAA,EAAAA,EAAKa,gBAAL,OAAqBb,QAArB,IAAqBA,OAArB,EAAqBA,EAAKnH,eAAeC,SAE3C,mCACGG,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAK7C,iBAAmB,EAC9B,+BACG,IADH,YAGE,uBACA,uBACEiD,MAAO,CAAEyB,MAAO,OAAQC,SAAU,UADpC,eAGK,IACD9B,EAAI+B,cAAgBjI,GACpBC,EAASiI,SAAS,aACnBhC,EAAI+B,cAAgBjI,GACnBC,EAASiI,SAAS,YAChB,WACA,cACE,OAGV,4CAIJ,+CAIJ,mCACGpI,IAASqD,IAAuB0B,iBAC/B,+CAMJ,+BACG3G,EAAgBgI,EAAK9H,EAAcC,GAAnC,SACC,GACEc,OAAM,OACJkB,QADI,IACJA,GADI,UACJA,EAAkB6F,EAAIgB,wBADlB,aACJ,EAAwCC,WAJhD,cAOG9G,QAPH,IAOGA,GAPH,UAOGA,EAAkB6F,EAAIgB,wBAPzB,aAOG,EAAwCE,OACxCtH,IAASqD,IAAuB0B,iBAC/B,2CACY,IADZ,OAEGxE,QAFH,IAEGA,GAFH,UAEGA,EAAkB6F,EAAImB,qBAFzB,aAEG,EAAqCD,aAM7CtH,IAASqD,IAAuB0B,iBAC/B,6BACE,cAAC,IAAD,CACED,UAAU,aACVW,QAAS,WAxWG,IAAC7D,EAAYyG,EAAZzG,EAyWc,OACvBwE,QADuB,IACvBA,OADuB,EACvBA,EAAG,GA1WkBiC,EA2WrB7J,IAAiB,OAAC4H,QAAD,IAACA,OAAD,EAACA,EAAG,kBA1W7C3B,GAAwB7C,GACxB+C,GAAsC0D,GACtC9D,IAAmB,IA2WC+D,SAKQ,IAJNjJ,QACK,OAAH+G,QAAG,IAAHA,OAAA,EAAAA,EAAK5C,kBAAL,OACI4C,QADJ,IACIA,OADJ,EACIA,EAAK5C,iBADT,OAEI4C,QAFJ,IAEIA,OAFJ,EAEIA,EAAKa,gBAEX5H,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAK7C,iBAAmB,MAC3B,OAAH6C,QAAG,IAAHA,OAAA,EAAAA,EAAKa,gBACF5H,OAAM,OAAC+G,QAAD,IAACA,OAAD,EAACA,EAAKa,kBAAZ,OACAb,QADA,IACAA,OADA,EACAA,EAAKnH,eAAeC,QAjB5B,wBAzQGmG,MAoSb,6BACE,oBAAIO,QAAS,GAAb,SACE,qBAAKd,UAAU,kBAAf,SACE,+DAQZ,sBAAKA,UAAU,aAAf,UACE,yCAEE,yBACEE,SAAU,SAACC,GACThB,GAAYsE,SAAStD,EAAEE,OAAOtD,QAC9BsC,GAAe,IAHnB,UAME,wBAAQtC,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,MAAd,sBATF,UAYF,sBAAKiD,UAAU,aAAf,UACE,mBAAGW,QA1aE,WACI,GAAXrB,IACFC,GAAWD,GAAUJ,IAEvBG,IAAe,SAACD,GAAD,OAAiBsE,KAAKC,IAAIvE,EAAc,EAAG,OAsapD,SACE,qBAAKwE,IAAKC,UAAO/G,GAAG,gBAAgBgH,IAAI,aAE1C,mBAAGnD,QArbE,WACX,IAAMoD,EAAUL,KAAKM,OAAuB,OAAjB7I,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBf,SAAU,GAAK8E,IACzDI,GAAUJ,IAAV,OAAqB/D,QAArB,IAAqBA,OAArB,EAAqBA,EAAmBf,SAC1CmF,GAAWD,GAAUJ,IAEvBG,IAAe,SAACD,GAAD,OAAiBsE,KAAKO,IAAI7E,EAAc,EAAG2E,OAgbpD,SACE,qBAAKH,IAAKC,UAAOC,IAAI,mBAK3B,cAAC,IAAD,CACEpE,qBAAsBA,GACtBjG,iBAAkBmG,GAClBJ,gBAAiBA,GACjBC,mBAAoBA,GACpByE,UAAWpE,GACXqE,aAAcpE,U,gNCjrChBqE,EAAU1J,UAAOC,IAAV,gFACT,qBAAG0J,MAAkBC,oBAMnBC,EAAa7J,UAAOC,IAAV,6OAkBV6J,EAAe9J,UAAOC,IAAV,yrFAoJZ8J,EAAY/J,UAAOC,IAAV,8IAUT+J,EAAahK,kBAAOiK,IAAPjK,CAAH,6DAEF,qBAAG2J,MAAkBO,SAG7BC,EAAenK,UAAOC,IAAV,qPAkBZmK,EAAYpK,UAAOC,IAAV,uGACX,qBAAG0J,MAAkBU,iBAGd,SAACC,GAAD,MACS,SAAhBA,EAAM7B,MAAmB,qBAAGkB,MAAkBY,UAAW,aACzD,qBAAGZ,MAAkBa,WAAWC,WAA/B,IAAD,iDAIEC,EAAiB1K,UAAOC,IAAV,2oCACE,qBAAG0J,MAAkBgB,OAgDvC,qBAAGhB,MAAkBa,WAAWC,WAA/B,IAAD,sCAGEG,EAAiC,SAAC,GAOjC,IANL5F,EAMI,EANJA,qBACAjG,EAKI,EALJA,iBACA8L,EAII,EAJJA,wBACAC,EAGI,EAHJA,2BACAtB,EAEI,EAFJA,UACAC,EACI,EADJA,aAEA,EAA6BjL,cAArBkC,EAAR,EAAQA,QAASnC,EAAjB,EAAiBA,QACXwM,EAAWC,cAEXC,EAAsBC,cACtBC,EAA6BC,cAC7BC,EAA+BC,cAC/BC,EAA+BC,cAErC,EACExK,oBAAS,GADX,mBAAOyK,EAAP,KAAkCC,EAAlC,KASMC,EAAkB,uCAAG,8BAAArL,EAAA,yDACpB/B,GAAYmC,EADQ,+DAIf3B,EAJe,cAKhBE,OAAOD,IAAkBc,kBALT,SAQhBb,OAAOD,IAAkBM,WART,SAWhBL,OAAOD,IAAkBW,oBAXT,UAchBV,OAAOD,IAAkBO,oBAdT,WAiBhBN,OAAOD,IAAkBG,iBAjBT,KAkBhBF,OAAOD,IAAkBE,SAlBT,wBAMnB0M,EAAWT,EANQ,mCASnBS,EAAWX,EATQ,oCAYnBW,EAAWL,EAZQ,oCAenBK,EAAWP,EAfQ,gFAwBfO,EAASC,YAAYF,mBAAmB3G,GAxBzB,eAuBjB8G,EAvBiB,OAyBvBrC,GAAa,GAzBU,UA0BVmC,EACVD,mBAAmB3G,EAAsB,CACxC+G,SAAUC,YAAmBF,KAE9BG,KAJU,uCAIL,WAAOC,GAAP,iBAAA5L,EAAA,4DACY,oCACV6L,EAAOD,EAASC,KAChBC,EAAiB,CACrBC,eAAgBrH,GAElB+F,EACEuB,YAAe,CACbH,OACAI,KAAM7L,EACNnC,UACA6N,iBACAI,QAXY,uCADZ,SAeEN,EAASO,KAAKC,KAfhB,OAgBJjD,GAAa,GACbqB,GAA2B,GAjBvB,2CAJK,uDAuBV6B,OAAM,SAACC,GAKN,MAJAnD,GAAa,GACboD,QAAQC,MAAR,iDAC4CF,EAAMG,UAE5CH,KAtDa,2EAyDvBnD,GAAa,GACboD,QAAQD,MAAR,iDAAwD,KAAMG,UA1DvC,0DAAH,qDA8DxB,OACE,cAACrD,EAAD,UACE,cAACI,EAAD,CAAcxE,UAAU,cAAxB,SACE,eAAC6E,EAAD,WACE,cAACJ,EAAD,CACE9D,QAAS,kBAAM6E,GAA4BD,IAD7C,SAGE,cAACb,EAAD,MAEF,cAACI,EAAD,UACE,cAACP,EAAD,UACE,eAAC,IAAD,CAAYmD,IAAI,KAAK1H,UAAU,gBAA/B,UACE,cAAC,IAAD,CAAUa,MAAO,sBAAuB/D,GAAG,cAC3C,mBAAGA,GAAG,OAAN,2IAIA,mBAAGA,GAAG,OAAN,uEAMN,cAACsI,EAAD,UACE,sBAAKpF,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,+CACgB,sBAAMA,UAAU,QAAhB,qBADhB,gCAIA,uBACE9E,KAAK,OACLwG,MAAO,CACLiG,YAAaxB,EAA4B,QAAU,MACnDyB,aAAczB,EAA4B,QAAU,OAEtDjG,SAxGsB,SAACC,GACrC,IACI0H,EAAQ1H,EAAEE,OAAOtD,MACrBqJ,EAFW,WAE2ByB,EAAMC,gBAsG9BC,YAAY,qBAEd,+EAC8C,IAC5C,mBAAGC,KAAK,IAAR,wBAGJ,qBAAKhI,UAAU,aAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CACElD,GAAG,uBACH6D,QAAS,kBACP6E,GAA4BD,IAHhC,SAMG,WAEH,cAAC,IAAD,CACEzI,GAAG,mBACHkD,UAAWkE,EAAY,WAAa,GACpCV,SAAUU,EACVvD,QAAS,kBACPwF,EAA4BE,IAAuB,MALvD,SAQGnC,EAAY,cAAC,IAAD,IAAH,yBA0Df+D,IA9CiB,SAAC,GAO1B,IANLvI,EAMI,EANJA,qBACAjG,EAKI,EALJA,iBACA+F,EAII,EAJJA,gBACAC,EAGI,EAHJA,mBACAyE,EAEI,EAFJA,UACAC,EACI,EADJA,aAEA,EACEzI,mBAAS8D,GADX,mBAAO+F,EAAP,KAAgCC,EAAhC,KAGA0C,qBAAU,WACR1C,EAA2BhG,KAC1B,CAACA,IAEJ0I,qBAAU,WACRzI,EAAmB8F,KAClB,CAACA,IAQJ,OACE,cAAC,IAAD,CACE4C,OAAQ5C,EACR6C,UAAW,WARRlE,GACHsB,GAA4BD,IAQ5B8C,WAAW,EACXC,UAAW,GAJb,SAMG/C,GACC,cAACD,EAAD,CACE5F,qBAAsBA,EACtBjG,iBAAkBA,EAClB8L,wBAAyBA,EACzBC,2BAA4BA,EAC5BtB,UAAWA,EACXC,aAAcA","file":"static/js/3.b6d32c2c.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { AppState } from \"../index\";\nimport { SupportedTokenDetails } from \"./reducer\";\n\nexport function useSupportedTokens(): {\n  [tokenAddress: string]: SupportedTokenDetails;\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"supported_tokens\"]>(\n    (state) => state.supported_tokens\n  );\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\nimport {\n  BillingModelTypes,\n  BillingModelTypeTitles,\n  isAnyRecurringBM,\n  isDynamicBM,\n  isRecurringWithTrial,\n  SubscriptionTableTypes,\n  BMTrialTypesLable,\n  isDynamicRecurring,\n  fromTokenDecimals,\n} from \"../../utils\";\nimport Loader from \"../Loader\";\nimport styled from \"styled-components\";\nimport {\n  SerializedBillingModel,\n  SerializedSubscriptionDetails,\n} from \"../../utils/blockchain-serializers\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Arrow from \"../../assets/images/Vector.png\";\nimport { useSupportedTokens } from \"../../state/supported-tokens/hooks\";\nimport { ButtonPrimary } from \"../Button\";\nimport CancelSubscriptionModal from \"../CancelSubscriptionModal\";\nimport humanizeDuration from \"humanize-duration\";\nimport { useActiveWeb3React } from \"../../hooks\";\n\nexport const totalAmountPaid = (\n  subscription,\n  billingModel,\n  billingModelType?\n) => {\n  const bmType =\n    BillingModelTypes[subscription?.billingModelType] ||\n    BillingModelTypes[billingModelType];\n\n  switch (bmType) {\n    case String(BillingModelTypes.Single):\n    case String(BillingModelTypes.SingleDynamic):\n      return subscription?.pullPayments[0]?.paymentAmount;\n\n    case String(BillingModelTypes.Recurring):\n    case String(BillingModelTypes.RecurringFreeTrial):\n      return subscription?.amount * subscription?.pullPaymentIDs.length;\n\n    case String(BillingModelTypes.RecurringPaidTrial):\n      return subscription?.billingModel?.initialAmount\n        ? Number(subscription?.billingModel.initialAmount)\n        : Number(billingModel?.initialAmount) +\n            Number(subscription?.amount) * subscription?.pullPaymentIDs.length;\n\n    case String(BillingModelTypes.RecurringDynamic):\n      return (\n        Number(subscription?.amount) *\n          Number(subscription?.pullPaymentIDs.length) +\n        (Number(subscription?.initialAmount)\n          ? Number(subscription?.initialAmount)\n          : 0)\n      );\n\n    default: {\n      return 0;\n    }\n  }\n};\n\nconst MainContent = styled.div`\n  .tap-main {\n    display: flex;\n    flex-direction: row-reverse;\n  }\n\n  color: #000;\n\n  .top-head {\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: end;\n    width: 50%;\n  }\n\n  .top-head .icon-wrap {\n    margin-top: 20px;\n    margin-right: 15px;\n    display: flex;\n    align-items: flex-start;\n    width: 50%;\n    justify-content: end;\n    cursor: pointer;\n  }\n\n  .top-head .icon-wrap img {\n    margin-left: 5px;\n  }\n\n  .heading {\n    h3 {\n      font-weight: 400;\n      margin-bottom: 5px;\n    }\n\n    p {\n      font-size: 14px;\n      color: #756f82;\n      margin-top: 0;\n    }\n  }\n\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n  }\n\n  .table-top {\n    margin-top: 30px;\n    margin-bottom: 1rem;\n    justify-content: space-between;\n  }\n\n  .subscription-wrapper {\n    .btn-wrap .align-btn {\n      display: flex;\n      align-items: center;\n\n      button.btn-theme-outlined {\n        background: #fff;\n        border: 1px solid #b2acbf;\n        padding: 9px 25px;\n        border-radius: 6px;\n        font-size: 12px;\n        min-width: 97px;\n      }\n    }\n\n    .btn-wrap {\n      margin-top: 20px;\n\n      .align-btn button {\n        margin-right: 5px;\n      }\n    }\n\n    h3,\n    h4,\n    h5 {\n      font-weight: 500;\n    }\n\n    .bg-back {\n      background: #f8f5ff;\n      padding: 10px 20px;\n    }\n\n    .bg-back .details-wrapper {\n      display: flex;\n    }\n\n    .bg-back .details-wrapper .items {\n      width: 160px;\n    }\n\n    .bg-back .details-wrapper .items p {\n      margin-bottom: 0;\n      font-size: 12px;\n      color: #444;\n    }\n\n    .bg-back .details-wrapper .items h5,\n    .bg-back .details-wrapper .items h3 {\n      margin-top: 5px;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px;\n    margin-bottom: 40px;\n\n    span {\n      line-height: 2rem;\n      margin-right: 1rem;\n    }\n\n    select {\n      border: none;\n    }\n\n    .navigation {\n      display: flex;\n\n      p {\n        background: #ededed;\n        border-radius: 5px;\n        padding: 8px 14px;\n        margin: 0 5px;\n        cursor: pointer;\n\n        #navigationOne {\n          transform: rotate(180deg);\n        }\n      }\n    }\n  }\n\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  .top-wrap {\n    margin-top: 60px;\n    display: flex;\n    justify-content: space-between;\n    width: 50%;\n\n    .total-earning {\n      width: 300px;\n      border: 0;\n    }\n  }\n\n  .select-drop {\n    display: flex;\n\n    select {\n      padding: 10px;\n      border-radius: 20px;\n      border: 1px solid #d9d9d9;\n      margin: 0 20px;\n      font-size: 13px;\n    }\n\n    button.table-top-btn {\n      &:hover {\n        background: #ddd;\n      }\n\n      &:active {\n        background: #ddd;\n      }\n\n      padding: 10px 19px;\n      border-radius: 20px;\n      border: 1px solid #d9d9d9;\n      margin: 0 10px;\n      font-size: 13px;\n      background: transparent;\n    }\n  }\n\n  @media screen and (max-width: 1366px) {\n    .select-drop button.table-top-btn {\n      padding: 7px 19px;\n      font-size: 11px;\n    }\n\n    .new-billing-model {\n      font-size: 11px;\n      display: flex;\n      white-space: nowrap;\n      align-items: center;\n    }\n\n    .table-top .select-drop select {\n      font-size: 11px;\n      padding: 7px;\n    }\n\n    .new-billing-model a {\n      width: 22px;\n      height: 22px;\n      font-size: 22px;\n      line-height: 21px;\n    }\n\n    h3 {\n      font-size: 14px;\n    }\n\n    .export {\n      font-size: 11px;\n      display: flex;\n      align-items: center;\n    }\n  }\n`;\n\nconst TableTopWrap = styled.div`\n  display: flex;\n  align-items: center;\n  h3 {\n    font-weight: 400;\n    width: 30%;\n  }\n  .new-billing-model {\n    font-size: 14px;\n    button {\n      padding: 0px;\n      border-radius: 50%;\n      width: 35px;\n      height: 35px;\n      border: 0;\n      background: #7023ff;\n      color: #fff;\n      font-size: 26px;\n      line-height: 35px;\n      margin-left: 10px;\n      cursor: pointer;\n      :hover {\n        background: #9e70f5;\n      }\n    }\n  }\n\n  .react-daterange-picker > .react-daterange-picker__wrapper {\n    border-radius: 20px;\n    border: 1px solid #d9d9d9;\n    box-shadow: inset 0 2px 2px #e9e9e9;\n    font-size: 13px;\n    padding: 6px 10px 5px;\n  }\n  .csv-link {\n    padding: 10px 15px;\n    border-radius: 20px;\n    border: 1px solid #d9d9d9;\n    margin: 0 20px 0 15px;\n    text-decoration: none;\n    font-size: 13px;\n    color: inherit;\n  }\n`;\n\nconst StyledTable = styled.table`\n  .empty-table-row {\n    text-align: center;\n    font-size: 1rem;\n    line-height: 2rem;\n  }\n  button.action-btn:disabled {\n    background-color: #edeef2;\n    color: #888d9b;\n  }\n  margin-bottom: 100px;\n  border-collapse: collapse;\n  border-spacing: none;\n  width: 100%;\n  border: 1px solid #ddd;\n  caption-side: bottom;\n  empty-cell: show | hide;\n  empty-cell is a property of table or the cells themselves\n \nvertical-align: baseline | sub | super | text-top |\n                text-bottom | middle | top | bottom |\n                <percentage> | <length>\n \n   tbody {\n    vertical-align: top;\n  }\n  td,\n  th {\n    border: 1px solid #ccc;\n  }\n  thead tr th:nth-child(3) {\n    width: 10%;\n  }\n\n  th:nth-child(2) {\n    width: 20%;\n  }\n\n  thead tr th:nth-child(7) {\n    width: 10%;\n  }\n  // td:nth-child(3){\n  //   color:#7023FF;\n  // }\n  td {\n    padding: 10px 10px;\n    font-size: 12px;\n    border: 1px solid #eae8ee;\n    color: #756f82;\n    :first-child {\n      border-left: none;\n    }\n    :last-child {\n      border-right: none;\n    }\n  }\n  th {\n    padding: 10px 10px;\n    font-size: 12px;\n    border: 1px solid #eae8ee;\n    text-align: left;\n    font-weight: normal;\n    :first-child {\n      border-left: none;\n    }\n    :last-child {\n      border-right: none;\n    }\n  }\n  tbody {\n    position: relative;\n  }\n\n  tbody tr {\n    background-color: #fff;\n    :hover {\n      background-color: #f7f6f9;\n    }\n  }\n  thead > tr {\n    background-color: #f7f6f9;\n  }\n  tbody > span {\n    position: absolute;\n    left: 48%;\n    top: 22px;\n  }\n  small {\n    padding: 7px;\n    border-radius: 7px;\n  }\n  small.SUCCESS {\n    color: #00996d;\n    background: #e5fff8;\n  }\n  small.PENDING {\n    color: #b28824;\n    background: #fff7e5;\n  }\n  small.REJECTED {\n    color: #ff647c;\n    background: #ffe5e9;\n  }\n  .loader-main {\n    position: relative;\n    margin: 1rem auto;\n    left: 50%;\n  }\n  .action-btn {\n    width: 120px;\n    height: 40px;\n    font-size: 14px;\n    border-radius: 10px;\n    display: inline-block;\n    padding: 5px !important;\n  }\n`;\n\nconst StyledLink = styled.a`\n&:hover{\n  .sidebar-text{\n    color: #7023FF;\n  }\n  .default{\n    display: none;\n  }\n  .focus{\n    display:inline;\n  }\n}\ndisplay: flex;\nmargin-bottom: 2px;\ntext-decoration: none;\n.focus{\n  display:none;\n}\nimg{\n  margin-right: 10px;\n}\n  }\n`;\n\nexport interface SubscriptionTableConfig {\n  type: SubscriptionTableTypes;\n  subscriptionsData: SerializedSubscriptionDetails[] | null;\n  billingModel?: SerializedBillingModel | null;\n  billingModelType?: BillingModelTypes | null;\n}\n\nconst SubscriptionsTable = ({\n  type,\n  subscriptionsData,\n  billingModel,\n  billingModelType,\n}: SubscriptionTableConfig) => {\n  const { account } = useActiveWeb3React();\n  const { pathname } = useLocation();\n  const history = useHistory();\n  // console.log('subscriptionsData', subscriptionsData)\n\n  const supportedTokens = useSupportedTokens();\n\n  const [status, setStatus] = useState(null);\n\n  const todayDate = Number(moment().unix());\n\n  const [today, setToday] = useState(null);\n  const [yesterday, setYesterday] = useState(null);\n  const [week, setWeek] = useState(null);\n  const [month, setMonth] = useState(null);\n  const [dateRangeValue, setDateRangeValue] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const [statusOptions, setStatusOptions] = useState([\n    { id: 0, value: \"Status: All\" },\n    { id: 1, value: \"ACTIVE\" },\n    { id: 2, value: \"CANCELLED\" },\n    { id: 2, value: \"COMPLETED\" },\n  ]);\n\n  const setStatusHandler = (e) => {\n    let st = e.target.value;\n    setStatus(st);\n    setWeek(null);\n    setMonth(null);\n    setYesterday(null);\n    setToday(null);\n  };\n\n  const getDaysOfMonth = () => {\n    let y = new Date().getFullYear();\n    let m = new Date().getMonth() + 1;\n\n    const monthDate = moment(y + \"-\" + m, \"YYYY-MM\");\n    let daysInMonth = monthDate.daysInMonth();\n    const arrDays = [];\n    let date = new Date().getDate();\n\n    while (daysInMonth) {\n      const current = moment().date(daysInMonth);\n      if (daysInMonth <= date) {\n        arrDays.push(current.format(\"MM/DD/YYYY\"));\n      }\n      daysInMonth--;\n    }\n    return arrDays;\n  };\n\n  let dateList = getDaysOfMonth();\n\n  const dateFilters = (key, event = null) => {\n    let date;\n\n    setToday(null);\n    setWeek(null);\n    setMonth(null);\n    setYesterday(null);\n    setStatus(null);\n\n    if (key === \"today\") {\n      date = moment().unix();\n      setToday(Number(date));\n    }\n    if (key === \"yesterday\") {\n      date = moment().subtract(1, \"days\").unix();\n      setYesterday(Number(date));\n    }\n    if (key === \"week\") {\n      date = moment().subtract(1, \"week\").unix();\n      setWeek(Number(date));\n    }\n    if (key === \"month\") {\n      date = moment()\n        .subtract(dateList.length - 1, \"month\")\n        .unix();\n      setMonth(Number(date));\n    }\n    if (key === \"dateRange\") {\n      setStartDate(Number(moment(event?.[0]).unix()));\n      setEndDate(Number(moment(event?.[1]).unix()));\n      setDateRangeValue(event);\n    }\n  };\n\n  const filterHandler = (entry) => {\n    const dateForChecking = isAnyRecurringBM(\n      type === SubscriptionTableTypes.MyCustomers\n        ? BillingModelTypes[billingModelType]\n        : BillingModelTypes[entry[\"billingModelType\"]]\n    )\n      ? Number(entry[\"startTimestamp\"])\n      : Number(entry[\"pullPayments\"][0][\"executionTimestamp\"]);\n    if (status) {\n      switch (status) {\n        case \"ACTIVE\":\n          return (\n            (String(entry.cancelTimestamp) === \"0\" ||\n              entry.cancelTimestamp === null) &&\n            Number(entry.numberOfPayments) > 0\n          );\n        case \"CANCELLED\":\n          return Number(entry.cancelTimestamp) > 0;\n        case \"COMPLETED\":\n          return Number(entry.numberOfPayments) === 0;\n        default:\n          return entry;\n      }\n    } else if (today) {\n      return (\n        new Date(dateForChecking * 1000).getDate() ===\n        new Date(today * 1000).getDate()\n      );\n    } else if (yesterday) {\n      return (\n        new Date(dateForChecking * 1000).getDate() ===\n        new Date(yesterday * 1000).getDate()\n      );\n    } else if (week) {\n      return dateForChecking >= week && dateForChecking <= todayDate;\n    } else if (month) {\n      return dateForChecking >= month && dateForChecking <= todayDate;\n    } else if (dateRangeValue) {\n      return dateForChecking >= startDate && dateForChecking <= endDate;\n    } else {\n      return entry;\n    }\n  };\n\n  const headers = [\n    { label: \"Id\", key: \"id\" },\n    { label: \"Wallet\", key: \"Wallet\" },\n    { label: \"First Payment\", key: \"First Payment\" },\n    { label: \"Last Payment\", key: \"Last Payment\" },\n    { label: \"Next Payment\", key: \"Next Payment\" },\n    { label: \"Status\", key: \"Status\" },\n    { label: \"Total Amount\", key: \"Total Amount\" },\n  ];\n  const singleBillingHeaders = [\n    { label: \"Id\", key: \"id\" },\n    { label: \"Wallet\", key: \"Wallet\" },\n    { label: \"First Payment\", key: \"First Payment\" },\n    { label: \"Status\", key: \"Status\" },\n    { label: \"Total Amount\", key: \"Total Amount\" },\n  ];\n  const singleDynamicBillingHeaders = [\n    { label: \"Id\", key: \"id\" },\n    { label: \"Name\", key: \"Name\" },\n    { label: \"Wallet\", key: \"Wallet\" },\n    { label: \"Status\", key: \"Status\" },\n    { label: \"Total Amount\", key: \"Total Amount\" },\n  ];\n  const recurringDynamicBillingHeaders = [\n    { label: \"Id\", key: \"id\" },\n    { label: \"Name\", key: \"Name\" },\n    { label: \"Wallet\", key: \"Wallet\" },\n    { label: \"Status\", key: \"Status\" },\n    { label: \"Total Amount\", key: \"Total Amount\" },\n  ];\n\n  const csvReport = {\n    data: subscriptionsData,\n    headers:\n      billingModelType === BillingModelTypes.Single\n        ? singleBillingHeaders\n        : billingModelType === BillingModelTypes.SingleDynamic\n        ? singleDynamicBillingHeaders\n        : billingModelType === BillingModelTypes.RecurringDynamic\n        ? recurringDynamicBillingHeaders\n        : headers,\n    filename: \"subscriptions.csv\",\n  };\n\n  const mySubscriptionHeaders = [\n    \"Unique Ref. Id\",\n    \"Name\",\n    \"Type\",\n    \"No. of Payments\",\n    \"Price\",\n    \"Subscription Date\",\n    \"Last Payment\",\n    \"Next Payment\",\n    \"Status\",\n    \"Total Amount\",\n    \"Action\",\n  ];\n\n  const freeTrialBMHeaders = [\n    \"Unique Ref. Id\",\n    \"Wallet\",\n    \"No. of Payments\",\n    \"Trial Period\",\n    \"First Payment\",\n    \"Last Payment\",\n    \"Next Payment\",\n    \"Status\",\n    \"Total Amount\",\n  ];\n\n  const paidTrialBMHeaders = [\n    \"Unique Ref. Id\",\n    \"Wallet\",\n    \"No. of Payments\",\n    \"Trial Period\",\n    \"Initial Amount\",\n    \"First Payment\",\n    \"Last Payment\",\n    \"Next Payment\",\n    \"Status\",\n    \"Total Amount\",\n  ];\n\n  const recurringDynamicBMHeaders = [\n    \"Unique Ref. Id\",\n    \"Name\",\n    \"Wallet\",\n    \"Trial Type\",\n    \"First Payment\",\n    \"Last Payment\",\n    \"Next Payment\",\n    \"Status\",\n    \"Total Amount\",\n  ];\n  const myCustomersHeaders = [\n    \"Unique Ref. Id\",\n    \"Wallet\",\n    \"No. of Payments\",\n    \"First Payment\",\n    \"Last Payment\",\n    \"Next Payment\",\n    \"Status\",\n    \"Total Amount\",\n  ];\n  const singleDynamicBMHeaders = [\n    \"Unique Ref. Id\",\n    \"Name\",\n    \"Wallet\",\n    \"Payment Date\",\n    \"Total Amount\",\n  ];\n  const singleBMHeaders = [\n    \"Unique Ref. Id\",\n    \"Wallet\",\n    \"Payment Date\",\n    \"Total Amount\",\n  ];\n  const tableHeaders = (): string[] => {\n    switch (billingModelType) {\n      case String(BillingModelTypes.Single):\n        return singleBMHeaders;\n      case String(BillingModelTypes.SingleDynamic):\n        return singleDynamicBMHeaders;\n      case String(BillingModelTypes.RecurringDynamic):\n        return recurringDynamicBMHeaders;\n      case String(BillingModelTypes.Recurring):\n        return myCustomersHeaders;\n      case String(BillingModelTypes.RecurringPaidTrial):\n        return paidTrialBMHeaders;\n      case String(BillingModelTypes.RecurringFreeTrial):\n        return freeTrialBMHeaders;\n      default: {\n        return mySubscriptionHeaders;\n      }\n    }\n  };\n\n  const handleClick = ({ id, billingModelId }) => {\n    if (type === SubscriptionTableTypes.MyCustomers) {\n      history.push({\n        pathname: `/merchant/transaction-details`,\n        search: `?billing-model-type=${billingModelType}&billing-model-id=${billingModelId}&subscription-id=${id}`,\n      });\n    }\n  };\n\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [counter, setCounter] = useState<number>(1);\n\n  const currentData = (data) => {\n    const begin = (currentPage - 1) * rowCount;\n    const end = begin + rowCount;\n    return data?.slice(begin, end);\n  };\n\n  const next = () => {\n    const maxPage = Math.ceil((subscriptionsData?.length || 1) / rowCount);\n    if (counter + rowCount < subscriptionsData?.length) {\n      setCounter(counter + rowCount);\n    }\n    setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\n  };\n\n  const prev = () => {\n    if (counter != 1) {\n      setCounter(counter - rowCount);\n    }\n    setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\n  };\n\n  const [showCancelModal, setShowCancelModal] = useState(false);\n  const [cancelSubscriptionId, setCancelSubscriptionId] = useState(null);\n  const [\n    cancelSubscriptionBillingModelType,\n    setCancelSubscriptionBillingModelType,\n  ] = useState(null);\n\n  const cancelSubscriptionHandler = (id: string, bmType: BillingModelTypes) => {\n    setCancelSubscriptionId(id);\n    setCancelSubscriptionBillingModelType(bmType);\n    setShowCancelModal(true);\n  };\n\n  const [isCancelBtnLoading, setIsCancelBtnLoading] = useState(false);\n\n  return (\n    <MainContent>\n      <TableTopWrap className=\"table-top\">\n        <h3>\n          {type === SubscriptionTableTypes.MySubscriptions\n            ? \"My Subscriptions\"\n            : \"Customers\"}\n        </h3>\n\n        <div className=\"select-drop\">\n          {type === SubscriptionTableTypes.MySubscriptions ||\n            (isAnyRecurringBM(BillingModelTypes[billingModelType]) && (\n              <select onChange={setStatusHandler}>\n                {statusOptions?.map((value, index) => {\n                  return (\n                    <option key={index} value={value.value}>\n                      {value.value}\n                    </option>\n                  );\n                })}\n              </select>\n            ))}\n\n          <DateRangePicker\n            monthPlaceholder=\"MM\"\n            dayPlaceholder=\"DD\"\n            yearPlaceholder=\"YYYY\"\n            onChange={(e) => dateFilters(\"dateRange\", e)}\n            value={dateRangeValue}\n          />\n\n          <button\n            className=\"table-top-btn\"\n            onClick={() => dateFilters(\"today\")}\n          >\n            Today\n          </button>\n\n          <button\n            className=\"table-top-btn\"\n            onClick={() => dateFilters(\"yesterday\")}\n          >\n            Yesterday\n          </button>\n\n          <button className=\"table-top-btn\" onClick={() => dateFilters(\"week\")}>\n            Week\n          </button>\n\n          <button\n            className=\"table-top-btn\"\n            onClick={() => dateFilters(\"month\")}\n          >\n            Month\n          </button>\n\n          {/*<div style={{ margin: \"10px 0 0 10px\" }}>*/}\n          {/*  Export{\" \"}*/}\n          {/*  <CSVLink className=\"csv-link\" {...csvReport}>*/}\n          {/*    CSV*/}\n          {/*  </CSVLink>*/}\n          {/*</div>*/}\n        </div>\n      </TableTopWrap>\n\n      <StyledTable>\n        <thead>\n          <tr>\n            {tableHeaders().map((title, index) => (\n              <th key={index}>{title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {subscriptionsData === null ? (\n            <tr>\n              <td colSpan={12}>\n                <div>\n                  <Loader className=\"loader-main\" size={\"3rem\"} />\n                </div>\n              </td>\n            </tr>\n          ) : subscriptionsData?.filter(filterHandler)?.length > 0 ? (\n            currentData(subscriptionsData?.filter(filterHandler)).map(\n              (row, index) => (\n                <tr key={index}>\n                  <td> {row?.[\"uniqueReference\"]}</td>\n\n                  {(type === SubscriptionTableTypes.MySubscriptions ||\n                    isDynamicBM(BillingModelTypes[billingModelType])) && (\n                    <td>\n                      {isDynamicBM(BillingModelTypes[row.billingModelType]) &&\n                      !row?.name\n                        ? \"Dynamic\"\n                        : row?.billingModel?.name\n                        ? row?.billingModel?.name\n                        : row?.name}\n                    </td>\n                  )}\n\n                  {type === SubscriptionTableTypes.MySubscriptions && (\n                    <td>\n                      {\n                        BillingModelTypeTitles[\n                          BillingModelTypes[row?.billingModelType]\n                        ]\n                      }\n                    </td>\n                  )}\n\n                  {type === SubscriptionTableTypes.MyCustomers && (\n                    <td\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handleClick({\n                          id: row?.[\"id\"],\n                          billingModelId:\n                            row?.[\"billingModelId\"] !== null\n                              ? row?.[\"billingModelId\"]!\n                              : billingModel?.id,\n                        })\n                      }\n                    >\n                      <StyledLink className=\"active\">\n                        {row?.subscriber}\n                      </StyledLink>\n                    </td>\n                  )}\n\n                  {String(BillingModelTypes.RecurringDynamic) ==\n                  BillingModelTypes[billingModelType] ? (\n                    <td>{BMTrialTypesLable[billingModel?.trialType]}</td>\n                  ) : isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                    isAnyRecurringBM(\n                      BillingModelTypes[row.billingModelType]\n                    ) ? (\n                    <td>\n                      {row.pullPaymentIDs.length}/\n                      {!isDynamicRecurring(\n                        BillingModelTypes[billingModelType]\n                      ) && type === SubscriptionTableTypes.MyCustomers\n                        ? billingModel?.numberOfPayments\n                        : row?.billingModel?.numberOfPayments}\n                      {isDynamicRecurring(\n                        BillingModelTypes[billingModelType]\n                      ) && type === SubscriptionTableTypes.MyCustomers\n                        ? billingModel?.totalPayments\n                        : row?.totalPayments}\n                    </td>\n                  ) : (\n                    type === SubscriptionTableTypes.MySubscriptions && (\n                      <td>1/1</td>\n                    )\n                  )}\n\n                  {type === SubscriptionTableTypes.MySubscriptions &&\n                    (isDynamicBM(BillingModelTypes[row.billingModelType]) ? (\n                      <td>Dynamic price</td>\n                    ) : (\n                      <td>\n                        {fromTokenDecimals(\n                          row?.amount\n                            ? row?.amount.toString()\n                            : billingModel?.amount.toString(),\n                          supportedTokens?.[\n                            row.settlementToken\n                          ]?.decimals.toString()\n                        ).toString()}\n                        &nbsp;\n                        {supportedTokens?.[row.settlementToken]?.symbol}\n                        <span>\n                          &nbsp; in{\" \"}\n                          {supportedTokens?.[row.paymentToken]?.symbol}\n                        </span>\n                      </td>\n                    ))}\n\n                  {type === SubscriptionTableTypes.MyCustomers &&\n                    (isRecurringWithTrial(\n                      BillingModelTypes[billingModelType]\n                    ) ||\n                      isRecurringWithTrial(\n                        BillingModelTypes[row.billingModelType]\n                      )) && (\n                      <td>\n                        {humanizeDuration(\n                          Number(billingModel?.trialPeriod) * 1000,\n                          {\n                            largest: 1,\n                            round: true,\n                          }\n                        )}\n                      </td>\n                    )}\n\n                  {type === SubscriptionTableTypes.MyCustomers &&\n                    (BillingModelTypes[billingModel.billingModelType] ===\n                      BillingModelTypes.RecurringPaidTrial ||\n                      BillingModelTypes[billingModelType] ===\n                        BillingModelTypes.RecurringPaidTrial) && (\n                      <td>\n                        {fromTokenDecimals(\n                          billingModel?.initialAmount.toString(),\n                          supportedTokens?.[\n                            row.settlementToken\n                          ]?.decimals.toString()\n                        ).toString()}\n                        &nbsp;\n                        {supportedTokens?.[row.settlementToken]?.symbol}\n                      </td>\n                    )}\n\n                  {isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                  isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                    <td>\n                      {\" \"}\n                      {moment(Number(row?.startTimestamp) * 1000).format(\"lll\")}\n                    </td>\n                  ) : (\n                    <td>\n                      {\" \"}\n                      {moment(\n                        Number(row?.pullPayments?.[0]?.executionTimestamp) *\n                          1000\n                      ).format(\"lll\")}\n                    </td>\n                  )}\n                  {isAnyRecurringBM(\n                    BillingModelTypes[\n                      billingModelType\n                        ? billingModelType\n                        : row?.billingModelType\n                    ]\n                  ) ? (\n                    (BillingModelTypes[\n                      billingModelType\n                        ? billingModelType\n                        : row?.billingModelType\n                    ] === BillingModelTypes.RecurringFreeTrial ||\n                      BillingModelTypes[\n                        billingModelType\n                          ? billingModelType\n                          : row?.billingModelType\n                      ] === BillingModelTypes.RecurringFreeTrial ||\n                      BillingModelTypes[\n                        billingModelType\n                          ? billingModelType\n                          : row?.billingModelType\n                      ] === BillingModelTypes.RecurringDynamic) &&\n                    Number(row?.lastPaymentTimestamp) === 0 ? (\n                      <td>No initial payment yet</td>\n                    ) : (\n                      <td>\n                        {\" \"}\n                        {moment(\n                          Number(row?.lastPaymentTimestamp) * 1000\n                        ).format(\"lll\")}\n                      </td>\n                    )\n                  ) : (\n                    type === SubscriptionTableTypes.MySubscriptions && (\n                      <td>\n                        {\" \"}\n                        {moment(\n                          Number(row?.pullPayments?.[0]?.executionTimestamp) *\n                            1000\n                        ).format(\"lll\")}\n                      </td>\n                    )\n                  )}\n\n                  {isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                  isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                    <td>\n                      {\" \"}\n                      {moment(Number(row?.nextPaymentTimestamp) * 1000).format(\n                        \"lll\"\n                      )}\n                    </td>\n                  ) : (\n                    type === SubscriptionTableTypes.MySubscriptions && (\n                      <td>No future payment</td>\n                    )\n                  )}\n\n                  {isAnyRecurringBM(BillingModelTypes[billingModelType]) ||\n                  isAnyRecurringBM(BillingModelTypes[row.billingModelType]) ? (\n                    <>\n                      {Number(\n                        row?.numberOfPayments\n                          ? row?.numberOfPayments\n                          : row?.totalPayments\n                      ) > 0 &&\n                      (row?.totalPayments\n                        ? row?.totalPayments > row?.pullPaymentIDs.length\n                        : true) ? (\n                        <>\n                          {Number(row?.cancelTimestamp) > 0 ? (\n                            <td>\n                              {\" \"}\n                              CANCELLED\n                              <br />\n                              <span\n                                style={{ color: \"#999\", fontSize: \"0.7rem\" }}\n                              >\n                                by{\" \"}\n                                {(row.cancelledBy === account &&\n                                  pathname.includes(\"customer\")) ||\n                                (row.cancelledBy !== account &&\n                                  pathname.includes(\"merchant\"))\n                                  ? \"Customer\"\n                                  : \"Merchant\"}\n                              </span>{\" \"}\n                            </td>\n                          ) : (\n                            <td> ACTIVE </td>\n                          )}\n                        </>\n                      ) : (\n                        <td> COMPLETED </td>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      {type === SubscriptionTableTypes.MySubscriptions && (\n                        <td> COMPLETED </td>\n                      )}\n                    </>\n                  )}\n\n                  {\n                    <td>\n                      {totalAmountPaid(row, billingModel, billingModelType) /\n                        10 **\n                          Number(\n                            supportedTokens?.[row.settlementToken]?.decimals\n                          )}\n                      &nbsp;\n                      {supportedTokens?.[row.settlementToken]?.symbol}\n                      {type === SubscriptionTableTypes.MySubscriptions && (\n                        <span>\n                          &nbsp; in{\" \"}\n                          {supportedTokens?.[row.paymentToken]?.symbol}\n                        </span>\n                      )}\n                    </td>\n                  }\n\n                  {type === SubscriptionTableTypes.MySubscriptions && (\n                    <td>\n                      <ButtonPrimary\n                        className=\"action-btn\"\n                        onClick={() => {\n                          cancelSubscriptionHandler(\n                            row?.[\"id\"],\n                            BillingModelTypes[row?.[\"billingModelType\"]]\n                          );\n                        }}\n                        disabled={\n                          Number(\n                            row?.numberOfPayments\n                              ? row?.numberOfPayments\n                              : row?.totalPayments\n                          ) === 0 ||\n                          Number(row?.cancelTimestamp) > 0 ||\n                          (row?.totalPayments\n                            ? Number(row?.totalPayments) ===\n                              row?.pullPaymentIDs.length\n                            : false)\n                        }\n                      >{`Cancel`}</ButtonPrimary>\n                    </td>\n                  )}\n                </tr>\n              )\n            )\n          ) : (\n            <tr>\n              <td colSpan={12}>\n                <div className=\"empty-table-row\">\n                  <span>No Subscriptions</span>\n                </div>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </StyledTable>\n\n      <div className=\"pagination\">\n        <span>\n          Show:\n          <select\n            onChange={(e) => {\n              setRowCount(parseInt(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"10\">10 Rows</option>\n            <option value=\"25\">25 Rows</option>\n            <option value=\"50\">50 Rows</option>\n            <option value=\"100\">100 Rows</option>)\n          </select>\n        </span>\n        <div className=\"navigation\">\n          <p onClick={prev}>\n            <img src={Arrow} id=\"navigationOne\" alt=\"arrows\" />\n          </p>\n          <p onClick={next}>\n            <img src={Arrow} alt=\"arrows\" />\n          </p>\n        </div>\n      </div>\n\n      <CancelSubscriptionModal\n        cancelSubscriptionId={cancelSubscriptionId}\n        billingModelType={cancelSubscriptionBillingModelType}\n        showCancelModal={showCancelModal}\n        setShowCancelModal={setShowCancelModal}\n        isLoading={isCancelBtnLoading}\n        setIsLoading={setIsCancelBtnLoading}\n      />\n    </MainContent>\n  );\n};\n\nexport default SubscriptionsTable;\n","import { AutoColumn } from \"../Column\";\nimport { InfoCard } from \"../InfoCard\";\nimport { ButtonPrimary } from \"../Button\";\nimport styled from \"styled-components\";\nimport { ReactComponent as Close } from \"../../assets/images/x.svg\";\nimport { useEffect, useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport {\n  BillingModelTypes,\n  calculateGasMargin,\n  WAIT_BLOCK_CONFIRMATIONS,\n} from \"../../utils\";\nimport { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { addTransaction } from \"../../state/transactions/actions\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport Modal from \"../Modal\";\nimport {\n  useDynamicRecurringPPContract,\n  useFreeTrialRecurringPPContract,\n  usePaidTrialRecurringPPContract,\n  useRecurringPPContract,\n} from \"../../hooks/useContract\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../state\";\nimport Loader from \"../Loader\";\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst MarginLeft = styled.div`\n  margin-left: 0;\n\n  .AutoColumnSub {\n    #cancelSub {\n      border: none;\n    }\n\n    #pOne {\n      color: #756f82;\n      marginbottom: -8px;\n    }\n\n    #pTow {\n      color: #756f82;\n    }\n  }\n`;\nconst ModelContent = styled.div`\n  color: #000;\n\n  span.tags {\n    color: #f92672;\n    font-size: 15px;\n  }\n\n  .code-wrap .body {\n    color: #e6db74;\n    font-size: 15px;\n    line-height: 2;\n    padding-left: 20px;\n  }\n\n  .code-wrap .body span.attribute {\n    color: #a6e22e;\n  }\n\n  .tab-menu {\n    display: flex;\n    border-bottom: 1px solid #ddd;\n    margin-bottom: 20px;\n    font-size: 14px;\n\n    .tab-item {\n      padding: 7px 9px;\n      color: #756F82;\n      cursor: pointer;\n    }\n\n    .tab-item.active {\n      color: #7023FF;\n      border-bottom: 2px solid #7023FF;\n    }\n  }\n\n  .tab-wrapper {\n    background: #F8F5FF;\n    padding: 20px;\n    width: 100%;\n    max-width: 100%;\n    margin-bottom: 40px;\n    margin-top: 0;\n    text-align: center;\n\n    .code-copy {\n      #CopyButtonPrimary {\n        color: red;\n      }\n    }\n\n    input[type=\"text\"] {\n      height: 45px;\n      display: block;\n      margin: auto auto 18px;\n      max-width: 300px;\n      width: 100%;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      padding: 0px 12px;\n    }\n\n    a {\n      color: #7023ff;\n      text-decoration: none;\n      font-size: 16px;\n    }\n\n    .XFlix {\n      font-weight: bold;\n      color: #000;\n    }\n\n    .tab-content .tab-pane {\n      display: none;\n\n      &.active {\n        display: block;\n      }\n\n      h3 {\n        font-size: 16px;\n        font-weight: 500;\n        padding: 7px 7px 7px 200px;\n        text-align: left;\n        margin: 0;\n      }\n\n      .btn-theme {\n        background: #7023FF;\n        border: 0;\n        padding: 12px 40px;\n        border-radius: 10px;\n        color: #fff;\n        font-size: 14px;\n      }\n\n      p.power {\n        font-size: 9px;\n        color: #B2ACBF;\n      }\n\n      p {\n        font-size: 14px;\n        color: #756F82;\n        margin-bottom: 20px;\n      }\n\n      .notice-box {\n        box-shadow: 2px 5px 10px 2px #4a435926;\n        border-radius: 15px;\n        padding: 30px 30px 80px;\n        text-align: center;\n        margin-bottom: 20px;\n      }\n\n      .code-box {\n        background: #1A1526;\n        color: #cbcbcb;\n        padding: 10px 20px;\n        border-radius: 8px;\n\n        table tr td:first-child {\n          padding: 0 20px 0 0;\n        }\n\n        .code-copy {\n          display: flex;\n          justify-content: space-between;\n        }\n      }\n\n      .scroll {\n        padding: 4px;\n        width: 100%;\n        height: 200px;\n        overflow-x: auto;\n        overflow-y: auto;\n        background-color: #000;\n        color: #fff;\n        text-align: left;\n        line-height: 25px;\n        margin: 4px 4px 20px;\n      }\n    }\n`;\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0 0 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) =>\n    props.color === \"blue\" ? ({ theme }) => theme.primary1 : \"inherit\"};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  background-color: #f8f5ff;\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  .sideContent {\n    .tab-wrapper {\n    }\n\n    .tab-footer {\n      .code-copy {\n        display: flex;\n        justify-content: flex-end;\n\n        #CodeCopyCancelButton {\n          border-color: #b2acbf;\n          margin-right: 10px;\n          background: transparent;\n          color: #000;\n          width: 120px;\n          display: inline-block;\n          padding: 8px;\n          border-radius: 10px;\n        }\n\n        #CodeCopyOkButton {\n          border-color: #7023ff;\n          margin-right: 10px;\n          background: #7023ff;\n          color: #fff;\n          width: 120px;\n          display: inline-block;\n          padding: 8px;\n          border-radius: 10px;\n          &.disabled {\n            background-color: #edeef2;\n            color: #888d9b;\n            box-shadow: none;\n            border: 1px solid transparent;\n            outline: none;\n            cursor: not-allowed;\n          }\n        }\n      }\n    }\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst CancelSubscriptionModalContent = ({\n  cancelSubscriptionId,\n  billingModelType,\n  cancelSubscriptionModal,\n  setCancelSubscriptionModal,\n  isLoading,\n  setIsLoading,\n}) => {\n  const { account, chainId } = useActiveWeb3React();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const recurringPPContract = useRecurringPPContract();\n  const dynamicRecurringPPContract = useDynamicRecurringPPContract();\n  const freeTrialRecurringPPContract = useFreeTrialRecurringPPContract();\n  const paidTrialRecurringPPContract = usePaidTrialRecurringPPContract();\n\n  const [cancelSubscriptionBoolean, setCancelSubscriptionBoolean] =\n    useState(false);\n\n  const cancelSubscriptionTextHandler = (e) => {\n    let text = \"CANCEL\";\n    let text2 = e.target.value;\n    setCancelSubscriptionBoolean(text === text2.toUpperCase());\n  };\n\n  const cancelSubscription = async () => {\n    if (!chainId || !account) return;\n    try {\n      let contract;\n      switch (billingModelType) {\n        case String(BillingModelTypes.RecurringDynamic):\n          contract = dynamicRecurringPPContract;\n          break;\n        case String(BillingModelTypes.Recurring):\n          contract = recurringPPContract;\n          break;\n        case String(BillingModelTypes.RecurringPaidTrial):\n          contract = paidTrialRecurringPPContract;\n          break;\n        case String(BillingModelTypes.RecurringFreeTrial):\n          contract = freeTrialRecurringPPContract;\n          break;\n        case String(BillingModelTypes.SingleDynamic):\n        case String(BillingModelTypes.Single):\n        default: {\n          return;\n        }\n      }\n      const estimatedGas: BigNumber =\n        await contract.estimateGas.cancelSubscription(cancelSubscriptionId);\n      setIsLoading(true);\n      return await contract\n        .cancelSubscription(cancelSubscriptionId, {\n          gasLimit: calculateGasMargin(estimatedGas),\n        })\n        .then(async (response: TransactionResponse) => {\n          const summary = \"Cancel Billing Model Subscription\";\n          const hash = response.hash;\n          const bmCancellation = {\n            subscriptionId: cancelSubscriptionId,\n          };\n          dispatch(\n            addTransaction({\n              hash,\n              from: account,\n              chainId,\n              bmCancellation,\n              summary,\n            })\n          );\n          await response.wait(WAIT_BLOCK_CONFIRMATIONS);\n          setIsLoading(false);\n          setCancelSubscriptionModal(false);\n        })\n        .catch((error: Error) => {\n          setIsLoading(false);\n          console.debug(\n            `Failed to cancel subscription. Reason: ${error.message}`\n          );\n          throw error;\n        });\n    } catch (error) {\n      setIsLoading(false);\n      console.error(`Failed to cancel subscription. Reason: ${error.message}`);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <ModelContent className=\"cancel_subs\">\n        <UpperSection>\n          <CloseIcon\n            onClick={() => setCancelSubscriptionModal(!cancelSubscriptionModal)}\n          >\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            <MarginLeft>\n              <AutoColumn gap=\"md\" className=\"AutoColumnSub\">\n                <InfoCard title={\"Cancel Subscription\"} id=\"cancelSub\" />\n                <p id=\"pOne\">\n                  You can cancel your subscription and prevent the merchant from\n                  charging your wallet again. Please note this cannot be undone.\n                </p>\n                <p id=\"pTwo\">\n                  Are you sure you want to cancel this subscription?\n                </p>\n              </AutoColumn>\n            </MarginLeft>\n          </HeaderRow>\n          <ContentWrapper>\n            <div className=\"sideContent\">\n              <div className=\"tab-wrapper\">\n                <p>\n                  Type the word <span className=\"XFlix\">CANCEL </span> in the\n                  input field below.\n                </p>\n                <input\n                  type=\"text\"\n                  style={{\n                    borderColor: cancelSubscriptionBoolean ? \"green\" : \"red\",\n                    outlineColor: cancelSubscriptionBoolean ? \"green\" : \"red\",\n                  }}\n                  onChange={cancelSubscriptionTextHandler}\n                  placeholder=\"Type here cancel\"\n                />\n                <span>\n                  By submitting this form, you agree with the{\" \"}\n                  <a href=\"#\">T&Cs</a>\n                </span>\n              </div>\n              <div className=\"tab-footer\">\n                <div className=\"code-copy\">\n                  <ButtonPrimary\n                    id=\"CodeCopyCancelButton\"\n                    onClick={() =>\n                      setCancelSubscriptionModal(!cancelSubscriptionModal)\n                    }\n                  >\n                    {\"Cancel\"}\n                  </ButtonPrimary>\n                  <ButtonPrimary\n                    id=\"CodeCopyOkButton\"\n                    className={isLoading ? \"disabled\" : \"\"}\n                    disabled={isLoading}\n                    onClick={() =>\n                      cancelSubscriptionBoolean ? cancelSubscription() : null\n                    }\n                  >\n                    {isLoading ? <Loader /> : `OK`}\n                  </ButtonPrimary>\n                </div>\n              </div>\n            </div>\n          </ContentWrapper>\n        </UpperSection>\n      </ModelContent>\n    </Wrapper>\n  );\n};\n\nconst CancelSubscriptionModal = ({\n  cancelSubscriptionId,\n  billingModelType,\n  showCancelModal,\n  setShowCancelModal,\n  isLoading,\n  setIsLoading,\n}) => {\n  const [cancelSubscriptionModal, setCancelSubscriptionModal] =\n    useState(showCancelModal);\n\n  useEffect(() => {\n    setCancelSubscriptionModal(showCancelModal);\n  }, [showCancelModal]);\n\n  useEffect(() => {\n    setShowCancelModal(cancelSubscriptionModal);\n  }, [cancelSubscriptionModal]);\n\n  const handleDismiss = () => {\n    if (!isLoading) {\n      setCancelSubscriptionModal(!cancelSubscriptionModal);\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={cancelSubscriptionModal}\n      onDismiss={() => handleDismiss()}\n      minHeight={false}\n      maxHeight={90}\n    >\n      {cancelSubscriptionModal && (\n        <CancelSubscriptionModalContent\n          cancelSubscriptionId={cancelSubscriptionId}\n          billingModelType={billingModelType}\n          cancelSubscriptionModal={cancelSubscriptionModal}\n          setCancelSubscriptionModal={setCancelSubscriptionModal}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelSubscriptionModal;\n"],"sourceRoot":""}