{"version":3,"sources":["components/ProgressBar/index.tsx","pages/ChooseBillingModel/index.tsx"],"names":["ProgressBarContainer","styled","div","ProgressBarChildContainer","ProgressBar","props","name","urlName","window","location","href","split","pop","className","checkUrlName","htmlFor","SelectBillingWraper","CreateBilling","StyledLink","a","ChooseBillingModel","selectNavToggle","useContext","NavToggle","t","useTranslation","as","Link","to","src","ArrowRight","alt","gap","justify","style","marginBottom","title","info"],"mappings":"8MAEMA,EAAuBC,UAAOC,IAAV,s2CAkEpBC,EAA4BF,UAAOC,IAAV,0BAChB,SAASE,EAAYC,GAClC,IA0B+BC,EA1BzBC,EAAUC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MAChD,OACE,eAACZ,EAAD,CAAsBa,UAAU,cAAhC,UACE,eAACV,EAAD,CAA2BU,UAAU,gBAArC,UACE,sBAAMA,UAAWC,EAAaP,GAAW,UAAY,cACrD,uBAAOQ,QAAQ,GAAf,2BACA,0DAEF,eAACZ,EAAD,CAA2BU,UAAU,gBAArC,UACE,sBAAMA,UAAWC,EAAaP,GAAW,UAAY,YACrD,uBAAOQ,QAAQ,GAAf,mBACA,0DAEF,eAACZ,EAAD,CAA2BU,UAAU,gBAArC,UACE,sBAAMA,WAYmBP,EAZgBC,EAa/B,0BAATD,EAbmD,UAAY,aAChE,uBAAOS,QAAQ,GAAf,yBACA,yDAMR,SAASD,EAAaR,GACpB,MAAgB,qCAATA,I,mLCnFHU,EAAsBf,UAAOC,IAAV,6uDA0FnBe,EAAgBhB,UAAOC,IAAV,2iBA+BbgB,EAAajB,UAAOkB,EAAV,+VAwBD,SAASC,IACtB,IAAMC,EAAkBC,qBAAWC,KAC3BC,EAAMC,cAAND,EAER,OACE,mCACE,eAACP,EAAD,CAAeJ,UAAWQ,EAAkB,QAAU,GAAtD,UACE,cAAC,IAAD,IACA,qBAAKR,UAAU,QAAf,SACE,eAACK,EAAD,CAAYL,UAAU,SAASa,GAAIC,IAAMC,GAAG,sBAA5C,UACG,IACD,qBAAKC,IAAKC,UAAYC,IAAI,UAAW,SAGzC,gCACE,cAAC,IAAD,CAAYC,IAAI,KAAKC,QAAQ,aAAaC,MAAO,CAAEC,aAAc,QAAjE,SACE,cAAC,IAAD,CAAUC,MAAOZ,EAAE,sBAAuBa,KAAMb,EAAE,mBAEpD,eAACR,EAAD,WACE,cAAC,IAAD,CAAYH,UAAU,aAAaa,GAAIC,IAAMC,GAAG,wCAAhD,SACE,sBAAKf,UAAU,OAAf,UACE,+BACGW,EAAE,kBACH,sBAAMX,UAAU,cAElB,kCAAKW,EAAE,4BAGX,cAAC,IAAD,CAAYX,UAAU,aAAaa,GAAIC,IAAMC,GAAG,2CAAhD,SACE,sBAAKf,UAAU,OAAf,UACE,+BACG,IACAW,EAAE,oBACH,sBAAMX,UAAU,cAElB,4BAAIW,EAAE,8BAGV,cAAC,IAAD,CAAYX,UAAU,aAAtB,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,sBAAMA,UAAU,OAAhB,4BAEF,+BACG,IACAW,EAAE,gBACH,sBAAMX,UAAU,cAElB,kCAAKW,EAAE","file":"static/js/18.148a5ba3.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst ProgressBarContainer = styled.div`\n  padding-left: 30px;\n  width: 190px;\n  border-right: 1px solid #ddd;\n  padding-right: 10px;\n  margin-right: 20px;\n\n  .progress-item {\n    padding: 15px 0;\n    position: relative;\n    &:not(:last-child):before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      border: 1px solid #ddd;\n      top: 30px;\n      left: -20px;\n    }\n    span {\n      align-items: center;\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      position: absolute;\n      left: -29px;\n      display: flex;\n      justify-content: center;\n    }\n    span.pending {\n      background: #fff;\n      border: 1px solid #a3a3a3;\n    }\n    span.completed {\n      background: #00d48b;\n      &:before {\n        content: '';\n        display: inline-block;\n        width: 7px;\n        height: 4px;\n        border-left: 2px solid #fff;\n        border-bottom: 2px solid #fff;\n        transform: rotate(312deg);\n      }\n    }\n    span.current {\n      background: #00d48b;\n      &:before {\n        content: '';\n        display: inline-block;\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background: #fff;\n        transform: rotate(312deg);\n      }\n    }\n  }\n  label {\n    font-size: 16px;\n  }\n  p {\n    color: #756f82;\n    font-size: 12px;\n    margin-top: 5px;\n  }\n`;\nconst ProgressBarChildContainer = styled.div``;\nexport default function ProgressBar(props?: any) {\n  const urlName = window.location.href.split('/').pop();\n  return (\n    <ProgressBarContainer className=\"progressBar\">\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkUrlName(urlName) ? 'current' : 'completed'}></span>\n        <label htmlFor=\"\">Billing Model</label>\n        <p>Choose a billing model</p>\n      </ProgressBarChildContainer>\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkUrlName(urlName) ? 'pending' : 'current'}></span>\n        <label htmlFor=\"\">Setup</label>\n        <p>Set price and currency</p>\n      </ProgressBarChildContainer>\n      <ProgressBarChildContainer className=\"progress-item\">\n        <span className={checkIntegrationUrlName(urlName) ? 'pending' : 'current'}></span>\n        <label htmlFor=\"\">Integration</label>\n        <p>Embed code snippet</p>\n      </ProgressBarChildContainer>\n    </ProgressBarContainer>\n  );\n}\n\nfunction checkUrlName(name: string) {\n  return name === 'create/choose-billing-model-type' ? true : false;\n}\n\nfunction checkIntegrationUrlName(name: string) {\n  return name === 'create/widget-preview' ? false : true;\n}\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AutoColumn } from '../../components/Column';\nimport { InfoCard } from '../../components/InfoCard';\nimport ProgressBar from '../../components/ProgressBar';\nimport ArrowRight from '../../assets/images/back-arrow.svg';\nimport { NavToggle } from '../App';\n\nconst SelectBillingWraper = styled.div`\n  .modelLinks {\n    position: relative;\n  }\n\n  .ribbon {\n    width: 150px;\n    height: 93px;\n    overflow: hidden;\n    position: absolute;\n  }\n  .ribbon::before {\n    position: absolute;\n    z-index: -1;\n    content: '';\n    display: block;\n    border: 5px solid #2980b9;\n  }\n  .ribbon span.ribs {\n    position: absolute;\n    display: block;\n    width: 167px;\n    padding: 8px 0;\n    background-color: #db3434;\n    box-shadow: 0 5px 10px rgb(0 0 0 / 10%);\n    color: #fff;\n    font: 700 10px/1 'Lato', sans-serif;\n    text-shadow: 0 1px 1px rgb(0 0 0 / 20%);\n    text-transform: uppercase;\n    text-align: center;\n  }\n  .ribbon-top-left {\n    top: -10px;\n    left: -10px;\n  }\n  .ribbon-top-left::before {\n    border-top-color: transparent;\n    border-left-color: transparent;\n  }\n  .ribbon-top-left::before {\n    top: 0;\n    right: 0;\n  }\n\n  .ribbon-top-left span {\n    right: -25px;\n    top: 30px;\n    transform: rotate(-45deg);\n  }\n  display: flex;\n  flex-wrap: wrap;\n  width: 700px;\n  .grid {\n    width: 325px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    margin-right: 25px;\n    margin-bottom: 20px;\n    &:hover {\n      box-shadow: 0 0 10px #ddd;\n    }\n    p {\n      font-size: 12px;\n      color: #756f82;\n    }\n    h5 {\n      margin: 0;\n      font-weight: 500;\n      font-size: 16px;\n      display: flex;\n      justify-content: space-between;\n      span {\n        display: inline-block;\n        width: 15px;\n        height: 15px;\n        border-radius: 50%;\n      }\n      span.color1 {\n        background: #f9b741;\n      }\n      span.color2 {\n        background: #f97841;\n      }\n      span.color3 {\n        background: #1e6af6;\n      }\n    }\n  }\n`;\n\nconst CreateBilling = styled.div`\n  color: #000;\n  a.modelLinks {\n    text-decoration: none;\n    color: #000;\n  }\n  a.modelLinks:hover {\n    text-decoration: underline;\n    color: #1e6af6;\n    .grid {\n      border: 1px solid #1e6af6;\n    }\n  }\n  .arrow {\n    margin: 0 20px 0 0;\n    padding-top: 1.7rem;\n    cursor: pointer;\n  }\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n    height: 90vh;\n    overflow-y: hidden;\n    margin-top: 1rem;\n  }\n  width: 100%;\n  padding-left: 100px;\n  overflow: hidden;\n  display: flex;\n`;\n\nconst StyledLink = styled.a`\n  &:hover{\n    .sidebar-text{\n      color: #7023FF;\n    }\n    .default{\n      display: none;\n    }\n    .focus{\n      display:inline;\n    }\n  }\n  display: flex;\n  color: #756F82;\n  margin-bottom: 30px;\n  text-decoration: none;\n  .focus{\n    display:none;\n  }\n  img{\n    margin-right: 10px;\n  }\n    }\n  `;\nexport default function ChooseBillingModel() {\n  const selectNavToggle = useContext(NavToggle);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <CreateBilling className={selectNavToggle ? ' open' : ''}>\n        <ProgressBar />\n        <div className=\"arrow\">\n          <StyledLink className=\"active\" as={Link} to=\"/merchant/dashboard\">\n            {' '}\n            <img src={ArrowRight} alt=\"arrow\" />{' '}\n          </StyledLink>\n        </div>\n        <div>\n          <AutoColumn gap=\"lg\" justify=\"flex-start\" style={{ marginBottom: '35px' }}>\n            <InfoCard title={t('chooseBillingModel')} info={t('billingInfo')} />\n          </AutoColumn>\n          <SelectBillingWraper>\n            <AutoColumn className=\"modelLinks\" as={Link} to=\"/merchant/create/single-billing-model\">\n              <div className=\"grid\">\n                <h5>\n                  {t('singlePayments')}\n                  <span className=\"color1\" />\n                </h5>\n                <p> {t('setSinglePayment')}</p>\n              </div>\n            </AutoColumn>\n            <AutoColumn className=\"modelLinks\" as={Link} to=\"/merchant/create/recurring-billing-model\">\n              <div className=\"grid\">\n                <h5>\n                  {' '}\n                  {t('recurringPayment')}\n                  <span className=\"color2\" />\n                </h5>\n                <p>{t('setRecurringPayment')}</p>\n              </div>\n            </AutoColumn>\n            <AutoColumn className=\"modelLinks\">\n              <div className=\"grid\">\n                <div className=\"ribbon ribbon-top-left\">\n                  <span className=\"ribs\">Coming Soon!</span>\n                </div>\n                <h5>\n                  {' '}\n                  {t('topupPayment')}\n                  <span className=\"color3\" />\n                </h5>\n                <p> {t('setTopupPayment')}</p>\n              </div>\n            </AutoColumn>\n          </SelectBillingWraper>\n        </div>\n      </CreateBilling>\n    </>\n  );\n}\n"],"sourceRoot":""}