{"version":3,"sources":["components/SupportedLifeCyle/index.tsx","state/my-billing-models/hooks.tsx","components/BillingInfoCard/index.tsx","components/MerchantWidget/ConfigContent.tsx","components/MerchantWidget/index.tsx","pages/MerchantBillingModelDetails/index.tsx"],"names":["UNIT_MEASURES","y","mo","w","d","h","m","s","DEFAULT_PERIOD_VALUE","label","periodInSeconds","supportedLifecycles","env","statusOptionsValuesForMerchantDashboard","BillingModelTypeTitles","BillingModelTypes","Recurring","RecurringFreeTrial","RecurringPaidTrial","RecurringDynamic","Single","SingleDynamic","id","value","useAllMyBillingModels","chainId","useActiveWeb3React","state","useSelector","my_billing_models","billingModels","bmType","Object","keys","map","index","push","useBillingModel","billingModelType","billingModelId","useBMSubscription","bmSubscriptionId","subscriptions","find","el","useSubscriptionsPerBM","TotalWrap","styled","div","BillingInfoCard","props","billingModelDetails","token","useSupportedTokens","className","style","display","justifyContent","name","Number","creationTime","moment","format","decimals","amount","symbol","subscriptionIDs","length","totalPayments","ConfigContent","widgetData","supportedTokens","useState","trialType","setTrialType","useEffect","isRecurringDynamic","currencyOptions","address","onPeriodChange","e","duration","cycle","target","bmTrialDuration","setter","bmDurationPeriod","frequencyOptions","freq","trialPeriodDuration","type","bmTrialPeriod","min","onChange","placeholder","defaultValue","bmName","bmPrice","width","borderRadius","background","bmCurrency","bmNoOfPayments","bmFrequency","BMTrialTypes","NoTrial","PaidTrial","bmInitialAmount","WidgetContent","MerchantWidgetContainer","isPreview","t","useTranslation","copyWidgetUrl","setCopyWidgetUrl","codeSnippet","setCodeSnippet","widget_billing_name","setWidgetBillingName","widget_billing_price","setWidgetBillingPrice","widget_number_of_payment","setWidgetNumberOfPayment","widget_trial_period","setWidgetTrialPeriod","widget_frequency","setWidgetFrequency","widget_initial_amount","setWidgetInitialAmount","widget_token_currency","setWidgetTokenCurrency","durationPeriod","setDurationPeriod","trailPeriodDuration","setTrailPeriodDuration","widget_merchantName","setMerchantName","widget_merchantUrl","setMerchantUrl","merchantName","merchantUrl","BillingModelTypeForCodeSnippet","template","String","console","error","Tabs","defaultActiveKey","Tab","eventKey","title","isDynamicBM","href","rel","isAnySingleBM","humanizeDuration","largest","round","unitMeasures","frequency","now","numberOfPayments","isRecurringWithTrial","FreeTrial","fromTokenDecimals","initialAmount","toString","trialPeriod","tabClassName","disabled","textAlign","Button","onClick","navigator","clipboard","writeText","then","setTimeout","err","StyledLink","a","MainContent","MerchantBillingModelDetails","selectNavToggle","useContext","NavToggle","history","useHistory","search","useLocation","query","URLSearchParams","get","gap","justify","height","src","edit","alt","pathname","editBillingHandler","color","marginBottom","as","Link","to","ArrowRight","SubscriptionTableTypes","MyCustomers","billingModel","subscriptionsData"],"mappings":"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","file":"static/js/6.40a08a59.chunk.js","sourcesContent":["import { BillingModelTypes, BillingModelTypeTitles } from \"../../utils\";\n\nexport const UNIT_MEASURES = {\n  y: 31536000,\n  mo: 2592000,\n  w: 604800,\n  d: 86400,\n  h: 3600,\n  m: 60,\n  s: 1,\n};\n\nexport const DEFAULT_PERIOD_VALUE = {\n  label: \"Day(s)\",\n  periodInSeconds: 86400,\n};\n\nexport const supportedLifecycles = [\n  {\n    label: \"Minute(s)\",\n    periodInSeconds: 60,\n    env: \"TEST\",\n  },\n  {\n    label: \"Hour(s)\",\n    periodInSeconds: 3600, // an hour has 60m => 60 * 60\n    env: \"TEST\",\n  },\n  {\n    label: \"Day(s)\",\n    periodInSeconds: 86400, // an day has 24h => 3600 * 24\n    env: \"TEST,PROD\",\n  },\n  {\n    label: \"Week(s)\",\n    periodInSeconds: 604800, // a week has 7d => 86400 * 7\n    env: \"TEST,PROD\",\n  },\n  {\n    label: \"Month(s)\",\n    periodInSeconds: 2592000,\n    env: \"TEST,PROD\",\n  },\n  {\n    label: \"Quarter(s)\",\n    periodInSeconds: 7776000,\n    env: \"TEST,PROD\",\n  },\n  {\n    label: \"Year(s)\",\n    periodInSeconds: 31536000,\n    env: \"TEST,PROD\",\n  },\n];\n\nexport const billingModelTypeOptionsValues = [\n  { id: 0, value: BillingModelTypeTitles[\"All\"] },\n  { id: 1, value: BillingModelTypeTitles[BillingModelTypes.Recurring] },\n  {\n    id: 2,\n    value: BillingModelTypeTitles[BillingModelTypes.RecurringFreeTrial],\n  },\n  {\n    id: 3,\n    value: BillingModelTypeTitles[BillingModelTypes.RecurringPaidTrial],\n  },\n  { id: 4, value: BillingModelTypeTitles[BillingModelTypes.RecurringDynamic] },\n  { id: 5, value: BillingModelTypeTitles[BillingModelTypes.Single] },\n  { id: 6, value: BillingModelTypeTitles[BillingModelTypes.SingleDynamic] },\n];\n\nexport const statusOptionsValuesForMerchantDashboard = [\n  { id: 0, value: \"Status: All\" },\n  { id: 1, value: \"ACTIVE\" },\n  { id: 2, value: \"INACTIVE\" },\n  { id: 3, value: \"SUSPENDED\" },\n];\nexport const statusOptionsForSubscriptionDashboard = [\n  { id: 0, value: \"Status: All\" },\n  { id: 1, value: \"ACTIVE\" },\n  { id: 2, value: \"CANCELLED\" },\n];\n","import { useSelector } from \"react-redux\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { AppState } from \"../index\";\nimport {\n  SerializedBillingModel,\n  SerializedSubscriptionDetails,\n} from \"../../utils/blockchain-serializers\";\nimport { BillingModelTypes } from \"../../utils\";\n\nexport function useAllMyBillingModels(): SerializedBillingModel[] {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n\n  if (!chainId) return [];\n\n  let billingModels: SerializedBillingModel[] = [];\n  for (let bmType in BillingModelTypes) {\n    if (!state[chainId] || !state[chainId][bmType]) {\n      continue;\n    }\n    Object.keys(state[chainId][bmType]).map((value, index) => {\n      billingModels.push(state[chainId][bmType][value]);\n    });\n  }\n\n  return billingModels;\n}\n\nexport function useBillingModel(\n  billingModelType: BillingModelTypes,\n  billingModelId: string\n): SerializedBillingModel | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][billingModelType] ||\n    !state[chainId][billingModelType][billingModelId]\n  )\n    return null;\n\n  return state[chainId][billingModelType][billingModelId];\n}\n\nexport function useBMSubscription(\n  billingModelType: BillingModelTypes,\n  billingModelId: string,\n  bmSubscriptionId: string\n): SerializedSubscriptionDetails | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][billingModelType] ||\n    !state[chainId][billingModelType][billingModelId]\n  )\n    return null;\n\n  return state[chainId][billingModelType][billingModelId].subscriptions.find(\n    (el) => el.id === bmSubscriptionId\n  );\n}\n\nexport function useSubscriptionsPerBM(\n  billingModelType: BillingModelTypes,\n  billingModelId: string\n): SerializedSubscriptionDetails[] {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][billingModelType] ||\n    !state[chainId][billingModelType][billingModelId]\n  )\n    return [];\n\n  return state[chainId][billingModelType][billingModelId].subscriptions;\n}\n\nexport function useSingleBMCount(): number | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][BillingModelTypes.Single] ||\n    !state[chainId][BillingModelTypes.SingleDynamic]\n  )\n    return null;\n  const singleCount = Object.keys(\n    state[chainId][BillingModelTypes.Single]\n  ).length;\n  const singleDynamicCount = Object.keys(\n    state[chainId][BillingModelTypes.SingleDynamic]\n  ).length;\n\n  return singleCount + singleDynamicCount;\n}\n\nexport function useRecurringBMCount(): number | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][BillingModelTypes.Recurring] ||\n    !state[chainId][BillingModelTypes.RecurringDynamic] ||\n    !state[chainId][BillingModelTypes.RecurringFreeTrial] ||\n    !state[chainId][BillingModelTypes.RecurringPaidTrial]\n  )\n    return null;\n\n  const recurringCount = Object.keys(\n    state[chainId][BillingModelTypes.Recurring]\n  ).length;\n  const recurringDynamicCount = Object.keys(\n    state[chainId][BillingModelTypes.RecurringDynamic]\n  ).length;\n  const recurringFreeTrialCount = Object.keys(\n    state[chainId][BillingModelTypes.RecurringFreeTrial]\n  ).length;\n  const recurringPaidTrialCount = Object.keys(\n    state[chainId][BillingModelTypes.RecurringPaidTrial]\n  ).length;\n\n  return (\n    recurringCount +\n    recurringDynamicCount +\n    recurringFreeTrialCount +\n    recurringPaidTrialCount\n  );\n}\n\nexport function useAllMyBillingModelsPerBMType(): {\n  [billingModelType: string]: {\n    [billingModelId: string]: SerializedBillingModel;\n  };\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState[\"my_billing_models\"]>(\n    (state) => state.my_billing_models\n  );\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import styled from \"styled-components\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport moment from \"moment\";\nimport {\n  SerializedBillingModel,\n  SerializedSubscriptionDetails,\n} from \"../../utils/blockchain-serializers\";\nimport { useSupportedTokens } from \"../../state/supported-tokens/hooks\";\n\nconst TotalWrap = styled.div`\n  &:not(:last-child) {\n    border-right: 1px solid #ddd;\n  }\n\n  span.status {\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    background: #27ae60;\n    border-radius: 50%;\n  }\n  h3 {\n    margin: 0;\n    font-weight: 500;\n  }\n\n  padding: 5px 25px;\n  p {\n    font-size: 10px;\n    color: #959595;\n    margin: 0;\n  }\n  h2 {\n    font-size: 10px;\n    font-weight: 100;\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n  }\n`;\n\ninterface BillingInfoCardCardProps {\n  billingModelDetails: SerializedBillingModel;\n}\n\nconst BillingInfoCard = (props?: BillingInfoCardCardProps) => {\n  const billingModelDetails =\n    props && props.billingModelDetails ? props.billingModelDetails : null;\n  const supportedToken = useSupportedTokens();\n  const token = supportedToken[props.billingModelDetails?.token];\n\n  return (\n    <>\n      <div className=\"aside-total\" style={{ display: \"flex\" }}>\n        <TotalWrap className=\"total-earning\">\n          <h2>Billing Model Name</h2>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <span>\n              {billingModelDetails?.name}\n              {Number(billingModelDetails?.creationTime) > 0 && (\n                <p>\n                  <span className=\"status\" /> Active since{\" \"}\n                  {moment(\n                    Number(billingModelDetails?.creationTime) * 1000\n                  ).format(\"ll\")}\n                </p>\n              )}\n            </span>\n          </div>\n        </TotalWrap>\n        <TotalWrap className=\"total-earning\">\n          <h2>Price, Currency</h2>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <span>\n              {token?.decimals\n                ? Number(billingModelDetails?.amount) / 10 ** token.decimals\n                : \"Loading...\"}{\" \"}\n              {token?.symbol}\n            </span>\n          </div>\n        </TotalWrap>\n        <TotalWrap className=\"total-earning\">\n          <h2>Charged</h2>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <span>\n              <h3>\n                {billingModelDetails?.subscriptionIDs.length > 0 &&\n                token?.decimals\n                  ? (Number(billingModelDetails?.amount) /\n                      10 ** token?.decimals) *\n                    billingModelDetails?.totalPayments\n                  : \"0\"}{\" \"}\n                {token?.symbol}\n                <span className=\"small\" />\n              </h3>\n            </span>\n          </div>\n        </TotalWrap>\n      </div>\n    </>\n  );\n};\n\nexport default BillingInfoCard;\n","import { Input, Select } from \"@rebass/forms\";\nimport { useEffect, useState } from \"react\";\nimport { useSupportedTokens } from \"../../state/supported-tokens/hooks\";\nimport { BillingModelTypes, BMTrialTypes } from \"../../utils\";\nimport { supportedLifecycles } from \"../SupportedLifeCyle\";\n\nconst ConfigContent = ({\n  billingModelId,\n  billingModelType,\n  billingModelDetails,\n  widgetData,\n}) => {\n  const supportedTokens = useSupportedTokens();\n\n  const [trialType, setTrialType] = useState(\n    billingModelDetails?.trialType ? billingModelDetails?.trialType : 0\n  );\n\n  useEffect(() => {\n    setTrialType(billingModelDetails?.trialType);\n  }, [billingModelDetails?.trialType]);\n\n  const isRecurringDynamic =\n    BillingModelTypes[billingModelType] === BillingModelTypes.RecurringDynamic;\n\n  const currencyOptions =\n    Object.keys(supportedTokens).length > 0 &&\n    Object.keys(supportedTokens)?.map(function (index) {\n      return (\n        <option\n          key={supportedTokens[index].address}\n          value={supportedTokens[index].address}\n        >\n          {supportedTokens[index].symbol}\n        </option>\n      );\n    });\n\n  const onBmNameChange = (e) => {\n    widgetData.bmName.setter(e.target.value);\n  };\n  const onBmPriceChange = (e) => {\n    widgetData.bmPrice.setter(e.target.value);\n  };\n  const onCurrencyChanged = (e) => {\n    widgetData.bmCurrency.setter(supportedTokens[e.target.value]);\n  };\n  const onNoOfPaymentsChange = (e) => {\n    widgetData.bmNoOfPayments.setter(e.target.value);\n  };\n  const onPeriodChange = (e) => {\n    const duration = supportedLifecycles.find(\n      (cycle) => Number(cycle.periodInSeconds) === Number(e.target.value)\n    );\n    if (e.target.id === \"bm-trial-period-frequency\") {\n      widgetData.bmTrialDuration.setter(duration);\n    } else {\n      widgetData.bmDurationPeriod.setter(duration);\n    }\n  };\n\n  const onFrequencyChange = (e) => {\n    widgetData.bmFrequency.setter(e.target.value);\n  };\n\n  const onTrailPeriodChange = (e) => {\n    widgetData.bmTrialPeriod.setter(e.target.value);\n  };\n\n  const onInitialAmountChanged = (e) => {\n    widgetData.bmInitialAmount.setter(e.target.value);\n  };\n\n  const frequencyOptions = supportedLifecycles.map((freq) => (\n    <option key={freq.periodInSeconds} value={freq.periodInSeconds}>\n      {freq.label}\n    </option>\n  ));\n\n  const trialPeriodDuration = (\n    <>\n      <span className=\"attribute\">Trial Duration</span>\n\n      <div className=\"trial-period-frequency\">\n        <Input\n          id=\"bm-trial-period\"\n          name=\"bm-trial-period\"\n          type=\"number\"\n          value={widgetData.bmTrialPeriod.value}\n          min=\"1\"\n          onChange={onTrailPeriodChange}\n          placeholder=\"enter trial period\"\n        />\n        <Select\n          id=\"bm-trial-period-frequency\"\n          name=\"bm-trial-period-frequency\"\n          defaultValue={widgetData.bmTrialDuration.value.periodInSeconds}\n          onChange={onPeriodChange}\n        >\n          {frequencyOptions}\n        </Select>\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"code-wrap\">\n      <div className=\"body\">\n        <span className=\"attribute\">BillingModelName</span>\n        <Input\n          id=\"bm-reference-name\"\n          name=\"bm-reference-name\"\n          type=\"text\"\n          value={widgetData.bmName.value}\n          onChange={onBmNameChange}\n          placeholder=\"enter billing name\"\n        />\n        <span className=\"attribute\">SellingPrice</span>\n        <Input\n          id=\"bm-selling-price\"\n          name=\"bm-selling-price\"\n          type=\"text\"\n          value={widgetData.bmPrice.value}\n          onChange={onBmPriceChange}\n          placeholder=\"enter selling price\"\n        />\n        <span className=\"attribute\">SellingToken</span>\n        <Select\n          id=\"bm-currency\"\n          name=\"bm-currency\"\n          style={{\n            width: \"100px\",\n            borderRadius: \"4px 0 0 4px\",\n            background: \"black\",\n          }}\n          defaultValue={widgetData.bmCurrency.value?.address}\n          onChange={onCurrencyChanged}\n        >\n          {currencyOptions}\n        </Select>\n\n        {isRecurringDynamic && (\n          <>\n            <span className=\"attribute\">Number of payment</span>\n            <Input\n              id=\"bm-no-of-payments\"\n              name=\"bm-no-of-payments\"\n              type=\"number\"\n              min=\"1\"\n              value={widgetData.bmNoOfPayments.value}\n              onChange={onNoOfPaymentsChange}\n              placeholder=\"enter number of payment\"\n            />\n\n            <span className=\"attribute\">Frequency</span>\n            <div className=\"frequency\">\n              <Input\n                id=\"bm-frequency\"\n                name=\"bm-frequency\"\n                type=\"number\"\n                value={widgetData.bmFrequency.value}\n                min=\"1\"\n                onChange={onFrequencyChange}\n                placeholder=\"enter frequency\"\n              />\n              <Select\n                id=\"bm-frequency-period\"\n                name=\"bm-frequency-period\"\n                defaultValue={widgetData.bmDurationPeriod.value.periodInSeconds}\n                onChange={onPeriodChange}\n              >\n                {frequencyOptions}\n              </Select>\n            </div>\n            <div className=\"trialPeriod\">\n              {trialType === BMTrialTypes.NoTrial ? \"\" : trialPeriodDuration}\n              {trialType === BMTrialTypes.PaidTrial ? (\n                <div>\n                  <span className=\"attribute\">Trial Amount</span>\n                  <Input\n                    id=\"bm-trial-amount\"\n                    name=\"bm-trial-amount\"\n                    type=\"number\"\n                    value={widgetData.bmInitialAmount.value}\n                    min=\"1\"\n                    onChange={onInitialAmountChanged}\n                    placeholder=\"enter paid trail amount\"\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigContent;\n","import { Tab, Tabs } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport {\n  BillingModelTypes,\n  BMTrialTypes,\n  fromTokenDecimals,\n  isAnySingleBM,\n  isDynamicBM,\n  isRecurringWithTrial,\n} from \"../../utils\";\nimport { useEffect, useState } from \"react\";\nimport { ButtonPrimary } from \"../Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSupportedTokens } from \"../../state/supported-tokens/hooks\";\nimport ConfigContent from \"./ConfigContent\";\nimport humanizeDuration from \"humanize-duration\";\nimport { DEFAULT_PERIOD_VALUE, UNIT_MEASURES } from \"../SupportedLifeCyle\";\nimport moment from \"moment\";\n\nconst IS_CONFIG_FEAT_ENABLED = true;\n\nconst WidgetContent = styled.div`\n   {\n    .nav-link {\n      color: #5c5c5c;\n      pointer-events: all !important;\n    }\n    .tab-content > div {\n      width: 75%;\n    }\n    .code-copy {\n      float: left;\n      #CopyButtonPrimary {\n        border-color: #7023ff;\n        margin-right: 10px;\n        background: #7023ff;\n        color: #fff;\n        width: 120px;\n        display: inline-block;\n        padding: 8px;\n        border-radius: 10px;\n      }\n    }\n    .notice-box {\n      box-shadow: 2px 5px 10px 2px #4a435926;\n      border-radius: 15px;\n      padding: 30px 30px 80px;\n      text-align: center;\n      margin-bottom: 20px;\n      &.Single,\n      &.SingleDynamic {\n        height: 270px;\n      }\n      &.Recurring {\n        height: 340px;\n      }\n      &.RecurringFreeTrial,\n      &.RecurringPaidTrial {\n        height: 360px;\n      }\n      .connect-btn {\n        background: #7023ff;\n        border: 0;\n        padding: 12px 40px;\n        border-radius: 10px;\n        color: #fff;\n        font-size: 14px;\n      }\n      p.power {\n        font-size: 9px;\n        color: #b2acbf;\n      }\n    }\n\n    .billing-model-details {\n      margin-bottom: 1rem;\n      .billing-model-merchant-name {\n        > a {\n          text-decoration: none;\n        }\n      }\n      .billing-model-title {\n        ::-webkit-scrollbar {\n          display: none;\n        }\n        white-space: nowrap;\n        overflow: scroll;\n        text-overflow: \"...\";\n      }\n      .billing-model-price {\n        font-size: 2rem;\n      }\n      .billing-model-duration {\n        font-size: 0.8rem;\n        margin-bottom: 2rem;\n        color: #5c5c5c;\n      }\n    }\n    .code-wrap {\n      padding: 8px;\n      width: 100%;\n      height: 236px;\n      overflow-x: auto;\n      overflow-y: auto;\n      /* white-space: nowrap; */\n      /* overflow-x: hidden; */\n      background-color: #000;\n      color: #fff;\n      text-align: left;\n      line-height: 25px;\n      margin: 4px 4px 20px;\n      .body {\n        color: #e6db74;\n        font-size: 15px;\n        line-height: 2;\n        padding-left: 20px;\n\n        span.attribute {\n          color: #a6e22e;\n        }\n        input {\n          background: #242424;\n          width: 310px;\n        }\n      }\n    }\n\n    .frequency,\n    .trial-period-frequency {\n      #bm-trial-period-frequency,\n      #bm-frequency-period {\n        width: 110px;\n        background: black;\n      }\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    #bm-trial-period {\n      width: 150px;\n    }\n    #bm-trial-amount {\n      width: 200px;\n    }\n  }\n`;\n\nexport interface MerchantWidgetContainerProps {\n  billingModelType: BillingModelTypes;\n  billingModelDetails: any;\n  billingModelId?: string | null;\n  isPreview?: boolean;\n}\n\nconst MerchantWidgetContainer = ({\n  billingModelType,\n  billingModelId,\n  billingModelDetails,\n  isPreview = false,\n}: MerchantWidgetContainerProps) => {\n  const { t } = useTranslation();\n  const supportedTokens = useSupportedTokens();\n  // console.log('billingModelType: ', billingModelType);\n  // console.log(\"billingModelDetails: \", billingModelDetails);\n\n  const [copyWidgetUrl, setCopyWidgetUrl] = useState(false);\n  const [codeSnippet, setCodeSnippet] = useState(\"\");\n\n  const [widget_billing_name, setWidgetBillingName] = useState(\"\");\n  const [widget_billing_price, setWidgetBillingPrice] = useState(0);\n  const [widget_number_of_payment, setWidgetNumberOfPayment] = useState(0);\n  const [widget_trial_period, setWidgetTrialPeriod] = useState(0);\n  const [widget_frequency, setWidgetFrequency] = useState(0);\n  const [widget_initial_amount, setWidgetInitialAmount] = useState(0);\n  const [widget_token_currency, setWidgetTokenCurrency] = useState({\n    address: \"0xc5d495EEaA84942095b769342bC71125721692Da\",\n    symbol: \"PMA\",\n    name: \"PumaPay\",\n    decimals: 18,\n  });\n  const [durationPeriod, setDurationPeriod] = useState(DEFAULT_PERIOD_VALUE);\n  const [trailPeriodDuration, setTrailPeriodDuration] =\n    useState(DEFAULT_PERIOD_VALUE);\n\n  const [widget_merchantName, setMerchantName] = useState(\"\");\n  const [widget_merchantUrl, setMerchantUrl] = useState(\"\");\n  const widgetData = {\n    bmName: {\n      value: widget_billing_name,\n      setter: setWidgetBillingName,\n    },\n    bmPrice: {\n      value: widget_billing_price,\n      setter: setWidgetBillingPrice,\n    },\n    bmNoOfPayments: {\n      value: widget_number_of_payment,\n      setter: setWidgetNumberOfPayment,\n    },\n    bmTrialPeriod: {\n      value: widget_trial_period,\n      setter: setWidgetTrialPeriod,\n    },\n    bmFrequency: {\n      value: widget_frequency,\n      setter: setWidgetFrequency,\n    },\n    bmInitialAmount: {\n      value: widget_initial_amount,\n      setter: setWidgetInitialAmount,\n    },\n    bmCurrency: {\n      value: widget_token_currency,\n      setter: setWidgetTokenCurrency,\n    },\n    bmDurationPeriod: {\n      value: durationPeriod,\n      setter: setDurationPeriod,\n    },\n    bmTrialDuration: {\n      value: trailPeriodDuration,\n      setter: setTrailPeriodDuration,\n    },\n  };\n\n  useEffect(() => {\n    setMerchantName(billingModelDetails?.merchantName);\n    setMerchantUrl(billingModelDetails?.merchantUrl);\n  }, [billingModelDetails]);\n\n  const BillingModelTypeForCodeSnippet = {\n    [BillingModelTypes.Recurring]: \"recurringPullPayment\",\n    [BillingModelTypes.RecurringFreeTrial]: \"recurringPullPaymentWithFreeTrial\",\n    [BillingModelTypes.RecurringPaidTrial]: \"recurringPullPaymentWithPaidTrial\",\n    [BillingModelTypes.RecurringDynamic]: \"recurringDynamicPullPayment\",\n    [BillingModelTypes.Single]: \"singlePullPayment\",\n    [BillingModelTypes.SingleDynamic]: \"singleDynamicPullPayment\",\n  };\n\n  useEffect(() => {\n    if (!billingModelType) return;\n    let template = `\n        <!-- !! Please DO NOT Update OR Edit the BillingModelId and BillingModelType !! -->\n        <!-- !! NOTE: The UniqueReference can be used so that the merchant can specify\n            a unique string to so that this subscription can be identified.\n            If the merchant does not specify UniqueReference, one will be created on the smart contract -->`;\n\n    switch (billingModelType) {\n      case String(BillingModelTypes.Single):\n      case String(BillingModelTypes.RecurringPaidTrial):\n      case String(BillingModelTypes.RecurringFreeTrial):\n      case String(BillingModelTypes.Recurring):\n        template += `<PumaPayWidget\n                        BillingModelId=\"${billingModelId}\"\n                        BillingModelType=\"${BillingModelTypeForCodeSnippet[billingModelType]}\"\n                        UniqueReference=\"\"\n                      ></PumaPayWidget>`;\n        break;\n      case String(BillingModelTypes.SingleDynamic):\n        template += `<PumaPayWidget\n                      BillingModelId=\"${billingModelId}\"\n                      BillingModelType=\"${BillingModelTypeForCodeSnippet[billingModelType]}\"\n                      UniqueReference=\"\"\n                      BillingModelName=\"${widget_billing_name}\"\n                      SellingPrice=\"${widget_billing_price}\"\n                      SellingToken=\"${widget_token_currency?.address}\"\n                    ></PumaPayWidget>`;\n        break;\n      case String(BillingModelTypes.RecurringDynamic):\n        template += `<PumaPayWidget\n                        BillingModelId=\"${billingModelId}\"\n                        BillingModelType=\"${\n                          BillingModelTypeForCodeSnippet[billingModelType]\n                        }\"\n                        UniqueReference=\"\"\n                        BillingModelName=\"${widget_billing_name}\"\n                        SellingPrice=\"${widget_billing_price}\"\n                        SellingToken=\"${widget_token_currency?.address}\"\n                        NumberOfPayments=\"${widget_number_of_payment}\"\n                        Frequency=\"${\n                          widget_frequency * durationPeriod.periodInSeconds\n                        }\"\n                        ${\n                          billingModelDetails?.trialType !==\n                          BMTrialTypes.NoTrial\n                            ? `TrialPeriod=\"${\n                                widget_trial_period *\n                                trailPeriodDuration.periodInSeconds\n                              }\"`\n                            : \"\"\n                        }\n                        ${\n                          billingModelDetails?.trialType ===\n                          BMTrialTypes.PaidTrial\n                            ? `InitialAmount=\"${widget_initial_amount}\"`\n                            : \"\"\n                        }\n                      >\n                    </PumaPayWidget>`;\n        break;\n      default:\n        console.error(\"Invalid billing model type!!\");\n        return;\n    }\n    template += `\\n<script src=\"https://assets.pumapay.io/widget${\n      process.env.REACT_APP_ENV === \"TEST\" ? \"-dev/\" : \"/\"\n    }widgetScript.js\"></script>`;\n    setCodeSnippet(template);\n  }, [\n    widget_billing_name,\n    widget_billing_price,\n    widget_number_of_payment,\n    widget_trial_period,\n    widget_frequency,\n    widget_initial_amount,\n    widget_token_currency,\n    durationPeriod,\n    trailPeriodDuration,\n    billingModelType,\n    billingModelId,\n  ]);\n\n  const CopyWidgetPreviewUrl = () => {\n    navigator.clipboard.writeText(codeSnippet).then(\n      () => {\n        // console.log(\"Copying to clipboard was successful!\");\n        setCopyWidgetUrl(true);\n        setTimeout(() => {\n          setCopyWidgetUrl(false);\n        }, 3000);\n      },\n      (err) => {\n        console.error(\"Could not copy text: \" + err);\n      }\n    );\n  };\n  return (\n    <WidgetContent>\n      <Tabs\n        defaultActiveKey=\"widget\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"widget\" title=\"Widget\">\n          <p>{t(\"widgetDescription\")}</p>\n          <p>{t(\"widgetNote\")}</p>\n          <div className={`notice-box ${BillingModelTypes[billingModelType]}`}>\n            <div className=\"billing-model-details\">\n              <h4 className=\"billing-model-title\">\n                {isDynamicBM(BillingModelTypes[billingModelType])\n                  ? widget_billing_name !== \"\"\n                    ? widget_billing_name\n                    : \"{Billing Model Name}\"\n                  : billingModelDetails?.name}\n              </h4>\n              <div className=\"billing-model-merchant-name\">\n                <a\n                  href={\n                    widget_merchantUrl\n                      ? widget_merchantUrl\n                      : billingModelDetails?.merchantUrl\n                  }\n                  rel=\"noreferrer\"\n                  target={\"_blank\"}\n                >\n                  {isDynamicBM(BillingModelTypes[billingModelType])\n                    ? widget_merchantName !== \"\"\n                      ? widget_merchantName\n                      : \"{Merchant Name}\"\n                    : billingModelDetails?.merchantName}\n                </a>\n              </div>\n              <div className=\"billing-model-price\">\n                {isDynamicBM(BillingModelTypes[billingModelType]) ? (\n                  widget_billing_price !== 0 ? (\n                    `${widget_billing_price} ${widget_token_currency?.symbol}`\n                  ) : (\n                    \"{000} {XXX}\"\n                  )\n                ) : (\n                  <>\n                    {billingModelDetails?.amount /\n                      10 **\n                        supportedTokens?.[billingModelDetails?.token]?.decimals}\n                    &nbsp;\n                    {supportedTokens?.[billingModelDetails?.token]?.symbol}\n                  </>\n                )}\n              </div>\n              <div className=\"billing-model-duration\">\n                {isAnySingleBM(BillingModelTypes[billingModelType]) ? (\n                  \"One time payment\"\n                ) : (\n                  <>\n                    {`You will be charged every ${\n                      isDynamicBM(BillingModelTypes[billingModelType])\n                        ? widget_frequency && widget_frequency !== 0\n                          ? humanizeDuration(\n                              widget_frequency *\n                                durationPeriod?.periodInSeconds,\n                              {\n                                largest: 1,\n                                round: true,\n                                unitMeasures: UNIT_MEASURES,\n                              }\n                            )\n                          : \"{XXX}\"\n                        : humanizeDuration(billingModelDetails?.frequency, {\n                            largest: 1,\n                            round: true,\n                            unitMeasures: UNIT_MEASURES,\n                          })\n                    }`}\n                    <br />\n                    {`until ${\n                      isDynamicBM(BillingModelTypes[billingModelType])\n                        ? widget_frequency &&\n                          widget_number_of_payment &&\n                          widget_frequency !== 0 &&\n                          widget_number_of_payment !== 0\n                          ? moment(\n                              moment.now() +\n                                widget_frequency *\n                                  durationPeriod.periodInSeconds *\n                                  widget_number_of_payment *\n                                  1000\n                            ).format(\"ll\")\n                          : \"{XXX}\"\n                        : moment(\n                            moment.now() +\n                              billingModelDetails?.numberOfPayments *\n                                billingModelDetails?.frequency *\n                                1000\n                          ).format(\"ll\")\n                    }`}\n                    <br />\n                    {`(${\n                      isDynamicBM(BillingModelTypes[billingModelType])\n                        ? widget_number_of_payment &&\n                          widget_number_of_payment !== 0\n                          ? widget_number_of_payment\n                          : \"{XXX}\"\n                        : billingModelDetails?.numberOfPayments\n                    } charges in total)`}\n                    {(isDynamicBM(BillingModelTypes[billingModelType]) ||\n                      isRecurringWithTrial(\n                        BillingModelTypes[billingModelType]\n                      )) && (\n                      <>\n                        <br />\n                        {widget_trial_period === BMTrialTypes.NoTrial ||\n                        billingModelDetails?.trialType === BMTrialTypes.NoTrial\n                          ? \"\"\n                          : BillingModelTypes[billingModelType] ===\n                              BillingModelTypes.RecurringFreeTrial ||\n                            billingModelDetails?.trialType ===\n                              BMTrialTypes.FreeTrial ||\n                            widget_trial_period === BMTrialTypes.FreeTrial\n                          ? \"You have a free trial\"\n                          : `You have a trial (${\n                              isDynamicBM(BillingModelTypes[billingModelType])\n                                ? widget_initial_amount\n                                  ? widget_initial_amount\n                                  : \"{XXX}\"\n                                : fromTokenDecimals(\n                                    billingModelDetails?.initialAmount.toString(),\n                                    supportedTokens?.[\n                                      billingModelDetails?.token\n                                    ]?.decimals.toString()\n                                  )\n                            } ${\n                              supportedTokens?.[billingModelDetails?.token]\n                                ?.symbol\n                                ? supportedTokens?.[billingModelDetails?.token]\n                                    ?.symbol\n                                : widget_token_currency.symbol\n                            })`}\n                        {widget_trial_period === BMTrialTypes.NoTrial ||\n                        billingModelDetails?.trialType === BMTrialTypes.NoTrial\n                          ? \"\"\n                          : \" of \"}\n                        {isDynamicBM(BillingModelTypes[billingModelType])\n                          ? widget_trial_period && widget_trial_period !== 0\n                            ? ` ${widget_trial_period} ${trailPeriodDuration.label}`\n                            : widget_trial_period === BMTrialTypes.NoTrial ||\n                              billingModelDetails?.trialType ===\n                                BMTrialTypes.NoTrial\n                            ? \"\"\n                            : \"{XXX}\"\n                          : humanizeDuration(billingModelDetails?.trialPeriod, {\n                              largest: 1,\n                              round: true,\n                              unitMeasures: UNIT_MEASURES,\n                            })}\n                      </>\n                    )}\n                    <br />\n                    <br />\n                    Note: You can cancel your subscription at any time\n                  </>\n                )}\n              </div>\n            </div>\n            <button className=\"connect-btn\">Connect Wallet</button>\n            <p className=\"power\">Powered by PumaPay v3.0</p>\n          </div>\n        </Tab>\n        {!isPreview && (\n          <Tab\n            eventKey=\"code\"\n            title=\"Code\"\n            tabClassName={isPreview ? \"disabled\" : \"\"}\n            disabled={isPreview}\n          >\n            <p>Copy the code snippet and add it to your website</p>\n            <div className=\"code-wrap\">\n              <pre>\n                <code>\n                  <span className=\"tags\">&lt;PumaPayWidget</span>\n                  <div className=\"body\">\n                    <span className=\"attribute\">BillingModelId</span>=\n                    {`\"${billingModelId}\"`}\n                    <br />\n                    <span className=\"attribute\">BillingModelType</span>=\n                    {`\"${BillingModelTypeForCodeSnippet[billingModelType]}\"`}\n                    <br />\n                    <span className=\"attribute\">UniqueReference</span>={`\"\"`}\n                    <br />\n                    {isDynamicBM(BillingModelTypes[billingModelType]) && (\n                      <>\n                        <span className=\"attribute\">BillingModelName</span>=\n                        {`\"${widget_billing_name}\"`}\n                        <br />\n                        <span className=\"attribute\">SellingPrice</span>=\n                        {`\"${widget_billing_price}\"`}\n                        <br />\n                        <span className=\"attribute\">SellingToken</span>=\n                        {`\"${widget_token_currency?.address}\"`}\n                        <br />\n                        {BillingModelTypes[billingModelType] ===\n                          BillingModelTypes.RecurringDynamic && (\n                          <>\n                            <span className=\"attribute\">NumberOfPayments</span>=\n                            {`\"${widget_number_of_payment}\"`}\n                            <br />\n                            <span className=\"attribute\">Frequency</span>=\n                            {`\"${\n                              widget_frequency * durationPeriod.periodInSeconds\n                            }\"`}\n                            <br />\n                            {billingModelDetails?.trialType !==\n                              BMTrialTypes.NoTrial && (\n                              <>\n                                <span className=\"attribute\">TrialPeriod</span>=\n                                {`\"${\n                                  widget_trial_period *\n                                  trailPeriodDuration.periodInSeconds\n                                }\"`}\n                                <br />\n                              </>\n                            )}\n                            {billingModelDetails?.trialType ==\n                              BMTrialTypes.PaidTrial && (\n                              <>\n                                <span className=\"attribute\">InitialAmount</span>\n                                ={`\"${widget_initial_amount}\"`}\n                                <br />\n                              </>\n                            )}\n                          </>\n                        )}\n                      </>\n                    )}\n                  </div>\n                  &gt;\n                  <span className=\"tags\">&lt;/PumaPayWidget&gt; </span>\n                  <br />\n                  <span className=\"tags\">&lt;script</span>\n                  <div className=\"body\">\n                    <span className=\"attribute\">src</span>\n                    =\"https://assets.pumapay.io/widget\n                    {process.env.REACT_APP_ENV === \"TEST\" ? \"-dev/\" : \"/\"}\n                    widgetScript.js\"\n                  </div>\n                  &gt;\n                  <span className=\"tags\">&lt;/script&gt;</span>\n                </code>\n              </pre>\n            </div>\n          </Tab>\n        )}\n        {isDynamicBM(BillingModelTypes[billingModelType]) &&\n          !isPreview &&\n          IS_CONFIG_FEAT_ENABLED && (\n            <Tab\n              eventKey=\"config\"\n              title=\"Configuration\"\n              tabClassName={isPreview ? \"disabled\" : \"\"}\n              disabled={isPreview}\n            >\n              <p>You can configure the dynamic fields of your billing model </p>\n              <ConfigContent\n                billingModelId={billingModelId}\n                billingModelType={billingModelType}\n                billingModelDetails={billingModelDetails}\n                widgetData={widgetData}\n              />\n            </Tab>\n          )}\n        {!isPreview && (\n          <Tab\n            eventKey=\"css\"\n            title=\"CSS\"\n            tabClassName={isPreview ? \"disabled\" : \"\"}\n            disabled={isPreview}\n          >\n            <p>\n              You will be able to customise the look and feel of the widget.\n            </p>\n            <div style={{ width: \"100%\", textAlign: \"center\" }}>\n              Coming Soon!\n            </div>\n          </Tab>\n        )}\n      </Tabs>\n\n      {!isPreview && (\n        <div className=\"code-copy\">\n          <ButtonPrimary\n            id=\"CopyButtonPrimary\"\n            onClick={() => CopyWidgetPreviewUrl()}\n          >\n            {copyWidgetUrl ? \"Copied\" : `Copy`}\n          </ButtonPrimary>\n        </div>\n      )}\n    </WidgetContent>\n  );\n};\n\nexport default MerchantWidgetContainer;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { NavToggle } from \"../App\";\nimport {\n  useBillingModel,\n  useSubscriptionsPerBM,\n} from \"../../state/my-billing-models/hooks\";\nimport { BillingModelTypes, SubscriptionTableTypes } from \"../../utils\";\nimport { useLocation } from \"react-router\";\nimport edit from \"../../assets/images/edit-icon.svg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport BillingInfoCard from \"../../components/BillingInfoCard\";\nimport MerchantWidgetContainer from \"../../components/MerchantWidget\";\nimport SubscriptionsTable from \"../../components/SubscriptionsTable\";\nimport ArrowRight from \"../../assets/images/back-arrow.svg\";\nimport { AutoColumn } from \"../../components/Column\";\nimport Loader from \"../../components/Loader\";\n\nconst StyledLink = styled.a`\n  &:hover {\n    .sidebar-text {\n      color: #7023FF;\n    }\n    .default {\n      display: none;\n    }\n    .focus {\n      display: inline;\n    }\n  }\n  display: flex;\n  font-size: 13px;\n  margin: auto 0;\n  text-decoration: none;\n  .focus {\n    display: none;\n  }\n  img {\n    margin-right: 10px;\n  }\n}`;\n\nconst MainContent = styled.div`\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n    margin-top: 1rem;\n  }\n\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding-left: 100px;\n  padding-right: 20px;\n\n  .icon-wrap {\n    cursor: pointer;\n    float: right;\n  }\n\n  .top-wrap > .aside-total {\n    float: left;\n    width: 60%;\n  }\n\n  .loader-wrapper {\n    line-height: 30vh;\n\n    svg {\n      height: 2rem;\n      width: 2rem;\n    }\n  }\n`;\n\nexport default function MerchantBillingModelDetails() {\n  const selectNavToggle = useContext(NavToggle);\n  const history = useHistory();\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n\n  let billingModelType = query.get(\"billing-model-type\");\n  let billingModelId = query.get(\"billing-model-id\");\n\n  const subscriptions = useSubscriptionsPerBM(\n    BillingModelTypes[billingModelType],\n    billingModelId\n  );\n  const billingModelDetails = useBillingModel(\n    BillingModelTypes[billingModelType],\n    billingModelId\n  );\n  // console.log(subscriptions, billingModelDetails);\n\n  const editBillingHandler = (billingModelDetails) => {\n    history.push({\n      pathname: `/merchant/${\n        billingModelType === String(BillingModelTypes.Single)\n          ? \"single\"\n          : \"recurring\"\n      }-billing/edit-billing-model`,\n      search: `?billing-model-type=${billingModelType}&billing-model-id=${billingModelId}`,\n      state: billingModelDetails,\n    });\n  };\n\n  return (\n    <>\n      <MainContent className={selectNavToggle ? \" open\" : \"\"}>\n        {billingModelDetails === null ? (\n          <AutoColumn gap=\"lg\" justify=\"center\" style={{ height: \"30vh\" }}>\n            <div className=\"loader-wrapper\">\n              <Loader />\n            </div>\n          </AutoColumn>\n        ) : (\n          <div className=\"tap-main\">\n            <div className=\"icon-wrap\">\n              {/* <img src={pause} alt=\"pause\" /> */}\n              {/* <img src={stop} alt=\"stop\" /> */}\n              {/* <img src={code} alt='code' onClick={() => setModalOpen(!modalOpen)} /> */}\n              {billingModelType !== String(BillingModelTypes.SingleDynamic) &&\n                billingModelType !==\n                  String(BillingModelTypes.RecurringDynamic) && (\n                  <img\n                    src={edit}\n                    alt=\"edit\"\n                    onClick={() => editBillingHandler(billingModelDetails)}\n                  />\n                )}\n            </div>\n            <div className=\"top-wrap row\">\n              <AutoColumn gap=\"lg\" justify=\"flex-start\">\n                <StyledLink\n                  style={{ color: \"#756F82\", marginBottom: \"1rem\" }}\n                  as={Link}\n                  to={`/merchant/dashboard`}\n                >\n                  <img src={ArrowRight} alt=\"arrow\" /> Back to Dashboard\n                </StyledLink>\n              </AutoColumn>\n              <div className=\"billing-card-info-container col-md-6\">\n                {billingModelType !== String(BillingModelTypes.SingleDynamic) &&\n                  billingModelType !==\n                    String(BillingModelTypes.RecurringDynamic) && (\n                    <BillingInfoCard\n                      billingModelDetails={billingModelDetails}\n                    />\n                  )}\n              </div>\n              <div className=\"widget-container col-md-6\">\n                <MerchantWidgetContainer\n                  billingModelType={BillingModelTypes[billingModelType]}\n                  billingModelId={billingModelId}\n                  billingModelDetails={billingModelDetails}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        <SubscriptionsTable\n          type={SubscriptionTableTypes.MyCustomers}\n          billingModelType={BillingModelTypes[billingModelType]}\n          billingModel={billingModelDetails}\n          subscriptionsData={subscriptions}\n        />\n      </MainContent>\n    </>\n  );\n}\n"],"sourceRoot":""}