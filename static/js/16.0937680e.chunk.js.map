{"version":3,"sources":["state/supported-tokens/hooks.tsx","components/SupportedLifeCyle/index.tsx","state/my-billing-models/hooks.tsx","components/BillingModelsTable/index.tsx","pages/MerchantDashboard/index.tsx"],"names":["useSupportedTokens","chainId","useActiveWeb3React","state","useSelector","supported_tokens","UNIT_MEASURES","y","mo","w","d","h","m","s","DEFAULT_PERIOD_VALUE","label","periodInSeconds","supportedLifecycles","env","statusOptionsValuesForMerchantDashboard","BillingModelTypeTitles","BillingModelTypes","Recurring","RecurringFreeTrial","RecurringPaidTrial","RecurringDynamic","Single","SingleDynamic","id","value","useAllMyBillingModels","my_billing_models","billingModels","bmType","Object","keys","map","index","push","useBillingModel","billingModelType","billingModelId","useBMSubscription","bmSubscriptionId","subscriptions","find","el","useSubscriptionsPerBM","TableTopWrap","styled","div","StyledTable","table","StyledLink","a","TABLE_TITLES","BillingModelsTable","supportedTokens","useState","statusOptions","billingModelTypeOptions","sortKey","setSortKey","active","setActive","dynamicSort","property","sortOrder","substr","b","status","setStatus","setBillingModelType","currencyType","setCurrencyType","setFilterByType","type","event","target","filterHandler","entry","String","token","suspendTimestamp","deactivationTimestamp","Number","counter","setCounter","rowCount","setRowCount","currentPage","setCurrentPage","className","to","onChange","length","arr","address","symbol","title","onClick","sortingHandler","undefined","colSpan","Loader","size","sort","filter","data","begin","end","slice","currentData","row","uniqueReference","as","Link","isDynamicBM","name","amount","convertDigitIntoZero","decimals","totalPayments","subscriptionIDs","e","parseInt","Math","max","src","Arrow","alt","maxPage","ceil","min","MainContent","MerchantDashboard","t","useTranslation","selectNavToggle","useContext","NavToggle","gap","justify","InfoCard","info"],"mappings":"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","file":"static/js/16.0937680e.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { AppState } from '../index';\nimport { SupportedTokenDetails } from './reducer';\n\nexport function useSupportedTokens(): {\n  [tokenAddress: string]: SupportedTokenDetails;\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['supported_tokens']>(state => state.supported_tokens);\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import { BillingModelTypes, BillingModelTypeTitles } from '../../utils';\n\nexport const UNIT_MEASURES = {\n  y: 31536000,\n  mo: 2592000,\n  w: 604800,\n  d: 86400,\n  h: 3600,\n  m: 60,\n  s: 1,\n};\n\nexport const DEFAULT_PERIOD_VALUE = {\n  label: 'Day(s)',\n  periodInSeconds: 86400,\n};\n\nexport const supportedLifecycles = [\n  {\n    label: 'Minute(s)',\n    periodInSeconds: 60,\n    env: 'TEST',\n  },\n  {\n    label: 'Hour(s)',\n    periodInSeconds: 3600, // an hour has 60m => 60 * 60\n    env: 'TEST',\n  },\n  {\n    label: 'Day(s)',\n    periodInSeconds: 86400, // an day has 24h => 3600 * 24\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Week(s)',\n    periodInSeconds: 604800, // a week has 7d => 86400 * 7\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Month(s)',\n    periodInSeconds: 2592000,\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Quarter(s)',\n    periodInSeconds: 7776000,\n    env: 'TEST,PROD',\n  },\n  {\n    label: 'Year(s)',\n    periodInSeconds: 31536000,\n    env: 'TEST,PROD',\n  },\n];\n\nexport const billingModelTypeOptionsValues = [\n  { id: 0, value: BillingModelTypeTitles['All'] },\n  { id: 1, value: BillingModelTypeTitles[BillingModelTypes.Recurring] },\n  {\n    id: 2,\n    value: BillingModelTypeTitles[BillingModelTypes.RecurringFreeTrial],\n  },\n  {\n    id: 3,\n    value: BillingModelTypeTitles[BillingModelTypes.RecurringPaidTrial],\n  },\n  { id: 4, value: BillingModelTypeTitles[BillingModelTypes.RecurringDynamic] },\n  { id: 5, value: BillingModelTypeTitles[BillingModelTypes.Single] },\n  { id: 6, value: BillingModelTypeTitles[BillingModelTypes.SingleDynamic] },\n];\n\nexport const statusOptionsValuesForMerchantDashboard = [\n  { id: 0, value: 'Status: All' },\n  { id: 1, value: 'ACTIVE' },\n  { id: 2, value: 'INACTIVE' },\n  { id: 3, value: 'SUSPENDED' },\n];\nexport const statusOptionsForSubscriptionDashboard = [\n  { id: 0, value: 'Status: All' },\n  { id: 1, value: 'ACTIVE' },\n  { id: 2, value: 'CANCELLED' },\n];\n","import { useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { AppState } from '../index';\nimport { SerializedBillingModel, SerializedSubscriptionDetails } from '../../utils/blockchain-serializers';\nimport { BillingModelTypes } from '../../utils';\n\nexport function useAllMyBillingModels(): SerializedBillingModel[] {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n\n  if (!chainId) return [];\n\n  let billingModels: SerializedBillingModel[] = [];\n  for (let bmType in BillingModelTypes) {\n    if (!state[chainId] || !state[chainId][bmType]) {\n      continue;\n    }\n    Object.keys(state[chainId][bmType]).map((value, index) => {\n      billingModels.push(state[chainId][bmType][value]);\n    });\n  }\n\n  return billingModels;\n}\n\nexport function useBillingModel(\n  billingModelType: BillingModelTypes,\n  billingModelId: string,\n): SerializedBillingModel | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][billingModelType] ||\n    !state[chainId][billingModelType][billingModelId]\n  )\n    return null;\n\n  return state[chainId][billingModelType][billingModelId];\n}\n\nexport function useBMSubscription(\n  billingModelType: BillingModelTypes,\n  billingModelId: string,\n  bmSubscriptionId: string,\n): SerializedSubscriptionDetails | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][billingModelType] ||\n    !state[chainId][billingModelType][billingModelId]\n  )\n    return null;\n\n  return state[chainId][billingModelType][billingModelId].subscriptions.find(el => el.id === bmSubscriptionId);\n}\n\nexport function useSubscriptionsPerBM(\n  billingModelType: BillingModelTypes,\n  billingModelId: string,\n): SerializedSubscriptionDetails[] {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][billingModelType] ||\n    !state[chainId][billingModelType][billingModelId]\n  )\n    return [];\n\n  return state[chainId][billingModelType][billingModelId].subscriptions;\n}\n\nexport function useSingleBMCount(): number | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][BillingModelTypes.Single] ||\n    !state[chainId][BillingModelTypes.SingleDynamic]\n  )\n    return null;\n  const singleCount = Object.keys(state[chainId][BillingModelTypes.Single]).length;\n  const singleDynamicCount = Object.keys(state[chainId][BillingModelTypes.SingleDynamic]).length;\n\n  return singleCount + singleDynamicCount;\n}\n\nexport function useRecurringBMCount(): number | null {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n  if (\n    !chainId ||\n    !state[chainId] ||\n    !state[chainId][BillingModelTypes.Recurring] ||\n    !state[chainId][BillingModelTypes.RecurringDynamic] ||\n    !state[chainId][BillingModelTypes.RecurringFreeTrial] ||\n    !state[chainId][BillingModelTypes.RecurringPaidTrial]\n  )\n    return null;\n\n  const recurringCount = Object.keys(state[chainId][BillingModelTypes.Recurring]).length;\n  const recurringDynamicCount = Object.keys(state[chainId][BillingModelTypes.RecurringDynamic]).length;\n  const recurringFreeTrialCount = Object.keys(state[chainId][BillingModelTypes.RecurringFreeTrial]).length;\n  const recurringPaidTrialCount = Object.keys(state[chainId][BillingModelTypes.RecurringPaidTrial]).length;\n\n  return recurringCount + recurringDynamicCount + recurringFreeTrialCount + recurringPaidTrialCount;\n}\n\nexport function useAllMyBillingModelsPerBMType(): {\n  [billingModelType: string]: {\n    [billingModelId: string]: SerializedBillingModel;\n  };\n} {\n  const { chainId } = useActiveWeb3React();\n  const state = useSelector<AppState, AppState['my_billing_models']>(state => state.my_billing_models);\n  return chainId ? state[chainId] ?? {} : {};\n}\n","import { Link } from 'react-router-dom';\nimport { CSVLink } from 'react-csv';\nimport Loader from '../Loader';\nimport { BillingModelTypes, BillingModelTypeTitles, isAnyRecurringBM, isDynamicBM, weiToEther } from '../../utils';\nimport { convertDigitIntoZero } from '../../hooks';\nimport styled from 'styled-components';\nimport { useSupportedTokens } from '../../state/supported-tokens/hooks';\nimport { useState } from 'react';\nimport Arrow from '../../assets/images/Vector.png';\nimport { statusOptionsValuesForMerchantDashboard } from '../SupportedLifeCyle';\n\nconst TableTopWrap = styled.div`\n  body {\n    color: #000;\n  }\n  display: flex;\n  align-items: center;\n  h3 {\n    font-weight: 400;\n    width: 30%;\n  }\n  .new-billing-model {\n    font-size: 14px;\n    color: #000;\n    a {\n      padding: 0px;\n      border-radius: 50%;\n      width: 32px;\n      height: 32px;\n      border: 0;\n      background: #7023ff;\n      color: #fff;\n      font-size: 26px;\n      line-height: 28px;\n      margin-left: 10px;\n      cursor: pointer;\n      text-decoration: none;\n      display: inline-block;\n      text-align: center;\n      :hover {\n        background: #9e70f5;\n      }\n    }\n  }\n  .export {\n    margin-left: 10px;\n  }\n  .csv-link {\n    padding: 10px 15px;\n    border-radius: 20px;\n    border: 1px solid #d9d9d9;\n    margin: 0 20px;\n    text-decoration: none;\n    font-size: 13px;\n    color: inherit;\n  }\n`;\nconst StyledTable = styled.table`\n  .empty-table-row {\n    text-align: center;\n    font-size: 1rem;\n    line-height: 2rem;\n  }\n  border-collapse: collapse;\n  border-spacing: none;\n  width: 100%;\n  border: 1px solid #ddd;\n  caption-side: bottom;\n  empty-cell: show | hide;\n  empty-cell is a property of table or the cells themselves\n \nvertical-align: baseline | sub | super | text-top |\n                text-bottom | middle | top | bottom |\n                <percentage> | <length>\n \n   tbody {\n    vertical-align: top;\n  }\n  td,\n  th {\n    border: 1px solid #ccc;\n  }\n  thead tr th:nth-child(3) {\n    width: 20%;\n  }\n\n  thead tr th:nth-child(7) {\n    width: 10%;\n  }\n  td {\n    padding: 10px 10px;\n    font-size: 12px;\n    border: 1px solid #eae8ee;\n    color: #756f82;\n    :first-child {\n      border-left: none;\n    }\n    :last-child {\n      border-right: none;\n    }\n  }\n  th {\n    color: #000;\n    padding: 10px 10px;\n    font-size: 14px;\n    border: 1px solid #eae8ee;\n    text-align: left;\n    font-weight: normal;\n    :first-child {\n      border-left: none;\n    }\n    :last-child {\n      border-right: none;\n    }\n  }\n  tbody {\n    position: relative;\n  }\n\n  tbody tr {\n    background-color: #fff;\n    :hover {\n      background-color: #f7f6f9;\n    }\n  }\n  thead > tr {\n    background-color: #f7f6f9;\n  }\n  tbody > span {\n    position: absolute;\n    left: 48%;\n    top: 22px;\n  }\n`;\nconst StyledLink = styled.a`\n  &:hover {\n    .sidebar-text {\n      color: #7023ff;\n    }\n    .default {\n      display: none;\n    }\n    .focus {\n      display: inline;\n    }\n  }\n  display: flex;\n  margin-bottom: 2px;\n  text-decoration: none;\n  .focus {\n    display: none;\n  }\n  img {\n    margin-right: 10px;\n  }\n`;\n\nconst TABLE_TITLES = [\n  'Unique Ref. ID.',\n  'Billing Model',\n  'Type',\n  'Price',\n  'Charged',\n  // \"Settlement Currency\",\n  'Sales',\n  'Status',\n];\n\nconst BillingModelsTable = ({ billingModels }) => {\n  const supportedTokens = useSupportedTokens();\n  const [statusOptions, setStatusOptions] = useState(statusOptionsValuesForMerchantDashboard);\n\n  const [billingModelTypeOptions, setBillingModelTypeOptions] = useState(BillingModelTypeTitles);\n\n  // CSV\n  const headers = [\n    { label: 'Amount', key: 'amount' },\n    { label: 'Billing Model Type', key: 'billingModelType' },\n    { label: 'Id', key: 'id' },\n    { label: 'Name', key: 'name' },\n    { label: 'Status', key: 'status' },\n    { label: 'Token', key: 'token' },\n    { label: 'Subscriptions', key: 'subscriptionIDs' },\n  ];\n\n  const csvReport = {\n    data: billingModels || [],\n    headers: headers,\n    filename: 'billing_models.csv',\n  };\n\n  // SORTING\n  const [sortKey, setSortKey] = useState('');\n  const [active, setActive] = useState(false);\n\n  const sortingHandler = title => {\n    if (title === 'Billing Model' && active) {\n      setSortKey('name');\n      setActive(!active);\n    } else {\n      setSortKey('-name');\n      setActive(!active);\n    }\n  };\n\n  const dynamicSort = property => {\n    let sortOrder = 1;\n    if (property[0] === '-') {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return function (a, b) {\n      let result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  const [status, setStatus] = useState(null);\n  const [billingModelType, setBillingModelType] = useState(null);\n  const [currencyType, setCurrencyType] = useState(null);\n\n  const setFilterByType = (type, event) => {\n    if (type === 'billingModelType') {\n      setBillingModelType(event.target.value);\n    }\n    if (type === 'currency') {\n      setCurrencyType(event.target.value);\n    }\n    if (type === 'status') {\n      setStatus(event.target.value);\n    }\n  };\n\n  const filterHandler = entry => {\n    if (status) {\n      switch (status) {\n        case 'ACTIVE':\n          return (\n            String(entry.suspendTimestamp) === '0' ||\n            entry.suspendTimestamp === null ||\n            String(entry.deactivationTimestamp) === '0' ||\n            entry.deactivationTimestamp === null\n          );\n        case 'INACTIVE':\n          return Number(entry.deactivationTimestamp) > 0;\n        case 'SUSPENDED':\n          return Number(entry.suspendTimestamp) > 0;\n        default:\n          return entry;\n      }\n    } else if (billingModelType) {\n      if (billingModelType === 'All') return entry;\n      return String(entry.billingModelType) === String(billingModelType);\n    } else if (currencyType) {\n      if (currencyType === 'Currency All') return entry;\n      return entry.token === currencyType;\n    } else {\n      return entry;\n    }\n  };\n\n  // Pagination\n  const [counter, setCounter] = useState<number>(1);\n  const [rowCount, setRowCount] = useState<number>(10);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentData = data => {\n    const begin = (currentPage - 1) * rowCount;\n    const end = begin + rowCount;\n\n    return data?.slice(begin, end);\n  };\n\n  const next = () => {\n    const maxPage = Math.ceil((billingModels?.length || 1) / rowCount);\n    if (counter + rowCount < billingModels?.length) {\n      setCounter(counter + rowCount);\n    }\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n  };\n\n  const prev = () => {\n    if (counter != 1) {\n      setCounter(counter - rowCount);\n    }\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n  };\n\n  return (\n    <>\n      <TableTopWrap className=\"table-top\">\n        <h3> All Billing Models</h3>{' '}\n        <p className=\"new-billing-model\">\n          Create Billing Model\n          <Link to=\"/merchant/create/choose-billing-model-type\">+</Link>{' '}\n        </p>\n        <div className=\"select-drop\">\n          <select onChange={value => setFilterByType('billingModelType', value)}>\n            {billingModelTypeOptions &&\n              Object.keys(billingModelTypeOptions).map((value, index) => {\n                return (\n                  <option key={index} value={value}>\n                    {billingModelTypeOptions[value]}\n                  </option>\n                );\n              })}\n          </select>\n          <select onChange={value => setFilterByType('currency', value)}>\n            <option value={'Currency All'}>Nominated Currency: All</option>\n            {Object.keys(supportedTokens).length > 0 ? (\n              supportedTokens &&\n              Object.keys(supportedTokens)?.map(function (value, index, arr) {\n                return (\n                  <option key={index} value={supportedTokens[value].address}>\n                    {supportedTokens[value].symbol}\n                  </option>\n                );\n              })\n            ) : (\n              <option>Loading...</option>\n            )}\n          </select>\n          <select onChange={value => setFilterByType('status', value)}>\n            {statusOptions?.map(function (value, index) {\n              return (\n                <option key={index} value={value.value}>\n                  {value.value}\n                </option>\n              );\n            })}\n          </select>\n          {/*<div className=\"export\">*/}\n          {/*  Export{\" \"}*/}\n          {/*  <CSVLink className=\"csv-link\" {...csvReport}>*/}\n          {/*    CSV*/}\n          {/*  </CSVLink>*/}\n          {/*</div>*/}\n        </div>\n      </TableTopWrap>\n\n      <StyledTable>\n        <thead>\n          <tr>\n            {TABLE_TITLES.map((title, index) => (\n              <th key={index} onClick={() => sortingHandler(title)}>\n                {title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        {billingModels === undefined || billingModels === null ? (\n          <tbody>\n            <tr>\n              <td colSpan={8}>\n                <div>\n                  <Loader className=\"loader-main\" size={'3rem'} />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        ) : (\n          <tbody>\n            {billingModels?.sort(dynamicSort(sortKey))?.filter(filterHandler).length > 0 ? (\n              currentData(billingModels?.sort(dynamicSort(sortKey))?.filter(filterHandler)).map((row, index) => (\n                <tr key={index}>\n                  <td>{row.uniqueReference}</td>\n\n                  <td>\n                    <StyledLink\n                      className=\"active\"\n                      as={Link}\n                      to={`/merchant/billing-model-details?billing-model-type=${row.billingModelType}&billing-model-id=${row.id}`}\n                    >\n                      {' '}\n                      {isDynamicBM(row.billingModelType) ? 'Dynamic' : row.name ? row.name : 'Billing Model'}\n                    </StyledLink>\n                  </td>\n\n                  <td> {BillingModelTypeTitles[row.billingModelType]}</td>\n\n                  <td>\n                    {supportedTokens[row?.token]\n                      ? (row.amount\n                          ? row.amount / convertDigitIntoZero(supportedTokens[row?.token]?.decimals)\n                          : ' PMA') +\n                        '  ' +\n                        supportedTokens[row?.token]?.symbol\n                      : 'Dynamic'}\n                  </td>\n\n                  <td>\n                    {!isDynamicBM(BillingModelTypes[row.billingModelType])\n                      ? (row?.amount / convertDigitIntoZero(supportedTokens[row?.token]?.decimals)) *\n                          row?.totalPayments +\n                        ' ' +\n                        supportedTokens[row?.token]?.symbol\n                      : 'Dynamic'}\n                  </td>\n\n                  {/* <td>#NA</td> */}\n                  <td>{row?.subscriptionIDs?.length}</td>\n\n                  {(row.deactivationTimestamp !== null && Number(row.deactivationTimestamp) > 0) ||\n                  (row.suspendTimestamp !== null && Number(row.suspendTimestamp) > 0) ? (\n                    <>\n                      {row.deactivationTimestamp !== null && Number(row?.suspendTimestamp) > 0 ? (\n                        <td> SUSPENDED </td>\n                      ) : (\n                        <td> INACTIVE </td>\n                      )}\n                    </>\n                  ) : (\n                    <td> ACTIVE </td>\n                  )}\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={12}>\n                  <div className=\"empty-table-row\">\n                    <span>No Billing Models</span>\n                  </div>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        )}\n      </StyledTable>\n\n      <div className=\"pagination\">\n        <span>\n          Show:\n          <select\n            onChange={e => {\n              setRowCount(parseInt(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"10\">10 Rows</option>\n            <option value=\"25\">25 Rows</option>\n            <option value=\"50\">50 Rows</option>\n            <option value=\"100\">100 Rows</option>)\n          </select>\n        </span>\n        <div className=\"navigation\">\n          <p onClick={prev}>\n            <img src={Arrow} alt=\"arrows\" id=\"navigationOne\" />\n          </p>\n          <p onClick={next}>\n            <img src={Arrow} alt=\"arrows\" />\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BillingModelsTable;\n","import { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { AutoColumn } from '../../components/Column';\nimport { InfoCard } from '../../components/InfoCard';\nimport styled from 'styled-components';\nimport { NavToggle } from '../App';\nimport { useAllMyBillingModels } from '../../state/my-billing-models/hooks';\nimport BillingModelsTable from '../../components/BillingModelsTable';\n\nconst MainContent = styled.div`\n  color: #000;\n  &.open {\n    padding-left: 220px;\n    padding-right: 2rem;\n  }\n\n  .pagination {\n    margin-bottom: 50px;\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px;\n\n    > span {\n      display: flex;\n      margin: auto 0;\n    }\n    select {\n      border: none;\n    }\n    .navigation {\n      display: flex;\n      p {\n        background: #ededed;\n        border-radius: 5px;\n        padding: 8px 14px;\n        margin: 0 5px;\n        #navigationOne {\n          transform: rotate(180deg);\n        }\n      }\n    }\n  }\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding-left: 100px;\n\n  .top-wrap {\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 50px;\n    > div:first-child {\n      width: 55%;\n      > div {\n        background-color: #fff !important;\n        color: #000 !important;\n        border: none !important;\n      }\n    }\n  }\n  .table-top .select-drop select {\n    padding: 10px;\n    border-radius: 20px;\n    border: 1px solid #d9d9d9;\n    margin: 0 20px;\n    font-size: 13px;\n  }\n  .select-drop {\n    display: flex;\n  }\n  .export {\n    white-space: nowrap;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n  }\n  table {\n    position: relative;\n  }\n  .loader-main {\n    position: relative;\n    margin: 1rem auto;\n    left: 50%;\n  }\n  span.dropdown-wrapper {\n    border: 1px solid #d9d9d9;\n    padding: 7px 20px 7px 10px;\n    border-radius: 20px;\n    position: relative;\n  }\n\n  span.dropdown-wrapper:after {\n    content: '';\n    position: absolute;\n    width: 5px;\n    height: 5px;\n    border-bottom: 1.5px solid #b1b0b0;\n    border-right: 1.5px solid #b1b0b0;\n    right: 6px;\n    top: 50%;\n    transform: translate(0, -50%) rotate(45deg);\n  }\n  .custom-dropdown {\n    position: absolute;\n    right: 10px;\n    display: flex;\n    flex-direction: column;\n    z-index: 3;\n    background: #fff;\n    padding: 10px 15px;\n    border: 1px solid #ddd;\n    top: 27px;\n  }\n  @media screen and (max-width: 1366px) {\n    .new-billing-model {\n      font-size: 11px;\n      display: flex;\n      white-space: nowrap;\n      align-items: center;\n    }\n    .table-top .select-drop select {\n      font-size: 11px;\n      padding: 7px;\n    }\n    .new-billing-model a {\n      width: 22px;\n      height: 22px;\n      font-size: 22px;\n      line-height: 21px;\n    }\n    h3 {\n      font-size: 14px;\n    }\n    .export {\n      font-size: 11px;\n    }\n  }\n`;\n\nexport default function MerchantDashboard() {\n  const { t } = useTranslation();\n  const selectNavToggle = useContext(NavToggle);\n  const billingModels = useAllMyBillingModels();\n\n  return (\n    <>\n      <MainContent className={selectNavToggle ? ' open' : ''}>\n        <div className=\"top-wrap\">\n          <AutoColumn gap=\"lg\" justify=\"flex-start\">\n            <InfoCard title={t('billingModel')} info={t('setDescriptionForBillingModel')} />\n          </AutoColumn>\n        </div>\n        <BillingModelsTable billingModels={billingModels} />\n      </MainContent>\n    </>\n  );\n}\n"],"sourceRoot":""}